[{"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\index.js":"1","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Opened\\Personalized_data_ProfileSection.js":"2","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Opened\\Personalized_data_progresser.js":"3","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Toggler\\TabNevBar_OnOff_Toggler.js":"4","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\Personalized_data_Part.js":"5","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Closed\\Personalized_data_progresser.js":"6","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\LocationSearch_filter_Part.js":"7","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Main_Logo_&_SearchBar\\Main_Logo_&_SearchBar.js":"8","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Main_Logo_&_SearchBar\\Main_Logo_&_SearchBar_Components\\SearchBar.js":"9","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Main_Logo_&_SearchBar\\Main_Logo_&_SearchBar_Components\\Main_logo.js":"10","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Part.js":"11","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Closed\\Filter_TabBar_Closed_progresser.js":"12","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Closed\\Filter_TabBar_Closed_Components\\Filter_TabBar_Container.js":"13","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Closed\\Filter_TabBar_Closed_Components\\Closed_Toggler_Button.js":"14","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_progresser.js":"15","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Opened_Toggler_Button.js":"16","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Filter_TabBar_Container.js":"17","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Filter_Option_Selector.js":"18","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Keyword_popup.js":"19","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\2_reducer\\reducer.js":"20","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\Google_Map.js":"21","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\Google_Map_Markers.js":"22","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\nearbySearch_Service_Components\\nearbySearchResult_Marker.js":"23","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\nearbySearch_Service_Components\\nearbySearchResult_TabResults.js":"24","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\GetDetail_page_integrator.js":"25","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Default_Info.js":"26","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Detail_Image_Reviews_section.js":"27","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Detail_Video_section.js":"28","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Detail_Journey_section.js":"29","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Three_Option_integrated_box.js":"30","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Post_Video.js":"31","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Post_reviews.js":"32","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Post_Journey.js":"33","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personalized_Data_Page_integrator.js":"34","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Account.js":"35","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Reviews.js":"36","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Journals.js":"37","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\MY_Alarms.js":"38","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Options.js":"39","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Mini_LoginLogout_Btn\\Login_Btn.js":"40","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Mini_LoginLogout_Btn\\Logout_Btn.js":"41","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Registeration_Page\\Registration_Page.js":"42","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Registeration_Page\\Registration_Default_Page.js":"43","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Registeration_Page\\Registration_Field_Page.js":"44","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Login_page\\Login_page_integrator.js":"45","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Login_page\\foodscript_version_LocalVersion\\foodscript_login_page.js":"46","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Mini_LoginLogout_Btn\\AccountMaker_Link.js":"47","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\Homepage_Btn.js":"48","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\User_Creator_Zone\\Review_Post_Box.js":"49","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\User_Creator_Zone\\Video_Post_Box.js":"50","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\User_Creator_Zone\\Journey_Post_Box.js":"51","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\DateCalculator.js":"52","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\Delete_popup.js":"53","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Review.js":"54","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Timestamp.js":"55","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\nearbySearch_Service_Components\\nearbySearchResult_NoResult.js":"56"},{"size":2122,"mtime":1735820116120,"results":"57","hashOfConfig":"58"},{"size":2393,"mtime":1734774723236,"results":"59","hashOfConfig":"58"},{"size":4274,"mtime":1734771859481,"results":"60","hashOfConfig":"58"},{"size":2030,"mtime":1729577759992,"results":"61","hashOfConfig":"58"},{"size":3036,"mtime":1737346780583,"results":"62","hashOfConfig":"58"},{"size":1081,"mtime":1729432604406,"results":"63","hashOfConfig":"58"},{"size":1735,"mtime":1734669502115,"results":"64","hashOfConfig":"58"},{"size":470,"mtime":1729481483104,"results":"65","hashOfConfig":"58"},{"size":2272,"mtime":1743747700289,"results":"66","hashOfConfig":"58"},{"size":320,"mtime":1729481754615,"results":"67","hashOfConfig":"58"},{"size":1272,"mtime":1737684057732,"results":"68","hashOfConfig":"58"},{"size":488,"mtime":1729571124073,"results":"69","hashOfConfig":"58"},{"size":264,"mtime":1729490595738,"results":"70","hashOfConfig":"58"},{"size":568,"mtime":1729584410602,"results":"71","hashOfConfig":"58"},{"size":1277,"mtime":1737685556217,"results":"72","hashOfConfig":"58"},{"size":658,"mtime":1737684965805,"results":"73","hashOfConfig":"58"},{"size":264,"mtime":1729571473906,"results":"74","hashOfConfig":"58"},{"size":3201,"mtime":1737687752253,"results":"75","hashOfConfig":"58"},{"size":3506,"mtime":1737685983740,"results":"76","hashOfConfig":"58"},{"size":1806,"mtime":1730541678583,"results":"77","hashOfConfig":"58"},{"size":26688,"mtime":1745552670881,"results":"78","hashOfConfig":"58"},{"size":610,"mtime":1743747700256,"results":"79","hashOfConfig":"58"},{"size":807,"mtime":1743747700274,"results":"80","hashOfConfig":"58"},{"size":14524,"mtime":1743747700281,"results":"81","hashOfConfig":"58"},{"size":615,"mtime":1735889546895,"results":"82","hashOfConfig":"58"},{"size":8653,"mtime":1743747700259,"results":"83","hashOfConfig":"58"},{"size":26477,"mtime":1743747700264,"results":"84","hashOfConfig":"58"},{"size":594,"mtime":1731904061511,"results":"85","hashOfConfig":"58"},{"size":599,"mtime":1731936905615,"results":"86","hashOfConfig":"58"},{"size":2697,"mtime":1737635215720,"results":"87","hashOfConfig":"58"},{"size":506,"mtime":1735888080914,"results":"88","hashOfConfig":"58"},{"size":511,"mtime":1735887586862,"results":"89","hashOfConfig":"58"},{"size":513,"mtime":1735888424902,"results":"90","hashOfConfig":"58"},{"size":2775,"mtime":1743747700310,"results":"91","hashOfConfig":"58"},{"size":17440,"mtime":1737113540668,"results":"92","hashOfConfig":"58"},{"size":23114,"mtime":1743747700304,"results":"93","hashOfConfig":"58"},{"size":768,"mtime":1734775175506,"results":"94","hashOfConfig":"58"},{"size":860,"mtime":1734775179846,"results":"95","hashOfConfig":"58"},{"size":859,"mtime":1734775166083,"results":"96","hashOfConfig":"58"},{"size":748,"mtime":1734671338544,"results":"97","hashOfConfig":"58"},{"size":785,"mtime":1734608567932,"results":"98","hashOfConfig":"58"},{"size":764,"mtime":1732506165322,"results":"99","hashOfConfig":"58"},{"size":2227,"mtime":1734672523437,"results":"100","hashOfConfig":"58"},{"size":8184,"mtime":1740626535829,"results":"101","hashOfConfig":"58"},{"size":2753,"mtime":1739863525275,"results":"102","hashOfConfig":"58"},{"size":2736,"mtime":1740626535818,"results":"103","hashOfConfig":"58"},{"size":1037,"mtime":1734673538428,"results":"104","hashOfConfig":"58"},{"size":663,"mtime":1734774217594,"results":"105","hashOfConfig":"58"},{"size":11314,"mtime":1739349937905,"results":"106","hashOfConfig":"58"},{"size":237,"mtime":1735889691920,"results":"107","hashOfConfig":"58"},{"size":243,"mtime":1735889674102,"results":"108","hashOfConfig":"58"},{"size":5540,"mtime":1743747700294,"results":"109","hashOfConfig":"58"},{"size":4001,"mtime":1738321098367,"results":"110","hashOfConfig":"58"},{"size":24121,"mtime":1743747700298,"results":"111","hashOfConfig":"58"},{"size":7397,"mtime":1743747700266,"results":"112","hashOfConfig":"58"},{"size":2342,"mtime":1743747700276,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"66p4a9",{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"117"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"117"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"117"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"117"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\index.js",[],[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Opened\\Personalized_data_ProfileSection.js",["294"],[],"import React from \"react\";\r\nimport UserStranger_icon from '../../../1_image_or_icon/Profile_Stranger_icon.jpg'\r\n\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst Personalized_data_ProfileSection = (props) => {\r\n        \r\n        switch(typeof props.id){\r\n            \r\n            case ('object'):\r\n                \r\n                const UserData = props.id.userinfo\r\n                \r\n                    switch(props.id.status){ \r\n                     \r\n                        case('verified'):\r\n                            const rawdata = UserData.picture.data\r\n                            const UserImage_Data = Buffer.from(rawdata)\r\n                            const base64Image = UserImage_Data.toString('base64')\r\n                            const imgsrc = `data:image/jpg;base64,${base64Image}`;\r\n                            \r\n                            return <React.Fragment>\r\n                            \r\n                            <div id=\"UserProfile_Section_Container\">\r\n                                <p className=\"UserProfile_text\">Profile</p>\r\n                                <img id=\"UserProfile_img\" src={imgsrc}></img>\r\n\r\n                                <span className=\"UserProfile_text\">Welcome</span>\r\n                                <br></br>\r\n                                <span className=\"UserProfile_text\">\r\n                                {UserData.name}</span>\r\n                            </div>\r\n                            </React.Fragment>\r\n                        \r\n                        case('unverified'):\r\n                            return <React.Fragment>\r\n\r\n                            <div id=\"UserProfile_Section_Container\">\r\n                                <p className=\"UserProfile_text\">Profile</p>\r\n                                <img id=\"UserProfile_img\" src={UserStranger_icon}></img>\r\n\r\n                                <span className=\"UserProfile_text\">Welcome</span>\r\n                                <br></br>\r\n                                <span className=\"UserProfile_text\">\r\n                                {UserData.name}</span>\r\n                            </div>\r\n                            </React.Fragment>\r\n                                            \r\n\r\n                    }\r\n            \r\n\r\n            \r\n\r\n            case ( 'undefined' ): return;\r\n\r\n        }\r\n\r\n    }\r\n\r\nexport default Personalized_data_ProfileSection;","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Opened\\Personalized_data_progresser.js",["295"],[],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport MyAccount_icon from '../../../1_image_or_icon/Script_icon.jpg'\r\nimport MyReviews_icon from '../../../1_image_or_icon/Pen_icon.jpg'\r\nimport MyJournals_icon from '../../../1_image_or_icon/Picket_icon.jpg'\r\nimport MyAlarms_icon from '../../../1_image_or_icon/Letter_icon.jpg'\r\nimport MyOptions_icon from '../../../1_image_or_icon/Filter_icon.jpg'\r\n\r\nconst Personalized_data_progresser = (props) => {\r\n        \r\n\r\n    switch(typeof props.id){\r\n        \r\n        case ('object'): \r\n        \r\n            const UserData = props.id.userinfo\r\n        \r\n            switch(props.id.status){\r\n                case('verified'):\r\n                    return <React.Fragment>\r\n                    <div id=\"Personalized_data_TabNevbar_Container\">\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/account?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyAccount_icon}></img>\r\n                    <span>My Account </span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/reviews?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyReviews_icon}></img>            \r\n                    <span>My Reviews</span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/journals?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyJournals_icon}></img>            \r\n                    <span>My Journals</span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/alarms?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyAlarms_icon}></img>            \r\n                    <span>Alarms</span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/options?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyOptions_icon}></img>            \r\n                    <span>Options</span></Link>\r\n                    \r\n                    </div>\r\n                    </React.Fragment>\r\n\r\n                    \r\n                case('unverified'):\r\n                    return <React.Fragment>\r\n                    <div id=\"Personalized_data_TabNevbar_Container\">\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/account?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyAccount_icon}></img>\r\n                    <span>My Account </span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/reviews?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyReviews_icon}></img>            \r\n                    <span>My Reviews</span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/journals?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyJournals_icon}></img>            \r\n                    <span>My Journals</span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/alarms?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyAlarms_icon}></img>            \r\n                    <span>Alarms</span></Link>\r\n                    \r\n                    <Link className=\"Personalized_data_TabButton\" to={`user/${UserData.name}/options?TabNevBar=opened`}>\r\n                    <img className=\"Personalized_data_TabIcon\" src={MyOptions_icon}></img>            \r\n                    <span>Options</span></Link>\r\n                    \r\n                    </div>\r\n                    </React.Fragment>\r\n\r\n\r\n\r\n                }\r\n                \r\n        case ('undefined'): return 'none';\r\n    }\r\n\r\n}\r\n\r\nexport default Personalized_data_progresser;","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Toggler\\TabNevBar_OnOff_Toggler.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\Personalized_data_Part.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_data_TabNevBar\\TabNevBar_Closed\\Personalized_data_progresser.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\LocationSearch_filter_Part.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Main_Logo_&_SearchBar\\Main_Logo_&_SearchBar.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Main_Logo_&_SearchBar\\Main_Logo_&_SearchBar_Components\\SearchBar.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Main_Logo_&_SearchBar\\Main_Logo_&_SearchBar_Components\\Main_logo.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Part.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Closed\\Filter_TabBar_Closed_progresser.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Closed\\Filter_TabBar_Closed_Components\\Filter_TabBar_Container.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Closed\\Filter_TabBar_Closed_Components\\Closed_Toggler_Button.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_progresser.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Opened_Toggler_Button.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Filter_TabBar_Container.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Filter_Option_Selector.js",["296"],[],"import React, { useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ActionCreater } from \"../../../../../2_reducer/reducer\";\r\n\r\nexport const Filter_Option_Selector = (props) => {\r\n\r\n    let counter= 0;\r\n\r\n    const NowUrl = useSelector(state => ({\r\n        urlObject : state.urlObject,\r\n        urlToString : state.urlObject.toString()\r\n    }))\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const Showing_popup = () => {\r\n\r\n        const Keyword_Cotainer = document.getElementById('Keyword_popup_Closed')\r\n        Keyword_Cotainer.id = 'Keyword_popup'\r\n\r\n        const Keyword_option_Text = document.getElementById('Keyword_popup_option')\r\n        Keyword_option_Text.textContent = `${props.option}`\r\n    \r\n    }\r\n\r\n    const DisplayKeyword = (props) => {\r\n\r\n        const state = props.state\r\n        const option = props.option\r\n\r\n        const Input = state.urlObject.get(option)\r\n\r\n        switch(typeof Input){\r\n                case('object'):\r\n                return;\r\n\r\n                case('string'):\r\n                const wrapper = Input.replaceAll(',', ` `).split(' ')\r\n\r\n                return wrapper.map((li)=>{\r\n                    \r\n                    switch(counter+li.length>=20){\r\n\r\n                        case(true):\r\n\r\n                        counter = li.length;\r\n\r\n                    return <React.Fragment>\r\n                    <br></br>\r\n                    <span\r\n                    className=\"Added_Keywords\"\r\n                    onClick={\r\n                        (tab)=>{\r\n                            dispatch(\r\n                                ActionCreater(\r\n                                    'EliminateKeyword',\r\n                                    props.option,\r\n                                    tab.target.textContent))\r\n                        }\r\n\r\n                    }\r\n                    >{li}</span></React.Fragment>\r\n\r\n                        case(false):\r\n\r\n                        counter = counter + li.length\r\n\r\n                        return <span\r\n                    className=\"Added_Keywords\"\r\n                    onClick={\r\n                        (tab)=>{\r\n                            dispatch(\r\n                                ActionCreater(\r\n                                    'EliminateKeyword',\r\n                                    props.option,\r\n                                    tab.target.textContent))\r\n                        }\r\n\r\n                    }\r\n                    >{li}</span>\r\n                    \r\n                \r\n                \r\n                }\r\n            \r\n                })\r\n            }\r\n    }\r\n\r\n    return <React.Fragment>\r\n\r\n        <div className=\"OptionSelector\">\r\n\r\n            <span className=\"OptionRepresented\">{props.option}</span>\r\n            <br></br>\r\n            <p className={`Added_Keyword_Container`}>\r\n            <DisplayKeyword\r\n            state={NowUrl}\r\n            option={props.option}/>\r\n            </p>\r\n            <div className=\"OptionSelector_Button\" onClick={()=>{\r\n\r\n                        Showing_popup()\r\n\r\n            }}>+</div>\r\n\r\n        </div>\r\n\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Filter_Option_Selector","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\LocationSearch_filter_TebZone\\Filter_Apply_Section\\Filter_TabBar_Opend\\Filter_TabBar_Opened_Components\\Keyword_popup.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\2_reducer\\reducer.js",["297"],[],"\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport {createLogger} from 'redux-logger';\r\n\r\nlet Url = new URLSearchParams(document.location.search)\r\n\r\nconst Keyword = () => {\r\n    switch(typeof Url.get('keyword')){\r\n        case('object'): return'';\r\n\r\n        case('string'): return Url.get('keyword');\r\n    }\r\n}\r\n\r\nexport const initial_State = {\r\n    urlObject : Url,\r\n    urlToString : Keyword()\r\n}\r\n\r\nexport function AppReducer(state = initial_State, action){\r\n\r\n    switch(action.type){\r\n\r\n        case 'UpdateUrl':{\r\n            state.urlObject.set(action.option, action.param)\r\n            return {...state,\r\n                urlObject : state.urlObject\r\n            };\r\n        }\r\n\r\n        case'UpdateKeywords':{\r\n            return {...state,\r\n                urlToString : action.param\r\n            };\r\n        }\r\n\r\n        case 'EliminateKeyword':{\r\n            const Exsisted_keywords = state.urlObject.get(action.option).replaceAll(',', ` `).split(' ')\r\n            const Index = Exsisted_keywords.indexOf(action.param)\r\n            Exsisted_keywords.splice( Index, 1 )\r\n\r\n            state.urlObject.set(action.option, Exsisted_keywords)\r\n            return {...state,\r\n                urlObject : state.urlObject\r\n            }\r\n        }\r\n\r\n        case 'ReturnUrlString':{\r\n            return {...state};\r\n        }\r\n\r\n        \r\n        default: return {...state};\r\n    }\r\n\r\n}\r\n\r\nexport const logger = createLogger();\r\n// export const store = createStore(AppReducer, applyMiddleware(logger))\r\nexport const store = createStore(AppReducer)\r\n\r\n\r\nexport const ActionCreater = (Applied_type, Applied_option ,Applied_param) => {\r\n    return {\r\n        type: Applied_type,\r\n        option: Applied_option,\r\n        param : Applied_param\r\n    }\r\n}\r\n\r\nexport default {AppReducer, store} ","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\Google_Map.js",["298"],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\Google_Map_Markers.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\nearbySearch_Service_Components\\nearbySearchResult_Marker.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\nearbySearch_Service_Components\\nearbySearchResult_TabResults.js",["299"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport Alt_Coffee_icon from '../../../../../1_image_or_icon/Alt_Coffee_icon.png'\r\nimport Alt_Restaurant_icon from '../../../../../1_image_or_icon/Alt_Restaurant_icon.png'\r\nimport Alt_Bar_icon from '../../../../../1_image_or_icon/Alt_Bar_icon.png'\r\n\r\nimport Pocket_Icon_Bar from '../../../../../1_image_or_icon/Pocket_icon_Bar.png'\r\nimport Pocket_Icon_Restaurant from '../../../../../1_image_or_icon/Pocket_icon_Restaurant.png'\r\nimport Pocket_Icon_Cafe from '../../../../../1_image_or_icon/Pocket_icon_Cafe.png'\r\n\r\nimport Arrow_Button_UpAhead from '../../../../../1_image_or_icon/Arrow_Button_UpAhead.png'\r\n\r\n\r\nexport const NearbySearch_TabResults = (props) => {\r\n\r\n    const [OnOff , updateToggle] = useState('off')\r\n\r\n    const LineExtense = () => {\r\n        const LineExtense = document.getElementById('LocationSearch_filter_Container')\r\n        LineExtense.style.height = 'fit-content'\r\n    }\r\n\r\n    const Place_Photo_Inspector = (input) => {\r\n\r\n        switch(typeof input.photos){\r\n            case('object'):\r\n            return input.photos[0].img_src\r\n\r\n            case('undefined'):\r\n\r\n                switch(input.types[0]){\r\n                    case('cafe'):\r\n                    return Alt_Coffee_icon\r\n                \r\n                    case('restaurant'):\r\n                    return Alt_Restaurant_icon\r\n                    \r\n                    case('bar'):\r\n                    return Alt_Bar_icon\r\n                }\r\n        }\r\n    }\r\n\r\n    const Photo_Size_Inspector = (input) => {\r\n        switch(typeof input.photos){\r\n            case('object'):\r\n            return 'cover'\r\n\r\n            case('undefined'):\r\n            return 'none'\r\n        }\r\n    }\r\n\r\n    const Place_Pocket_Icon_Inspector = (input) => {\r\n        if(input.types.includes('cafe')){\r\n            console.log('cafe')\r\n            return Pocket_Icon_Cafe}\r\n        \r\n            if(input.types.includes('restaurant')){\r\n            console.log('restaurant')\r\n            return Pocket_Icon_Restaurant}\r\n            \r\n            if(input.types.includes('bar')){\r\n            console.log('bar')\r\n            return Pocket_Icon_Bar}\r\n    }\r\n\r\n    const Place_Reputation_Inspector = (input) => {\r\n        const container = []\r\n        \r\n        switch(typeof input.rating){\r\n            case('undefined'):\r\n            return <span\r\n            style={{\r\n                backgroundColor: 'white',\r\n                padding: '0 2vw'\r\n            }}\r\n            >\r\n                No Reputation Yet\r\n            </span>\r\n        \r\n            case('number'):\r\n            for(let i=0; i<input.rating; i++){\r\n                container.push(\"\\u2B50\")\r\n            }\r\n            return container.map((star)=>{\r\n                return <span>{star}</span>\r\n            })\r\n\r\n            }\r\n        }\r\n    const TimeStamper = (input, index ) => {\r\n        \r\n            \r\n            switch(typeof input[index]){\r\n                case('undefined'):\r\n                return;\r\n\r\n                case('object'):\r\n                const weekday_text = input[index].weekdayDescriptions\r\n\r\n                return weekday_text.map((day_timeline)=>{\r\n                    return <React.Fragment>\r\n                        \r\n                        <br\r\n                        style={{\r\n                            display: 'none'\r\n                        }}\r\n                        ></br>\r\n\r\n                        <span\r\n                        style={{\r\n                            display: 'none',\r\n                            textAlign: 'right',\r\n                            width: 'fit-content'\r\n                        }}>\r\n                            <span\r\n                            style={{\r\n                                backgroundColor:'black',\r\n                                color:'white',\r\n                                border: 'black solid 5px',\r\n                                borderRadius: '10px'\r\n                            }}\r\n                            >\r\n                            {day_timeline.slice(0,3)}\r\n                            </span>\r\n                            \r\n                            {day_timeline.slice(4).replaceAll().split(',').map((element)=>{\r\n                            return <React.Fragment>\r\n                                <span>{element}</span>\r\n                                <br></br>\r\n                                </React.Fragment>\r\n                        })}\r\n                        \r\n                        </span>\r\n\r\n                        </React.Fragment>\r\n                })}\r\n    }\r\n\r\n    const IsOpen_Inspector = (input, index) => {\r\n        switch(typeof input[index]){\r\n            case('undefined'):\r\n            return;\r\n\r\n            case('object'):\r\n            const condition = input[index].openNow\r\n\r\n            switch(condition){\r\n                case(true):\r\n                return <React.Fragment>\r\n                        <span>Is Opened </span>\r\n                        <img\r\n                            src={Arrow_Button_UpAhead}\r\n                            style={{\r\n                                position: 'relative',\r\n                                left: '6vw',\r\n                                top: '0.3vh',\r\n                                width: '4vw',\r\n                                aspectRatio: '1'\r\n                            }}\r\n                            onClick={(tab)=>{\r\n                                const Displayed = Array.from(tab.target.parentNode.childNodes).slice(3)\r\n                                const Dropper = tab.target.parentNode.parentNode\r\n                                \r\n                                switch(OnOff){\r\n                                    case('on'):\r\n                                    updateToggle('off')\r\n                                    Displayed.forEach((element)=>{\r\n                                        element.style.display = 'none'\r\n                                        element.style.textWrap = 'noWrap'\r\n                                    })\r\n                                    tab.target.style.rotate = '0deg'\r\n                                    tab.target.parentNode.style.borderRadius = '0px'\r\n                                    tab.target.parentNode.style.paddingBottom = '0vh'\r\n                                    tab.target.parentNode.style.paddingRight = '7vw'\r\n                                    tab.target.parentNode.style.border = 'solid black 0px'\r\n                                    Dropper.style.marginBottom = '2vh'\r\n                                    return;\r\n\r\n                                    case('off'):\r\n                                    updateToggle('on')\r\n                                    Displayed.forEach((element)=>{\r\n                                        element.style.display = 'block'\r\n                                    })\r\n                                    tab.target.style.rotate = '180deg'\r\n                                    tab.target.parentNode.style.borderRadius = '15px'\r\n                                    tab.target.parentNode.style.paddingBottom = '1vh'\r\n                                    tab.target.parentNode.style.paddingRight = '3vw'\r\n                                    tab.target.parentNode.style.border = 'solid black 1px'\r\n                                    Dropper.style.marginBottom = '40vh'\r\n                                    return;\r\n                                }\r\n                            }}>\r\n                            \r\n                        </img>\r\n                        <br></br>\r\n                        </React.Fragment>\r\n\r\n                case(false):\r\n                return <React.Fragment>\r\n                        <span>Is Closed </span>\r\n                        <img\r\n                            src={Arrow_Button_UpAhead}\r\n                            style={{\r\n                                position: 'relative',\r\n                                left: '6vw',\r\n                                top: '0.3vh',\r\n                                width: '4vw',\r\n                                aspectRatio: '1'\r\n                            }}\r\n                            onClick={(tab)=>{\r\n                                const Displayed = Array.from(tab.target.parentNode.childNodes).slice(3)\r\n                                const Dropper = tab.target.parentNode.parentNode\r\n                                \r\n                                switch(OnOff){\r\n                                    case('on'):\r\n                                    updateToggle('off')\r\n                                    Displayed.forEach((element)=>{\r\n                                        element.style.display = 'none'\r\n                                        element.style.textWrap = 'noWrap'\r\n                                    })\r\n                                    tab.target.style.rotate = '0deg'\r\n                                    tab.target.parentNode.style.borderRadius = '0px'\r\n                                    tab.target.parentNode.style.paddingBottom = '0vh'\r\n                                    tab.target.parentNode.style.paddingRight = '7vw'\r\n                                    tab.target.parentNode.style.border = 'solid black 0px'\r\n                                    Dropper.style.marginBottom = '2vh'\r\n                                    return;\r\n\r\n                                    case('off'):\r\n                                    updateToggle('on')\r\n                                    Displayed.forEach((element)=>{\r\n                                        element.style.display = 'block'\r\n                                    })\r\n                                    tab.target.style.rotate = '180deg'\r\n                                    tab.target.parentNode.style.borderRadius = '15px'\r\n                                    tab.target.parentNode.style.paddingBottom = '1vh'\r\n                                    tab.target.parentNode.style.paddingRight = '3vw'\r\n                                    tab.target.parentNode.style.border = 'solid black 1px'\r\n                                    Dropper.style.marginBottom = '40vh'\r\n                                    return;\r\n                                }\r\n                            }}>\r\n                            \r\n                        </img>\r\n                        <br></br>\r\n                        </React.Fragment>\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n       LineExtense()\r\n    },[])\r\n\r\n    return <React.Fragment>\r\n\r\n    <div\r\n    style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: ' 0 0 4vh 5vw',\r\n        margin: '4vh 0'\r\n    }}>\r\n\r\n\r\n    {props.places.map((place, index)=>{\r\n\r\n        return <div\r\n\r\n        key={index}\r\n\r\n        style={{\r\n            width: '45vw',\r\n            height: '35vh',\r\n            border: 'black solid 5px',\r\n            borderRadius: '20px',\r\n            margin: '2vh 0',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n            paddingBottom: '2vh'\r\n        }}>\r\n            <a \r\n            href={`/search/location/${place.name}`}\r\n            target=\"_blank\"\r\n            >\r\n            \r\n            <img\r\n            src={Place_Photo_Inspector(place)}\r\n            style={{\r\n                width: '44vw',\r\n                height: '15vh',\r\n                borderRadius: '15px',\r\n                border: 'white solid 2px',\r\n                objectFit: Photo_Size_Inspector(place),\r\n                backgroundColor: '#dfdfdf'\r\n            }}\r\n            ></img>\r\n            </a>\r\n                \r\n\r\n                <span\r\n                className=\"Places_Information_TextSection\"\r\n                style={{\r\n                    fontSize: '5vw',\r\n                    marginTop: '1vh',\r\n                    textWrap: 'nowrap'\r\n                }}\r\n                >\r\n                    {place.displayName.text.split(' ').map((str)=>{\r\n\r\n                        if(str.length>10){\r\n                        return <React.Fragment>\r\n                            <span>{str.substr(0,6)}</span>\r\n                            <br></br>\r\n                            <span>{str.substr(6)}</span>\r\n                            </React.Fragment>\r\n                        }\r\n\r\n                        return <React.Fragment>\r\n                            <span>{str}</span>\r\n                            <br></br>\r\n                            </React.Fragment>\r\n                    })}\r\n                </span>\r\n\r\n                <img\r\n                src={Place_Pocket_Icon_Inspector(place)}\r\n                className=\"Places_Information_TextSection\"\r\n                style={{\r\n                    position:'absolute',\r\n                    right: '11.5vw',\r\n                    marginTop: '16.5vh',\r\n                    width: '6vw'\r\n                }}\r\n                \r\n                ></img>\r\n\r\n                <span\r\n                 className=\"Places_Information_TextSection\"\r\n                >\r\n                    {Place_Reputation_Inspector(place)}\r\n                </span>\r\n\r\n                <span\r\n                 className=\"Places_Information_TextSection\"\r\n                 style={{\r\n                    fontSize: '3vw',\r\n                    paddingTop: '1vh'\r\n                 }}\r\n                >\r\n                {place.shortFormattedAddress}\r\n                    \r\n                </span>\r\n                \r\n                <span\r\n                className=\"Places_Information_TextSection\"\r\n                style={{\r\n                    textWrap: 'nowrap'\r\n                 }}\r\n                >\r\n                TEL. {props.phonestamp[props.places.indexOf(place)]}\r\n                </span>\r\n\r\n                <span\r\n                className=\"Places_Information_TextSection\"\r\n\r\n                style={{\r\n                    position: 'absolute',\r\n                    marginTop: '33vh',\r\n                    textAlign: 'left',\r\n                    backgroundColor: 'white',\r\n                    lineHeight: '2.2vh'\r\n                }}\r\n                >\r\n                    \r\n                {IsOpen_Inspector(props.timestamp, props.places.indexOf(place))}\r\n                {TimeStamper(props.timestamp, props.places.indexOf(place))}\r\n                \r\n                </span>\r\n\r\n                <br></br>\r\n\r\n            \r\n\r\n        </div>\r\n    })}\r\n\r\n    </div>\r\n\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default NearbySearch_TabResults;","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\GetDetail_page_integrator.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Default_Info.js",["300"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useMap, useMapsLibrary, Map, AdvancedMarker } from \"@vis.gl/react-google-maps\";\r\n\r\nimport Fork_Icon from '../../../../../1_image_or_icon/Fock_icon.jpg'\r\nimport Marker from '../Google_Map_Markers'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Pocket_Icon_Bar from '../../../../../1_image_or_icon/Pocket_icon_Bar.png'\r\nimport Pocket_Icon_Restaurant from '../../../../../1_image_or_icon/Pocket_icon_Restaurant.png'\r\nimport Pocket_Icon_Cafe from '../../../../../1_image_or_icon/Pocket_icon_Cafe.png'\r\n\r\nimport Detail_Image_Reviews_Section from \"./Detail_Image_Reviews_section\";\r\nimport Detail_Video_section from \"./Detail_Video_section\";\r\nimport Detail_Journey_section from \"./Detail_Journey_section\";\r\n\r\nimport Three_Option_integrator from './Three_Option_Tabbox/Three_Option_integrated_box'\r\n\r\nexport const Default_Info = () => {\r\n\r\n    let Map_Instance =useMap('Google_Map')\r\n    let Place_Library = useMapsLibrary('places')\r\n        \r\n    let params = useParams()\r\n\r\n    const INITIAL_CAMERA = {\r\n        defaultZoom : 15,\r\n        defaultCenter : {lat: 0, lng: 0}\r\n    }\r\n\r\n    const INITIAL_MARKER = {\r\n        position : {lat: 0, lng: 0}\r\n    } \r\n\r\n    const [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\r\n    const [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\r\n    const [PlaceInfo, updateInfo] = useState({})\r\n    \r\n    const Place_Pocket_Icon_Inspector = (input) => {\r\n        \r\n        switch(typeof input.types){\r\n            case('object'):\r\n            \r\n                if(input.types.includes('cafe')){\r\n                console.log('cafe')\r\n                return Pocket_Icon_Cafe}\r\n            \r\n                if(input.types.includes('restaurant')){\r\n                console.log('restaurant')\r\n                return Pocket_Icon_Restaurant}\r\n                \r\n                if(input.types.includes('bar')){\r\n                console.log('bar')\r\n                return Pocket_Icon_Bar}\r\n            \r\n            case('undefined'):\r\n            return\r\n        }\r\n    }\r\n\r\n\r\n    const Formatted_address_Aligner = (input) => {\r\n        switch(typeof input.formatted_address){\r\n            case('undefined'):\r\n            return;\r\n\r\n            case('string'): return <span>\r\n                {input.formatted_address.split(' ').map((element,index)=>{                    \r\n\r\n                    switch(index%2){\r\n\r\n                        case(1):\r\n                            switch(index){\r\n                                case(input.formatted_address.split(' ').length-1): \r\n                                return <span> &#32;{element}</span>\r\n\r\n                                default: return <React.Fragment>\r\n                                <span>&#32;{element}</span>\r\n                                <br></br>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                        default: return <span> &#32;{element}</span>\r\n\r\n                    }\r\n                    \r\n                    \r\n                \r\n                })}</span>\r\n        }\r\n    }\r\n\r\n    const Place_Name_Aligner = (input) => {\r\n        switch(typeof input.name){\r\n            case('string'):\r\n                return input.name.split(' ').map((element)=>{\r\n                        return <React.Fragment>\r\n                        <span>{element}</span>\r\n                        </React.Fragment>\r\n                     })\r\n             case('undefined'):\r\n             return;\r\n        }\r\n    }\r\n\r\n    const GetDetail = async (input) => {\r\n        \r\n        let result = await fetch(`/google_map_api/fetch_getDetail/${input}`,{\r\n            method: 'GET'\r\n        })\r\n\r\n        const result_data = await result.json()\r\n        console.log(result_data)\r\n\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (!Place_Library || !Map_Instance) return;\r\n        var svc = new Place_Library.PlacesService(Map_Instance); \r\n        \r\n        // GetDetail(params.placeid)\r\n\r\n        svc.getDetails({\r\n            fields: ['name','formatted_address','formatted_phone_number','types'\r\n                ,'photos', 'geometry','reviews'\r\n            ],\r\n            placeId: params.placeid,\r\n        },(result)=>{\r\n        \r\n            if(result === null){\r\n                alert(`Service isn't good enough, we'll be back with more compact search engine`)\r\n                return;\r\n            }\r\n\r\n            updateInfo(result)\r\n            setCameraProps({\r\n                defaultZoom : 15,\r\n                center : {lat: result.geometry.location.lat()\r\n                        , lng: result.geometry.location.lng()}})\r\n            setMarkerProps({\r\n                position : {lat: result.geometry.location.lat()\r\n                        , lng: result.geometry.location.lng()}\r\n            })\r\n        })\r\n        \r\n    },[Place_Library,Map_Instance])\r\n\r\n    return <React.Fragment>\r\n\r\n    <div id='place_detail_container'>\r\n        \r\n            <div style={{\r\n                fontFamily:'큐트신민상',\r\n                fontSize:'5vw',\r\n                display:'flex',\r\n                flexDirection:'row',\r\n                border: 'solid black 3px',\r\n                borderRight: 'black solid 7px',\r\n                borderBottom: 'black solid 7px',\r\n                borderRadius: '15px',\r\n\r\n            }}>\r\n                 <img \r\n                 src={Place_Pocket_Icon_Inspector(PlaceInfo)}\r\n                 style={{\r\n                    maxWidth:'10vw',\r\n                    maxHeight:'5vh',\r\n                    backgroundColor: 'white',\r\n                    borderRadius: '12px',\r\n                    padding: '1vh 2vw',\r\n                    borderRight: 'black solid 7px',\r\n                    borderBottom: 'black solid 7px'\r\n                 }}\r\n                 ></img>\r\n                 \r\n                 <div\r\n                 style={{\r\n                    minHeight: '8vh',\r\n                    textAlign: 'left',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center',\r\n                    padding: '1vh 0 1vh 3vw',\r\n                    fontWeight: 'bold',\r\n                    letterSpacing: '1.5px',\r\n                    lineHeight: '3vh'\r\n                 }}\r\n                 >\r\n                 {Place_Name_Aligner(PlaceInfo)}\r\n                 </div>\r\n            </div>\r\n            <br></br>\r\n        \r\n        <div className=\"Default_Info_HighLighter\">\r\n\r\n            <span className=\"Default_Info_TextSection\">\r\n                <span style={{\r\n                    fontWeight:'bold'\r\n                }}>\r\n                 &#8226; ADDRESS. \r\n                 </span>\r\n                    <span\r\n                    style={{\r\n                        lineHeight:'2.5vh',\r\n                        textAlign: 'left',\r\n                        display: \"grid\",\r\n                        position: 'relative',\r\n                        left: '21.5vw',\r\n                        bottom: '2.2vh',\r\n                        fontSize: '3.5vw'\r\n                    }}\r\n                    >\r\n                    {Formatted_address_Aligner(PlaceInfo)}\r\n                    </span>\r\n            </span>\r\n        </div>\r\n        \r\n            <br></br>\r\n\r\n        <div className=\"Default_Info_HighLighter\">\r\n        \r\n            <span className=\"Default_Info_TextSection\">\r\n                <span style={{\r\n                    fontWeight:'bold'\r\n                }}>\r\n                &#8226; TEL. \r\n                </span>\r\n                 {PlaceInfo.formatted_phone_number}\r\n            </span>\r\n            <br></br>\r\n\r\n        </div>\r\n\r\n        <Map\r\n        id='Google_Map'\r\n        mapId='a6ea1c40e5d4c5a'\r\n        style={{\r\n            height: '40vh',\r\n            width: '62vw',\r\n            margin: '5vh 0vw',\r\n            border: 'black solid 4px',\r\n            borderRadius: '10px'\r\n        }}\r\n        {...cameraProps}>\r\n        \r\n        \r\n\r\n            <AdvancedMarker\r\n            {...markerProps}>\r\n                <Marker src={Fork_Icon} border={`solid black 3.5px`} width={'6vw'}/>\r\n            </AdvancedMarker>\r\n\r\n\r\n        </Map>\r\n\r\n        <Detail_Image_Reviews_Section\r\n        photos={PlaceInfo.photos} \r\n        reviews={PlaceInfo.reviews}\r\n        placeid={params.placeid}\r\n        />\r\n\r\n        <Detail_Video_section/>\r\n        <br></br>\r\n        <Detail_Journey_section/>\r\n        <br></br>\r\n        <Three_Option_integrator\r\n        placename={PlaceInfo.name}\r\n        placepicture={PlaceInfo.photos}\r\n        />\r\n        <br></br>\r\n\r\n    </div>\r\n\r\n    \r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Default_Info","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Detail_Image_Reviews_section.js",["301","302","303"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nimport Arrow from '../../../../../1_image_or_icon/Arrow_Button_UpAhead.png'\r\nimport ThumbUp from '../../../../../1_image_or_icon/thumbs-up-icon.png'\r\nimport Pen from '../../../../../1_image_or_icon/Pen_icon.jpg'\r\nimport EditIcon from '../../../../../1_image_or_icon/edit-list-icon.png'\r\n\r\nimport TIMESTAMP from \"./Timestamp.js\";\r\n\r\nexport const Detail_Image_Reviews_Section = (props) => {\r\n\r\n    const [swipeState, setSwipeState] = useState({\r\n        touchStart: 0,\r\n        touchEnd: 0,\r\n        currentIndex: 0,\r\n        isDragging: false,\r\n        dragOffset: 0\r\n    });\r\n    \r\n    const [reviews, setReviews] = useState([])\r\n    const [reviews_property_keys, setReviews_property_keys] = useState({\r\n        \r\n        origin:{\r\n            username: 'reviewer_name',\r\n            rating: 'star_rating',\r\n            text: 'user_post_text',\r\n            profile_photo_url: 'profile_photo_url',\r\n            picture_url_array: 'picture_url_array',\r\n            reviewer_profile: 'reviewer_profile',\r\n            time: 'created_at'\r\n        },\r\n        \r\n        google: {\r\n            username: 'author_name',\r\n            rating: 'rating',\r\n            text: 'text',\r\n            profile_photo_url: 'profile_photo_url',\r\n            time: 'time'\r\n        }\r\n    })\r\n    \r\n    const location = useLocation()\r\n    const placecode = location.pathname.slice(17)\r\n\r\n    useEffect(()=>{\r\n\r\n        review_origin_loader(placecode).then(async (res)=>{\r\n            let review_result = res.result\r\n            console.log(review_result)\r\n            review_result = Object.values(review_result)\r\n            console.log(review_result)\r\n            setReviews(review_result)\r\n        })\r\n        \r\n    },[])\r\n\r\n    const renderDotIndicators = (totalImages, currentIdx) => {\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: 'inherit',\r\n                    display: \"flex\",\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'center',\r\n                    gap: '8px',\r\n                    marginTop: '2vh'\r\n                }}\r\n            >\r\n                {[...Array(4)].map((_, idx) => {\r\n                    let dotColor = '#ffffff';\r\n                    let borderColor = '#ffffff';\r\n                    \r\n                    if (totalImages <= 4) {\r\n                        if (currentIdx === idx) {\r\n                            dotColor = '#007bff';\r\n                            borderColor = '#007bff';\r\n                        }\r\n                    } else {\r\n                        if (currentIdx < 2) {\r\n                            if (currentIdx === idx) {\r\n                                dotColor = '#007bff';\r\n                                borderColor = '#007bff';\r\n                            }\r\n                        } else if (currentIdx >= totalImages - 2) {\r\n                            if (idx === 3 && currentIdx === totalImages - 1) {\r\n                                dotColor = '#007bff';\r\n                                borderColor = '#007bff';\r\n                            } else if (idx === 2 && currentIdx === totalImages - 2) {\r\n                                dotColor = '#007bff';\r\n                                borderColor = '#007bff';\r\n                            }\r\n                        } else {\r\n                            if (idx === 2) {\r\n                                dotColor = '#007bff';\r\n                                borderColor = '#007bff';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return (\r\n                        <div\r\n                            key={idx}\r\n                            style={{\r\n                                width: '8px',\r\n                                height: '8px',\r\n                                borderRadius: '50%',\r\n                                backgroundColor: dotColor,\r\n                                border: `1px solid ${borderColor}`,\r\n                                transition: 'all 0.3s ease'\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const photo_dispenser = (input) => {\r\n        switch(typeof input) {\r\n            case('object'):\r\n                return (\r\n                    <div>\r\n                        <Link to={`${swipeState.currentIndex + 1}`}>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'start',\r\n                                    width: '62vw',\r\n                                    overflow: 'hidden',\r\n                                    aspectRatio: '1',\r\n                                    border: 'black solid 3.5px',\r\n                                    borderRadius: '15px',\r\n                                    position: 'relative'\r\n                                }}\r\n                                onTouchStart={handleTouchStart}\r\n                                onTouchMove={handleTouchMove}\r\n                                onTouchEnd={handleTouchEnd}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        transform: `translateX(calc(-${swipeState.currentIndex * 100}% + ${swipeState.dragOffset}px))`,\r\n                                        transition: swipeState.isDragging ? 'none' : 'transform 0.3s ease-out',\r\n                                        width: '100%'\r\n                                    }}\r\n                                >\r\n                                    {input.map((element, idx) => (\r\n                                        <img\r\n                                            key={idx}\r\n                                            style={{\r\n                                                minWidth: '100%',\r\n                                                aspectRatio: '1',\r\n                                                objectFit: 'cover'\r\n                                            }}\r\n                                            src={element.getUrl()}\r\n                                            alt={`Photo ${idx + 1}`}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                        {renderDotIndicators(input.length, swipeState.currentIndex)}\r\n                    </div>\r\n                );\r\n            case('undefined'):\r\n                return null;\r\n        }\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        setSwipeState(prev => ({\r\n            ...prev,\r\n            isDragging: true,\r\n            touchStart: e.touches[0].clientX,\r\n            dragOffset: 0\r\n        }));\r\n    };\r\n\r\n    const handleTouchMove = (e) => {\r\n        if (!swipeState.isDragging) return;\r\n        \r\n        const currentTouch = e.touches[0].clientX;\r\n        const diff = currentTouch - swipeState.touchStart;\r\n        setSwipeState(prev => ({\r\n            ...prev,\r\n            touchEnd: currentTouch,\r\n            dragOffset: diff\r\n        }));\r\n    };\r\n\r\n    const handleTouchEnd = () => {\r\n        if (!swipeState.isDragging) return;\r\n\r\n        const distance = swipeState.touchStart - swipeState.touchEnd;\r\n        const minSwipeDistance = 50;\r\n\r\n        if (Math.abs(distance) < minSwipeDistance) {\r\n            setSwipeState(prev => ({\r\n                ...prev,\r\n                isDragging: false,\r\n                dragOffset: 0\r\n            }));\r\n            return;\r\n        }\r\n\r\n        setSwipeState(prev => ({\r\n            ...prev,\r\n            isDragging: false,\r\n            currentIndex: distance > 0 && prev.currentIndex < props.photos.length - 1 \r\n                ? prev.currentIndex + 1 \r\n                : distance < 0 && prev.currentIndex > 0 \r\n                ? prev.currentIndex - 1 \r\n                : prev.currentIndex,\r\n            dragOffset: 0,\r\n            touchStart: 0,\r\n            touchEnd: 0\r\n        }));\r\n    };\r\n\r\n    const start_dispenser = (input) => {\r\n        let container = [];\r\n        for(let i=0; i<input; i++){\r\n            container.push(\"\\u2B50\")\r\n        }\r\n        return <span>\r\n            {container.map((element)=>{\r\n                return <span>{element}</span>\r\n            })}\r\n        </span>\r\n        \r\n    }\r\n\r\n    const review_text_dispenser = (input) => {\r\n\r\n        switch(typeof input){\r\n            case('string'):\r\n\r\n            switch(input.length>50){\r\n                case(true):\r\n                return <React.Fragment>\r\n                \r\n                <div\r\n                style={{\r\n                    maskImage: 'linear-gradient(black, transparent)',\r\n                    height: 'fit-content',\r\n                    maxHeight: '30vh',\r\n                    overflow: 'scroll',\r\n                    whiteSpace: 'pre-wrap',\r\n                    wordBreak: 'break-all',\r\n                    margin: '0vh 2.5vw',\r\n                    padding: '0vh 2.5vw',\r\n                    border: 'white solid 5px',\r\n                    backgroundColor: 'white',\r\n                    borderRadius: '15px'\r\n                }}\r\n                >\r\n                    <span>\r\n                    {input.slice(0,49)}\r\n                    </span>\r\n                </div>\r\n                <div\r\n                style={{\r\n                    width:'45vw',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    padding: '0.5vh',\r\n                    margin: '0 3vw'\r\n                }}>\r\n                    <img\r\n                    src={Arrow}\r\n                    style={{\r\n                        width: '5vw'\r\n                    }}\r\n                    onClick={(e)=>{\r\n                    const Blinder = e.target.parentNode.parentNode.childNodes[0]\r\n\r\n                    switch(Blinder.style.maskImage){\r\n                        case('linear-gradient(black, transparent)'):\r\n                        Blinder.innerText = `${input.slice(0)}`\r\n                        Blinder.style.maskImage = ''\r\n                        e.target.style.transform = 'rotate(180deg)'\r\n                        break;\r\n\r\n                        case(''):\r\n                        Blinder.innerText = `${input.slice(0,49)}`\r\n                        Blinder.style.maskImage = 'linear-gradient(black, transparent)'\r\n                        e.target.style.transform = 'rotate(0deg)'\r\n                        break;\r\n                    }\r\n\r\n                    }}\r\n\r\n                    ></img>\r\n                </div>\r\n                </React.Fragment>\r\n\r\n                case(false):\r\n                return <div\r\n                style={{\r\n                    width:'77.5%',\r\n                    \r\n                    margin: '0vh 2.5vw 2.5vh 2.5vw',\r\n\r\n                    whiteSpace: 'pre-wrap',\r\n                    wordBreak: 'break-all',\r\n                    padding: '0vh 2.5vw',\r\n                    border: 'white solid 5px',\r\n                    backgroundColor: 'white',\r\n                    borderRadius: '15px'\r\n                }}\r\n                >\r\n                    <span>\r\n                        {input}\r\n                    </span>\r\n                    \r\n                \r\n                </div>\r\n            }\r\n            \r\n            case('undefined'):\r\n            return;\r\n        }\r\n    }\r\n\r\n    const picture_dispenser = (input, situation) => {\r\n\r\n        switch(typeof input){\r\n            case 'object':\r\n\r\n                switch(situation){\r\n\r\n                case 'review_pictures':    \r\n                    return input.map((element)=>{\r\n                        return <img\r\n                        src={element}\r\n                        style={{\r\n                            width: '80%',\r\n                            aspectRatio: '1/1',\r\n                            objectFit: 'cover',\r\n                            border: 'white 3px solid',\r\n                            borderRadius: '15px'\r\n\r\n                        }}\r\n\r\n                        >\r\n                        </img>\r\n                    })\r\n                \r\n                case 'profile_img':\r\n                    return <img\r\n                        src={input[0]}\r\n                        style={{\r\n                            width: '17.5%',\r\n                            aspectRatio: '1/1',\r\n                            objectFit: 'cover',\r\n                            border: 'white 3px solid',\r\n                            borderRadius: '15px'\r\n\r\n                        }}\r\n\r\n                        >\r\n                        </img>\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n    const review_origin_loader = async (input) => {\r\n        let result = await fetch(`/usercreation/read_reviews/place/${input}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        result = await result.json()\r\n        return result\r\n    }\r\n\r\n\r\n    const review_dispenser = (input,origin) => {\r\n\r\n        let property_keys = reviews_property_keys[origin]\r\n\r\n        switch(typeof input){\r\n            case('object'):\r\n                   return input.map((element)=>{\r\n\r\n                    return <React.Fragment>\r\n\r\n                    <div\r\n                    style={{\r\n                        display: 'grid',\r\n                        width: '50vw',\r\n                        height: 'fit-content',\r\n                        padding: '1vh 3vw',\r\n                        border: 'black solid 3.5px',\r\n                        borderRadius: '15px',\r\n                        fontFamily: '큐트신민상',\r\n                        letterSpacing: '1vw',\r\n                        spaceBetween: '5px',\r\n                        lineHeight: '3.5vh',\r\n                        justifyContent: 'center'\r\n                    }}\r\n                    >\r\n                                <span\r\n                                    style={{\r\n                                        justifySelf: 'end',\r\n                                        padding: '0 2.5vw 0 0'\r\n                                    }}\r\n                                    >\r\n                                    <img\r\n                                    src={EditIcon}\r\n                                    style={{\r\n                                        width: '4vw'\r\n                                    }}\r\n                                    >\r\n                                    </img>\r\n                                    <span>Edit</span>\r\n                                </span>\r\n\r\n                                <div\r\n                                style={{\r\n                                    padding: '1vh 2vw'\r\n                                }}>\r\n\r\n                                    <div\r\n                                    style={{\r\n                                        display:'flex',\r\n                                        flexDirection: 'row',\r\n                                        alignItems: 'center',\r\n                                        justifyItems: 'center'\r\n                                        }}\r\n                                    >\r\n                                        { element[property_keys.profile_photo_url] !== undefined\r\n                                        ? <img\r\n                                        src={element[property_keys.profile_photo_url]}\r\n                                        style={{\r\n                                        width: '10vw'\r\n                                        }}\r\n                                        ></img>\r\n                                        : ``\r\n                                        }\r\n\r\n                                        {picture_dispenser(element[property_keys.reviewer_profile], 'profile_img')}\r\n\r\n                                        <span\r\n                                        style={{\r\n                                        paddingLeft: '10px'\r\n                                        }}\r\n                                        >{element[property_keys.username]}</span>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                                <div>{start_dispenser(element[property_keys.rating])} \r\n                                    ({element[property_keys.rating]})\r\n                                </div>\r\n\r\n                                \r\n                                { element[property_keys.time] !== undefined\r\n                                  ? <TIMESTAMP\r\n                                  timestamp = {element[property_keys.time]}\r\n                                  />\r\n                                  : ''\r\n                                }\r\n                                \r\n                                \r\n\r\n                            </div>\r\n\r\n\r\n                            <div\r\n                            style={{\r\n                                display:'flex',\r\n                                flexDirection: 'row',\r\n                                position:'relative',\r\n                                left:'0.5vw',\r\n                                top:'1vh',\r\n                                fontSize: '3.5vw',\r\n                                fontWeight: 'bold'\r\n                            }}>\r\n                            \r\n                                <span\r\n                                    style={{\r\n                                        \r\n                                        display: 'flex',\r\n                                        flexDirection: 'row',\r\n                                        alignItems: 'center',\r\n                                        backgroundColor: 'white',\r\n                                        width: 'fit-content',\r\n                                        borderRadius: '10px',\r\n                                        padding: '0 2vw'\r\n                                    }}>\r\n                                    <span>\r\n                                    Share\r\n                                    </span>\r\n                                    \r\n                                    \r\n                                    <img\r\n                                    src={ThumbUp}\r\n                                    style={{\r\n                                        width: '3.5vw',\r\n                                        paddingLeft: '1.5vw'\r\n                                    }}\r\n                                    >\r\n                                    </img>\r\n                                </span>\r\n                            \r\n                                <span\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'row',\r\n                                        alignItems: 'center',\r\n                                        backgroundColor: 'white',\r\n                                        width: 'fit-content',\r\n                                        borderRadius: '10px',\r\n                                        padding: '0 2vw',\r\n                                        marginLeft: '2vw'\r\n                                    }}>\r\n                                    <span>\r\n                                    Reply\r\n                                    </span>\r\n                                    \r\n                                    \r\n                                    <img\r\n                                    src={Pen}\r\n                                    style={{\r\n                                        width: '5vw',\r\n                                        paddingLeft: '1.5vw'\r\n                                    }}\r\n                                    >\r\n                                    </img>\r\n                                </span>\r\n                                \r\n                            </div>\r\n\r\n\r\n                        <br></br>\r\n\r\n                        { element !== undefined && element[property_keys.picture_url_array] !== undefined\r\n                            \r\n                            ? <div\r\n                            style={{\r\n                                display: 'grid',\r\n                                gridTemplateColumns: '1fr 1fr 1fr',\r\n                                justifyItems: 'center',\r\n                                rowGap: '1vh',\r\n                                border: 'white solid 3px',\r\n                                padding: '10px',\r\n                                borderRadius: '15px'\r\n                            }}\r\n                            >\r\n                                {picture_dispenser(element[property_keys.picture_url_array], 'review_pictures')}\r\n\r\n                            </div>\r\n                            :''    \r\n                        }\r\n                        { element !== undefined && element[property_keys.picture_url_array] !== undefined\r\n                            ? <br></br>\r\n                            : ``\r\n                        }\r\n                        \r\n                        <div>{review_text_dispenser(element[property_keys.text])}</div>\r\n                        \r\n                        \r\n\r\n                    </div>\r\n                    \r\n                    </React.Fragment>})\r\n                \r\n        }\r\n        \r\n    }\r\n\r\n    const Review_Star_Conclusion = (input) => {\r\n        switch(typeof input){\r\n            case('object'):\r\n            return input.length\r\n        }\r\n    }\r\n\r\n    const Particular_ReviewStar_Conclusion = (input, target) => {\r\n        let counter = 0;\r\n        \r\n        switch(typeof input){\r\n            case('object'):\r\n            input.forEach(element => {\r\n                if(element.rating == target){\r\n                    counter = counter + 1\r\n                }\r\n            });\r\n        }\r\n\r\n        return counter\r\n    }\r\n\r\n    return <React.Fragment>\r\n\r\n        <div className=\"Default_Info_HighLighter\">\r\n                \r\n                <span className=\"Default_Info_TextSection\">\r\n                    <span style={{\r\n                        fontWeight:'bold'\r\n                    }}>\r\n                    &#8226; Photos\r\n                    </span>\r\n                    \r\n                </span>\r\n                <br></br>\r\n\r\n            </div>\r\n\r\n            <br></br>\r\n\r\n    {photo_dispenser(props.photos)}\r\n    \r\n        <br></br>\r\n\r\n        <div className=\"Default_Info_HighLighter\">\r\n            \r\n            <span className=\"Default_Info_TextSection\">\r\n                <span style={{\r\n                    fontWeight:'bold'\r\n                }}>\r\n                &#8226; Reviews ( {Review_Star_Conclusion(props.reviews)} )\r\n                </span>\r\n                <img\r\n                src={Arrow}\r\n                style={{\r\n                    width:'5vw',\r\n                    position:'relative',\r\n                    left: '29vw',\r\n                    top: '0.5vh'\r\n                }}\r\n                onClick={(e)=>{\r\n                    \r\n                    const Conclusion = e.target.parentNode.childNodes[2]\r\n\r\n                    switch(Conclusion.style.display){\r\n                        case('flex'):\r\n                        Conclusion.style.display = 'none'\r\n                        break;\r\n                        \r\n                        case('none'):\r\n                        Conclusion.style.display = 'flex'\r\n                        break;\r\n                    }\r\n                }}\r\n                >\r\n                \r\n                </img>\r\n                <div\r\n                style={{\r\n                    border:'solid 3px black',\r\n                    margin: '1vh 3vw',\r\n                    padding: '1vh 3vw',\r\n                    borderRadius: '10px',\r\n                    height: '25vh',\r\n                    display: 'none',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'space-around',\r\n                    alignItems:'space-between',\r\n                    fontWeight: 'bold'\r\n                }}\r\n                >\r\n                <span>Written Reviews</span>\r\n                <div>\r\n                {\"\\u2B50\"} (5) - {Particular_ReviewStar_Conclusion(props.reviews,5)}\r\n                </div>\r\n                <div>\r\n                {\"\\u2B50\"} (4) - {Particular_ReviewStar_Conclusion(props.reviews,4)}\r\n                </div>\r\n                <div>\r\n                {\"\\u2B50\"} (3) - {Particular_ReviewStar_Conclusion(props.reviews,3)}\r\n                </div>\r\n                <div>\r\n                {\"\\u2B50\"} (2) - {Particular_ReviewStar_Conclusion(props.reviews,2)}\r\n                </div>\r\n                <div>\r\n                {\"\\u2B50\"} (1) - {Particular_ReviewStar_Conclusion(props.reviews,1)}\r\n                </div>\r\n\r\n                </div>\r\n                \r\n            </span>\r\n            \r\n\r\n        </div>\r\n\r\n        <br></br>\r\n\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    overflow: 'scroll',\r\n                    width: '65vw'\r\n                }}\r\n            >\r\n                <div\r\n                        style={{\r\n                            display:'grid',\r\n                            gridTemplateRows: '65vh 65vh',\r\n                            \r\n                            gridAutoFlow: 'column',\r\n                            columnGap: '5vw',\r\n                            rowGap: '5vh',\r\n\r\n                            padding: '5vh 0vw 5vh 5vw'\r\n                        }}\r\n                >\r\n                    {review_dispenser(props.reviews,'google')}\r\n                </div>\r\n\r\n                <div\r\n                        style={{\r\n                            display:'grid',\r\n                            gridAutoFlow: 'column',\r\n                            columnGap: '5vw',\r\n\r\n                            padding: '5vh 5vw 5vh 5vw'\r\n                        }}\r\n                >\r\n                    {review_dispenser(reviews,'origin')}\r\n                </div>\r\n            </div>\r\n\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Detail_Image_Reviews_Section","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Detail_Video_section.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Detail_Journey_section.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Three_Option_integrated_box.js",["304"],[],"import React, { useState } from \"react\";\r\n\r\nimport Post_Video_btn from './Post_Video'\r\nimport Post_Review_Btn from \"./Post_reviews\";\r\nimport Post_Journey_Btn from \"./Post_Journey\";\r\n\r\nimport Review_Post_Box from \"../../../../../User_Creator_Zone/Review_Post_Box\";\r\nimport Journey_Post_Box from \"../../../../../User_Creator_Zone/Journey_Post_Box\";\r\nimport Video_Post_Box from \"../../../../../User_Creator_Zone/Video_Post_Box\";\r\n\r\nexport const Three_Option_integrator = (props) => {\r\n\r\n    const [ BtnState, updateBox ] = useState({\r\n        Post_review_box_activated : false,\r\n        Post_video_box_activated : false,\r\n        Post_journey_box_activated : false\r\n    })\r\n\r\n    const post_box_btnEvent = (target) =>{\r\n        \r\n        let Renewed_State = {...BtnState}\r\n\r\n        let keys = Object.keys(Renewed_State)\r\n        const Delete_index = keys.indexOf(target)\r\n        keys.splice(Delete_index,1)\r\n\r\n        keys.forEach((element)=>{\r\n            Renewed_State[element] = false\r\n        })\r\n\r\n        switch(Renewed_State[target]){\r\n            case(false):\r\n            Renewed_State[target] = true;\r\n            break;\r\n\r\n            default:\r\n            break;\r\n        }\r\n\r\n        updateBox({...Renewed_State})\r\n    }\r\n\r\n    const Input_Box = () => {\r\n\r\n        const key = Object.keys(BtnState)\r\n        const Senser = Object.values(BtnState)\r\n\r\n        switch(Senser.includes(true)){\r\n            case(true):\r\n            const index = Senser.indexOf(true)\r\n                switch(key[index]){\r\n                    case('Post_video_box_activated'):\r\n                    return <Video_Post_Box/>\r\n\r\n                    case('Post_review_box_activated'):\r\n                    return <Review_Post_Box \r\n                            placename ={props.placename}\r\n                            placepicture ={props.placepicture}\r\n                            PostEvent={()=>{post_box_btnEvent()}}\r\n                            />\r\n\r\n                    case('Post_journey_box_activated'):\r\n                    return <Journey_Post_Box/>\r\n                }\r\n\r\n            case(false):\r\n            break;\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>\r\n\r\n    <div\r\n    style={{\r\n        display: \"grid\",\r\n        gridRowGap: '2.5vh',\r\n     }}\r\n    >\r\n\r\n    <Input_Box/>\r\n\r\n    \r\n    <Post_Video_btn\r\n    clickEvent={()=>{post_box_btnEvent('Post_video_box_activated')}}\r\n    />\r\n\r\n    <Post_Review_Btn\r\n    clickEvent={()=>{post_box_btnEvent('Post_review_box_activated')}}\r\n    />\r\n\r\n    <Post_Journey_Btn\r\n    clickEvent={()=>{post_box_btnEvent('Post_journey_box_activated')}}\r\n    />\r\n    \r\n    </div>\r\n\r\n    <br></br>\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Three_Option_integrator","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Post_Video.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Post_reviews.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Three_Option_Tabbox\\Post_Journey.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personalized_Data_Page_integrator.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Account.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Reviews.js",["305"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport Homepage_Btn from './Homepage_Btn.js'\r\nimport DateCalculator from \"./DateCalculator.js\";\r\nimport Delete_popup from \"./Delete_popup.js\";\r\n\r\nimport Editbtn from '../../../../src/1_image_or_icon/pen2.png'\r\nimport ArrowBtn from '../../../../src/1_image_or_icon/Arrow_Button_DownAhead.png'\r\nimport Trashcanbtn from '../../../../src/1_image_or_icon/recycle-bin-icon.png'\r\nimport './CustomCheckbox.css';\r\n\r\nexport const My_Reviews = (props) => {\r\n\r\n    const containerRef = useRef(null)\r\n\r\n    const location = useLocation()    \r\n    const queryParams = new URLSearchParams(location.search)\r\n\r\n    const [ELEMENT ,updateREVIEWS] = useState([])\r\n    const [USERNAME ,updateUSERNAME] = useState({name: ''})\r\n    const [CHECKBOX, updateCHECKBOX] = useState([])\r\n    \r\n    const [Delete_popup_Activate, setDelete_popup_state] = useState(false)\r\n    const [Delete_review, setDelete_review] = useState({})\r\n    \r\n    useEffect(()=>{\r\n\r\n        let USER;\r\n        let STATUS;\r\n        \r\n        if(props.id){\r\n            USER = props.id.userinfo\r\n            STATUS = props.id.status\r\n        }\r\n\r\n        switch(STATUS){\r\n            case('unverified'):\r\n            break;\r\n\r\n            case('verified'):\r\n            Load_Review(USER.id,USER.name)\r\n            break;\r\n\r\n            default:\r\n            break;\r\n        }\r\n        const Container = containerRef.current\r\n        if(!Container) return;\r\n\r\n    },[])\r\n\r\n    const TextDispenser = (props) => {\r\n        let TextContent = props.element.user_post_text\r\n        \r\n        return <React.Fragment>\r\n            <div\r\n            style={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '10px',\r\n                width: '80%',\r\n                height: '5vh',\r\n                overflow: 'hidden',\r\n                padding: '1vh 2.5vw 4vh 2.5vw',\r\n                justifySelf: 'center',\r\n                letterSpacing: '1.5px',\r\n                wordSpacing: '1px',\r\n                lineHeight: '3.5vh',\r\n                whiteSpace: 'pre-wrap',\r\n                overflowWrap: 'break-word',\r\n                maskImage: 'linear-gradient(black, transparent)',\r\n                transition: 'all 0.3s ease-in-out'\r\n            }}\r\n            >\r\n                {TextContent}\r\n            </div>\r\n            <img\r\n            src={ArrowBtn}\r\n            style={{\r\n                position: 'relative',\r\n                width: '5vw',\r\n                bottom: '4vh',\r\n                justifySelf: 'center',\r\n                transform: 'rotate(0deg)',\r\n                transition: 'transform 0.3s ease-in-out'\r\n            }}\r\n            onClick={(e)=>{\r\n                const textDiv = e.target.previousElementSibling;\r\n                switch(textDiv.style.maskImage){\r\n                    case(''):\r\n                    textDiv.style.maskImage = 'linear-gradient(black, transparent)';\r\n                    textDiv.style.height = '5vh';\r\n                    e.target.style.transform = 'rotate(0deg)';\r\n                    break;\r\n\r\n                    case('linear-gradient(black, transparent)'):\r\n                    textDiv.style.maskImage = '';\r\n                    textDiv.style.height = `${textDiv.scrollHeight}px`;\r\n                    e.target.style.transform = 'rotate(180deg)';\r\n                    break;\r\n                }\r\n            }}\r\n            ></img>\r\n        </React.Fragment>\r\n    }\r\n\r\n    const SelectAll_Handler = (props) => {\r\n        return <div\r\n        style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(2, 30px)',\r\n            columnGap: '1vw',\r\n            justifySelf: 'start',\r\n            alignItems: 'center',\r\n        }}\r\n        >\r\n\r\n        <input\r\n        type=\"checkbox\"\r\n        className=\"custom-checkbox\"\r\n        style={{\r\n            justifySelf: 'start',\r\n        }}\r\n        checked={CHECKBOX.length === ELEMENT.length && CHECKBOX.length !== 0}\r\n        onChange={(e)=>{\r\n            if(e.target.checked){\r\n                updateCHECKBOX(ELEMENT.map(element => element.id))\r\n                setDelete_review({\r\n                    situation: 'multiple_reviews',\r\n                    checked: true\r\n                })\r\n            } else {\r\n                updateCHECKBOX([])\r\n            }\r\n\r\n        }}\r\n        ></input>\r\n\r\n        <span\r\n        style={{\r\n            justifySelf: 'start',\r\n            whiteSpace: 'nowrap',\r\n            fontSize: '20px',\r\n        }}\r\n        >\r\n            Select All\r\n        </span>\r\n\r\n        </div>\r\n    }\r\n\r\n    const start_dispenser = (input) => {\r\n        let container = [];\r\n        for(let i=0; i<input; i++){\r\n            container.push(\"\\u2B50\")\r\n        }\r\n        return <span\r\n        style={{\r\n            width: '80%',\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            border: 'white solid 2px',\r\n            borderRadius: '15px',\r\n            padding: '0.4vh 2vw 1vh 2vw',\r\n            }}\r\n        >\r\n            {container.map((element)=>{\r\n                return <span>{element}</span>\r\n            })}\r\n        </span>\r\n        \r\n    }\r\n\r\n    const Checkbox_Handler = (props) => {\r\n        switch(CHECKBOX.length){\r\n            case(0):\r\n            break;\r\n\r\n            default:\r\n                return <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            padding: '0vh 2.5vw',\r\n                        }}\r\n                        >\r\n                        <span\r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                        <span>\r\n                            Selected {String.fromCharCode(0x0020)}\r\n                        </span>\r\n                        <span\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            borderRadius: '15px',\r\n                            padding: '0.25vh 2vw'\r\n                        }}\r\n                        >\r\n                        {CHECKBOX.length} Reviews\r\n                        </span>\r\n                        </span>\r\n\r\n                        {String.fromCharCode(0x0020)}\r\n\r\n                        <div\r\n                        style={{\r\n                            justifySelf: 'start',\r\n                            backgroundColor: 'white',\r\n                            borderRadius: '7px',\r\n                            padding: '0.5vh 2.5vw',\r\n                            margin: '1vh 0vw 0vh 0vw',\r\n                            textAlign: 'center'\r\n                            \r\n                        }}\r\n                        onClick={\r\n                            async (e)=>{\r\n                                setDelete_popup_state(true)\r\n                                setDelete_review({\r\n                                    situation: 'multiple_reviews',\r\n                                    checked: true\r\n                                })\r\n                        }}\r\n\r\n                        >\r\n                            <span>\r\n                                Delete All Selected\r\n                            </span>\r\n                            \r\n                            <img\r\n                            src={Trashcanbtn}\r\n                            style={{\r\n                                position:'relative',\r\n                                left:'5.5px',\r\n\r\n                                width: '15px',\r\n                                height: '15px'\r\n                            }}\r\n                            >\r\n                            </img>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    \r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const Review_Container = (props) => {\r\n        const ELEMENT = props.ELEMENT\r\n\r\n        return <React.Fragment>\r\n            <div\r\n            style={{\r\n                width:'95%',\r\n                display: 'grid',\r\n                gridTemplateColumns: '(repeat 1, 1fr)',\r\n                rowGap: '2vh',\r\n                padding: '0.5vh 0vw 2vh 0vw'\r\n            }}\r\n            >\r\n\r\n                <div\r\n                style={{\r\n                    border: 'black solid 3px',\r\n                    borderRadius: '15px',\r\n                    padding: '1vh 2vw',\r\n                    width: '90%'\r\n                }}\r\n                >\r\n                    <SelectAll_Handler\r\n                    />\r\n                </div>\r\n\r\n                <Checkbox_Handler\r\n                CHECKBOX={CHECKBOX}\r\n                />\r\n\r\n                <span\r\n                    style={{\r\n                        justifySelf: 'center',\r\n                        fontSize: '15px',\r\n                        fontWeight: 'bold',\r\n                        padding: '0.5vh 2.5vw',\r\n                        borderRadius: '15px',\r\n                        border: 'black solid 3px'\r\n                    }}\r\n                    >\r\n                    * Total {ELEMENT.length} Reviews *\r\n                    </span>\r\n\r\n                {ELEMENT.map((element, index)=>{\r\n\r\n                    return <div>\r\n                    <div\r\n                    \r\n                    style={{\r\n                        display: 'grid',\r\n                        gridTemplateColumns: '(repeat 1, 1fr)',\r\n                        rowGap: '1vh',\r\n                        border:'black solid 3px',\r\n                        borderRadius: '28px',\r\n                        padding: '1.5vh 3vw 3vh 3vw'\r\n                    }}\r\n                    >\r\n\r\n                    <input\r\n                    className=\"custom-checkbox\"\r\n                    type=\"checkbox\"\r\n                    key={index}\r\n                    checked={CHECKBOX.includes(element.id)}\r\n                    onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                            const EXISTED = [...CHECKBOX]\r\n                            setDelete_review({\r\n                                checked: true\r\n                            })\r\n\r\n                            if(!EXISTED.includes(element.id)){\r\n                                updateCHECKBOX([...EXISTED, element.id])\r\n                                \r\n                            }\r\n                        } else {\r\n                                const RENEW = CHECKBOX.filter(id => id !== element.id)\r\n                                updateCHECKBOX(RENEW)\r\n                            \r\n                                if(RENEW.length === 0){\r\n                                    setDelete_review({\r\n                                        checked: false\r\n                                    })\r\n                                }\r\n                            }\r\n                    \r\n                        \r\n                    \r\n                    }}\r\n                  ></input>\r\n\r\n                    <a\r\n                    href={`/search/location/places/${element.placecode}`}\r\n                    target=\"_blank\"\r\n                    >\r\n                    <div\r\n                        style={{\r\n                            justifySelf:'center',\r\n                            textAlign:'center',\r\n                            backgroundColor: 'white',\r\n                            height: 'fit-content',\r\n                            alignContent: 'center',\r\n                            width: '90%',\r\n                            borderRadius: '15px',\r\n                            padding: '1vh 0',\r\n                            lineHeight: '30px'\r\n                        }}\r\n                    >\r\n                        {element.placename}\r\n                        <br></br>\r\n                        \r\n                        <span\r\n                        style={{\r\n                            fontSize: '13px'\r\n                        }}\r\n                        >\r\n                        ( Link Here )\r\n                        </span>\r\n\r\n                    </div>\r\n                    </a>\r\n\r\n                    <TextDispenser\r\n                    element={element}\r\n                    />\r\n\r\n                    <div\r\n                    style={{\r\n                        position:'relative',\r\n                        bottom: '15px',\r\n                        justifySelf: 'center'\r\n                    }}\r\n                    >\r\n                        {`작성자: ${USERNAME.name}`}\r\n                    </div>\r\n\r\n                    <div\r\n                    style={{\r\n                        fontSize:'15px',\r\n                        justifySelf: 'center',\r\n                        backgroundColor: 'white',\r\n                        borderRadius: '15px',\r\n                        padding: '0.25vh 2vw'\r\n                    }}\r\n                    >\r\n                        Created\r\n                    </div>\r\n\r\n                    <div\r\n                    style={{\r\n                        width: '70%',\r\n                        justifySelf: 'center',\r\n                        borderBottom: 'white solid 5px',\r\n                        textAlign: 'center'\r\n                    }}\r\n                    >\r\n                        <DateCalculator\r\n                        date={element.created_at}\r\n                        />\r\n                    </div>\r\n\r\n                    <img\r\n                    src=''\r\n                    style={{\r\n                        display:'none',\r\n                        width: '80%',\r\n                        aspectRatio: '1/1',\r\n                        objectFit: 'cover',\r\n                        justifySelf: 'center',\r\n                        border: 'white solid 3px',\r\n                        borderRadius: '10px'\r\n                    }}\r\n                    alt=\"let\"\r\n                    onClick={(e)=>{\r\n                        e.target.style.display = 'none'\r\n                    }}\r\n                    >\r\n                    </img>\r\n\r\n                    <div\r\n                    style={{\r\n                        \r\n                        width:'80%',\r\n\r\n                        display: 'grid',\r\n                        gridTemplateColumns: 'repeat(3, 1fr)',\r\n                        justifyItems: 'center',\r\n                        justifySelf: 'center',\r\n                        alignItems: 'center',\r\n                        border: 'black solid 3px',\r\n                        borderRadius:'15px',\r\n\r\n                        padding: '1.5vh 2vw',\r\n                        columnGap: '2vw',\r\n                        rowGap: '1.5vh'\r\n                    }}\r\n                    >\r\n                        \r\n                        {element.picture_url_array.map((element, index)=>{\r\n\r\n                            return <img\r\n                            src={`${element}`}\r\n                            style={{\r\n                                width: '80%',\r\n                                aspectRatio: '1',\r\n                                border:'white solid 3px',\r\n                                borderRadius: '10px'\r\n                            }}\r\n                            \r\n                            onClick={(e)=>{\r\n                                const Target = e.target.parentNode.previousElementSibling\r\n                                Target.style.display = 'block'\r\n                                Target.src = e.target.src\r\n                            }}\r\n                            >\r\n                            </img>\r\n                        })}\r\n                    </div>\r\n                    <div\r\n                    style={{\r\n                        justifySelf: 'center',\r\n                        display: 'grid',\r\n                        gridTemplateRows: 'repeat(2, 1fr)',\r\n                        justifyItems: 'center',\r\n                        alignItems: 'center',\r\n                        border: 'white solid 2px',\r\n                        borderRadius: '15px',\r\n                        padding: '0.5vh 2vw 1.5vh 2vw',\r\n                        marginBottom: '2.5vh',\r\n                        width: '80%',\r\n                        textAlign: 'center'\r\n                    }}\r\n                    >\r\n                        <span>Star Reputation</span>\r\n                        {start_dispenser(element.star_rating)}\r\n                    \r\n                    </div>\r\n                        \r\n                        <div\r\n                        style={{\r\n                            width: '90%',\r\n                            display: 'grid',\r\n                            gridTemplateColumns: 'repeat(2, 1fr)',\r\n                            columnGap: '1vw',\r\n                            justifySelf: 'center',\r\n                            borderRadius: '5px',                        \r\n                            margin: '1.5vh 0vw 0vh 0vw',\r\n                            }}>\r\n                                \r\n                                <Link\r\n                                to={`review/${element.id}?${queryParams}`}\r\n                                target=\"_blank\"\r\n                                >\r\n                                <div\r\n                                style={{\r\n                                    justifySelf: 'center',\r\n                                    backgroundColor: 'white',\r\n                                    borderRadius: '7px',\r\n                                    padding: '0.5vh 2.5vw'  \r\n                                }}\r\n                                >\r\n                                    <span>\r\n                                        Edit\r\n                                    </span>\r\n                                    \r\n                                    <img\r\n                                    src={Editbtn}\r\n                                    style={{\r\n                                        position:'relative',\r\n                                        left:'5.5px',\r\n\r\n                                        width: '15px',\r\n                                        height: '15px'\r\n                                    }}>\r\n                                    </img>\r\n                                </div>\r\n                                </Link>\r\n\r\n                                <div\r\n                                style={{\r\n                                    justifySelf: 'center',\r\n                                    backgroundColor: 'white',\r\n                                    borderRadius: '7px',\r\n                                    padding: '0.5vh 2.5vw'  \r\n                                }}\r\n                                onClick={\r\n                                    async (e)=>{\r\n                                    setDelete_popup_state(true)\r\n                                    setDelete_review({\r\n                                        id: element.id,\r\n                                        index: index,\r\n                                        situation: 'single_review'\r\n                                    })\r\n                                    updateCHECKBOX([element.id])                                    \r\n                                }}\r\n\r\n                                >\r\n                                    <span>\r\n                                        Delete\r\n                                    </span>\r\n                                    \r\n                                    <img\r\n                                    src={Trashcanbtn}\r\n                                    style={{\r\n                                        position:'relative',\r\n                                        left:'5.5px',\r\n\r\n                                        width: '15px',\r\n                                        height: '15px'\r\n                                    }}\r\n                                    >\r\n                                    </img>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <Delete_popup\r\n            activate={Delete_popup_Activate}\r\n            index={Delete_review.index}\r\n            situation={Delete_review.situation}\r\n            checked={Delete_review.checked}\r\n            click_action={async ()=>{\r\n                await fetch('/usercreation/delete_post',{\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({id: [...CHECKBOX]})\r\n                })\r\n                let RENEWED_ALIGN = ELEMENT\r\n                RENEWED_ALIGN = RENEWED_ALIGN.filter(element => !CHECKBOX.includes(element.id))\r\n                \r\n                updateREVIEWS([...RENEWED_ALIGN])\r\n            }}\r\n            close_event={()=>{\r\n                setDelete_popup_state(false)\r\n                updateCHECKBOX([])\r\n            }}\r\n            />\r\n        </React.Fragment>\r\n    }\r\n\r\n    const Load_Review = async (user_id, username) => {\r\n        await fetch(`/usercreation/read_reviews/user/${user_id}`\r\n            ).then( async (result)=>{\r\n            const review_data = await result.json()\r\n            console.log(review_data)\r\n            updateREVIEWS(review_data.result)\r\n            updateUSERNAME({name: username})\r\n\r\n        })\r\n    }\r\n\r\n    if(props.id){\r\n        \r\n        switch(props.id.status){\r\n        case('verified'):\r\n        return <React.Fragment>\r\n\r\n        <div\r\n        className=\"Personalize_Data_Page_Container\"\r\n        >\r\n\r\n            <Homepage_Btn/>\r\n\r\n            <div\r\n            className=\"Personalized_Data_Container_Aligner\"\r\n            >\r\n\r\n                <span\r\n                className=\"Personalized_Data_Page_TextTitle\"\r\n                >\r\n                My Reviews\r\n                </span>\r\n                <br></br>\r\n\r\n\r\n                <Review_Container\r\n                edit={props.edit}\r\n                ELEMENT={ELEMENT}\r\n                username={props.id.userinfo}\r\n                />\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </React.Fragment>\r\n\r\n    case('unverified'):\r\n    return <React.Fragment>\r\n\r\n            <div\r\n            className=\"Personalize_Data_Page_Container\"\r\n            >\r\n\r\n                <Homepage_Btn/>\r\n\r\n                <div\r\n                className=\"Personalized_Data_Container_Aligner\"\r\n                >\r\n\r\n                    <span\r\n                    className=\"Personalized_Data_Page_TextTitle\"\r\n                    >\r\n                    My Reviews\r\n                    </span>\r\n                    <br></br>\r\n\r\n                    <span\r\n                    className=\"Personalized_Data_Page_TextTitle\"\r\n                    >\r\n                    This Page\r\n                    <br></br>\r\n                    is Preparing\r\n                    </span>                    \r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default My_Reviews","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Journals.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\MY_Alarms.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Options.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Mini_LoginLogout_Btn\\Login_Btn.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Mini_LoginLogout_Btn\\Logout_Btn.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Registeration_Page\\Registration_Page.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Registeration_Page\\Registration_Default_Page.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Registeration_Page\\Registration_Field_Page.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Login_page\\Login_page_integrator.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Login_page\\foodscript_version_LocalVersion\\foodscript_login_page.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Mini_LoginLogout_Btn\\AccountMaker_Link.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\Homepage_Btn.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\User_Creator_Zone\\Review_Post_Box.js",["306"],[],"import React, {useState, useRef, useEffect} from \"react\";\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Review_Post_Box = (props) =>{\r\n\r\n    const [text, setText] = useState('');\r\n    const [star_rating, setStar_Rating] = useState('');\r\n    const [pictures, setPictures] = useState([]);\r\n    const [pictures_input, setInput] = useState([])\r\n    const textareaRef = useRef(null);\r\n    \r\n    useEffect(()=>{\r\n        if (textareaRef.current) {\r\n            textareaRef.current.scrollTop = textareaRef.current.scrollHeight;\r\n          }\r\n          \r\n    },[text])\r\n\r\n    const location = useLocation();\r\n\r\n    const handleChange = (e) => {\r\n        setText(e.target.value); \r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let ID = await fetch('/login_check',{\r\n            method: 'GET',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        let ID_data = await ID.json()\r\n\r\n        switch(ID_data.status){\r\n\r\n        case('verified'):\r\n            const formData = new FormData(e.target)\r\n            const placecode = location.pathname.slice(17)\r\n            console.log(pictures_input.length)\r\n\r\n            formData.delete('post_pictures')\r\n            pictures_input.forEach((file)=>{\r\n                formData.append('post_pictures',file)\r\n            })\r\n            const placepicture = props.placepicture[0].getUrl()\r\n\r\n            formData.append('id',ID_data.userinfo.id)\r\n            formData.append('placecode', placecode)\r\n            formData.append('placename', props.placename)\r\n            formData.append('placepicture', placepicture)\r\n            \r\n            const POST_ACTION = await fetch('/usercreation/post_review',{\r\n                method:`POST`,\r\n                body: formData\r\n            })\r\n\r\n            props.PostEvent()\r\n            alert(`Your new review got posted`)\r\n            break;\r\n\r\n        case('unverified'):\r\n            alert(`You need to login or join foodscript user before you write down`)\r\n            break;\r\n\r\n        case(undefined):\r\n            alert(`You need to login before you write down`)\r\n            break;\r\n\r\n        default:\r\n            break;\r\n\r\n        }\r\n    }\r\n\r\n        const Star_Reputation = (props) => {\r\n            return <div\r\n                style={{\r\n                    marginTop: '2vh',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <select \r\n                    name=\"star_rating\"\r\n                    required\r\n                    value={star_rating}\r\n                    onChange={(e)=>{\r\n                        setStar_Rating(e.target.value)\r\n                    }}\r\n                    style={{\r\n                        width: '90%',\r\n                        padding: '1vh 2vw',\r\n                        borderRadius: '8px',\r\n                        border: 'black solid 2px',\r\n                        borderBottom: 'black solid 4px',\r\n                        backgroundColor: '#ff9933',\r\n                        fontFamily: '큐트신민상'\r\n                    }}\r\n                >\r\n                    <option value=\"\"\r\n                        style={{\r\n                            textAlign: 'center'\r\n                        }}\r\n                    >Select Reputation</option>\r\n                    <option value=\"5\">⭐⭐⭐⭐⭐ (5점)</option>\r\n                    <option value=\"4\">⭐⭐⭐⭐ (4점)</option>\r\n                    <option value=\"3\">⭐⭐⭐ (3점)</option>\r\n                    <option value=\"2\">⭐⭐ (2점)</option>\r\n                    <option value=\"1\">⭐ (1점)</option>\r\n                </select>\r\n            </div>\r\n        }\r\n\r\n        const Picture_Status = (props) => {\r\n\r\n            if(props.input.length === 0){ \r\n                return <label\r\n                style={{\r\n                    width:'95%',\r\n                    height:'15vh',\r\n    \r\n                    display:'grid',\r\n                    justifyContent: 'center',\r\n                    alignItems:\"center\",\r\n    \r\n                    border: 'black solid 2px',\r\n                    borderBottom: 'black solid 5px',\r\n                    borderRadius: '15px',\r\n    \r\n                    textAlign: 'center',\r\n    \r\n                    background: '#f5ee90',\r\n                    fontFamily: '큐트신민상'\r\n                }}\r\n                htmlFor=\"post_pictures\"\r\n                >\r\n    \r\n                    <span>\r\n                        Click Here\r\n                        <br></br>\r\n    \r\n                        <br></br>\r\n                        To Add Picture\r\n                    </span>\r\n    \r\n                </label>\r\n    \r\n    \r\n             }\r\n\r\n            else{\r\n            return <React.Fragment>\r\n\r\n            <div\r\n            style={{\r\n                width:'95%',\r\n                height:'fit-content',\r\n                borderRadius: '23px',\r\n                margin: '3vh 0vw 0vh 0vw',\r\n\r\n            }}\r\n            >\r\n\r\n                <div\r\n                style={{\r\n\r\n                    display:'grid',\r\n                    gridAutoFlow:'column',\r\n                    alignItems:'center',\r\n                    gap: '12vw',\r\n                    width: '53vw',\r\n                    height: 'fit-content',\r\n                    overflowX: 'auto',\r\n                    \r\n                    whiteSpace: 'nowrap',\r\n                    padding: '0 1.5vw'\r\n\r\n                }}\r\n                >\r\n                    {props.input.map((element)=>{\r\n                        \r\n                        return <img\r\n                            style={{\r\n                                width:'50vw',\r\n                                border: 'white solid 1vw',\r\n                                aspectRatio: '1',\r\n                                borderRadius: '15px',\r\n                                objectFit: 'cover'\r\n                            }}\r\n                            src={element}\r\n                        >\r\n                        </img>\r\n                    })}\r\n\r\n                <label\r\n                style={{\r\n                    width:'50vw',\r\n                    aspectRatio: '1',\r\n                    border:'white solid 5px',\r\n                    borderRadius:'20px',\r\n\r\n                    display:'grid',\r\n                    justifyContent: 'center',\r\n                    alignItems:\"center\",\r\n    \r\n                    textAlign: 'center',\r\n                    \r\n                    fontFamily: '큐트신민상',\r\n                    fontSize: '20px',\r\n\r\n                }}\r\n                htmlFor=\"post_pictures\"\r\n                >\r\n    \r\n                    <div\r\n                        style={{\r\n                            width:'40vw',\r\n                            border:'white solid 5px',\r\n                            aspectRatio: '1',\r\n                            display:'grid',\r\n                            justifyContent: 'center',\r\n                            alignItems:\"center\",\r\n\r\n                            border: 'black solid 3px',\r\n                            borderBottom: 'black solid 6px',\r\n                            borderRadius: '15px',\r\n                        }}\r\n                    >\r\n                        <span>\r\n                        Click Here\r\n                        <br></br>\r\n                        <br></br>\r\n                        <span\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            padding: '0.5vh 1vw 0 1vw',\r\n                            borderRadius: '15px'\r\n                        }}\r\n                        >\r\n                            +\r\n                        </span>\r\n                        <br></br>\r\n                        <br></br>\r\n                        To Add Picture\r\n                        </span>\r\n                    </div>\r\n    \r\n                </label>\r\n\r\n                </div>\r\n                </div>\r\n\r\n\r\n            </React.Fragment>\r\n            }\r\n        }\r\n\r\n    return <React.Fragment>\r\n        \r\n        <div\r\n        style={{\r\n            width: 'inherit',\r\n            height: 'fit-content',\r\n\r\n            border: 'black solid 2.5px',\r\n            borderBottom: 'black solid 6px',\r\n\r\n            borderRadius: '15px',\r\n            padding: '2vh 5vw',\r\n\r\n            fontSize: '20px'\r\n\r\n        }}\r\n        >\r\n\r\n            <form\r\n            onSubmit={handleSubmit}\r\n            >\r\n            \r\n            <Picture_Status input={pictures}/>\r\n\r\n            <input\r\n            id=\"post_pictures\"\r\n            name=\"post_pictures\"\r\n            type=\"file\"\r\n            multiple\r\n            accept=\"image/*\"\r\n\r\n            required\r\n            onChange={(e)=>{\r\n                const files = e.target.files\r\n                setInput([...pictures_input, ...files])\r\n                \r\n\r\n                if(files.length > 0){\r\n                    Array.from(files).forEach((file) => {\r\n                        const reader = new FileReader()\r\n                        reader.onload = function(e){\r\n                            const imageData = e.target.result;\r\n                            setPictures((pictures)=>[...pictures, imageData])\r\n                        }\r\n                    reader.readAsDataURL(file)\r\n                    })\r\n                    e.target.removeAttribute('required');\r\n                }\r\n                else{\r\n                    e.target.setAttribute('required', 'required');\r\n                }\r\n                \r\n            e.target.value='';\r\n            }}\r\n            style={{\r\n            display:\"none\"\r\n            }}\r\n            >\r\n            </input>\r\n\r\n            <Star_Reputation />\r\n\r\n            <textarea\r\n            name=\"post_text\"\r\n            style={{\r\n                height:'20vh',\r\n\r\n                marginTop: '3vh',\r\n                fontSize: '15px',\r\n\r\n                padding: `3vh 6vw`,\r\n\r\n                border: 'black solid 2px',\r\n                borderBottom: 'black solid 5px',\r\n                borderRadius: '15px',\r\n\r\n                backgroundColor: '#f2eeb8',\r\n\r\n                letterSpacing: '1.5px',\r\n                wordSpacing: '-3px',\r\n                lineHeight: '3.5vh'\r\n            }}\r\n            placeholder=\"Write down your comment at here\"\r\n            \r\n            minLength={30}\r\n            ref={textareaRef}\r\n            value={text}\r\n            onChange={handleChange}\r\n            required\r\n            >\r\n            \r\n            </textarea>\r\n        \r\n            <input\r\n            type=\"submit\"\r\n            value={'Post it'}\r\n            style={{\r\n                width:'100%',\r\n                \r\n                fontFamily: '큐트신민상',\r\n                fontSize: '5vw',\r\n                fontWeight: 'bold',\r\n                letterSpacing: '2vw',\r\n\r\n                borderBottom: 'black solid 5px',\r\n\r\n                marginTop: '1vh',\r\n                padding: '1.5vh 0vw',\r\n\r\n                borderRadius: '10px',\r\n                \r\n            }}\r\n            >\r\n            \r\n            </input>\r\n            </form>\r\n\r\n        </div>\r\n        \r\n\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Review_Post_Box;","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\User_Creator_Zone\\Video_Post_Box.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\User_Creator_Zone\\Journey_Post_Box.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\DateCalculator.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\Delete_popup.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Personalized_Data_Page\\Personailized_Data_ReflectZone\\My_Review.js",["307"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Form, useParams } from 'react-router-dom'\r\n\r\nimport DateCalculator from \"./DateCalculator.js\";\r\nimport OnOffToggler from '../../../1_image_or_icon/OnOff_Toggler_icon.png'\r\nimport Add_Icon from \"../../../1_image_or_icon/OnOff_Toggler_icon.png\"\r\n\r\nconst Single_ReviewData = (props) => {\r\n\r\n    const params = useParams()\r\n\r\n    const containerRef = useRef(null)\r\n    const PICTURE_URL = useRef(null)\r\n    const CheckBox = useRef(null)\r\n    const Close_Btn = useRef(null)\r\n    const Checked_Or_Not = useRef(null)\r\n    const TEXTDATA = useRef(null)\r\n\r\n    const [STARRATE, updateSTAR] = useState()\r\n    const [Btn_status, updateBtn] = useState({\r\n        display: 'none',\r\n        position: 'none',\r\n        checked: false,\r\n    })\r\n    const [FontSize, updateFONTSIZE] = useState({})\r\n    const [WIDTH, updateWIDTH] = useState({fliped: false})\r\n    const [HEIGHT, updateHEIGHT] = useState({height: 0})\r\n\r\n    const [Single_Review, updateREVIEW] = useState({\r\n        placename: undefined,\r\n        picture_url_array: [],\r\n        created_at: undefined\r\n    })\r\n\r\n    const [PATCHDATA, updatePATCH] = useState({\r\n        target: undefined,\r\n        patchdata: {\r\n            user_post_pictures: []\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        if(params.reviewid && props.id.userinfo.id && props.id.status==='verified'){\r\n            Load_Single_Review(params.reviewid, props.id.userinfo.id)\r\n        }\r\n\r\n        const divElement = containerRef.current\r\n        const picture_HEIGHT = PICTURE_URL.current\r\n\r\n        const resizeObserver = new ResizeObserver(()=>{\r\n            if(divElement){\r\n                updateFONTSIZE({\r\n                    title : `${divElement.offsetWidth*0.1}px`,\r\n                    content : `${divElement.offsetWidth*0.065}px`\r\n                })\r\n                updateWIDTH({\r\n                    textbox : `${divElement.offsetWidth*0.18}vw`,\r\n                    fliped : true\r\n                })\r\n                updateHEIGHT((pre)=>({\r\n                    height : Number(picture_HEIGHT.offsetHeight+20)\r\n                }))\r\n            }\r\n        })\r\n    \r\n        if(divElement){\r\n            resizeObserver.observe(divElement)\r\n            resizeObserver.observe(picture_HEIGHT)\r\n        }\r\n\r\n        return()=>{\r\n            resizeObserver.disconnect()\r\n        }\r\n\r\n    },[props, PATCHDATA.patched])\r\n\r\n    const Load_Single_Review = async (reviewid, userid) => {\r\n        await fetch(`/usercreation/read_review/${reviewid}/${userid}`).then( async (res)=>{\r\n            const Single_Review = await res.json()\r\n            updateREVIEW(Single_Review.result)\r\n            updateSTAR(Single_Review.result.star_rating)\r\n            updatePATCH({\r\n                ...PATCHDATA,\r\n                patchdata:Single_Review.result\r\n            })\r\n        })\r\n    }\r\n\r\n    const Star_Reputation = () => {\r\n        return <div\r\n            style={{\r\n                marginTop: '1vh',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: '100%'\r\n            }}\r\n        >\r\n            <select\r\n                name=\"star_rating\"\r\n                required\r\n                defaultValue={STARRATE}\r\n                onChange={(e)=>{\r\n                    \r\n                    updatePATCH((pre)=>({\r\n                        ...pre,\r\n                        patchdata:{\r\n                            ...pre.patchdata,\r\n                            star_rating: e.target.value\r\n                        }\r\n                    }))\r\n                    updateSTAR(e.target.value)\r\n                    \r\n                }}\r\n                style={{\r\n                    width: '90%',\r\n                    padding: '1vh 2vw',\r\n                    borderRadius: '8px',\r\n                    border: 'black solid 2px',\r\n                    borderBottom: 'black solid 4px',\r\n                    backgroundColor: '#ff9933',\r\n                    fontFamily: '큐트신민상',\r\n                    textAlign: 'center'\r\n                }}\r\n            >\r\n                <option value=\"5\">⭐⭐⭐⭐⭐ (5점)</option>\r\n                <option value=\"4\">⭐⭐⭐⭐ (4점)</option>\r\n                <option value=\"3\">⭐⭐⭐ (3점)</option>\r\n                <option value=\"2\">⭐⭐ (2점)</option>\r\n                <option value=\"1\">⭐ (1점)</option>\r\n            </select>\r\n        </div>\r\n    }\r\n    \r\n    return <React.Fragment>\r\n\r\n        <div\r\n        style={{\r\n            width:'100%',\r\n            height: 'fit-content',\r\n            marginLeft: '30px',\r\n            display:'grid',\r\n            gridAutoFlow: 'row',\r\n            rowGap: '10px',\r\n            alignItems: 'center',\r\n            justifyItems: 'center',\r\n            padding: '50px 10px',\r\n            fontFamily: '큐트신민상',\r\n\r\n            border: 'black solid 2.5px',\r\n            borderRadius: '30px'\r\n        }}\r\n        ref={containerRef}\r\n        >\r\n            <div\r\n            style={{\r\n                justifySelf:'center',\r\n                fontSize: FontSize.title\r\n            }}\r\n            >\r\n            {Single_Review.placename}\r\n            </div>\r\n\r\n            <textarea\r\n            style={{\r\n                width: WIDTH.textbox,\r\n                height: '24vh',\r\n                letterSpacing: '3.5px',\r\n                wordSpacing: '1px',\r\n                lineHeight: '3.5vh',\r\n                whiteSpace: 'pre-wrap',\r\n                overflowWrap: 'break-word',\r\n                justifySelf: 'center',\r\n                fontSize: FontSize.content,\r\n                backgroundColor: 'white',\r\n                padding: '10px 10px',\r\n                borderRadius: '20px'\r\n            }}\r\n            defaultValue={Single_Review.user_post_text}\r\n            ref={TEXTDATA}\r\n            >\r\n            </textarea>\r\n\r\n            <div\r\n            style={{\r\n                justifySelf:'center',\r\n                fontSize: FontSize.title\r\n            }}\r\n            >\r\n            작성자: {params.userid}\r\n            </div>\r\n            \r\n\r\n            <div\r\n            style={{\r\n                fontSize: FontSize.title\r\n            }}\r\n            >Created At</div>\r\n\r\n            <div\r\n            style={{\r\n                width: '80%',\r\n                textAlign: 'center'\r\n            }\r\n            }>\r\n                {Single_Review.created_at !== undefined\r\n                ? `${Single_Review.created_at.slice(0,10).replaceAll('-','.')}`\r\n                : ''}\r\n                \r\n            </div>\r\n\r\n            <div\r\n            style={{\r\n                height: PATCHDATA.target === undefined ? '0px' : `${HEIGHT.height}px`,\r\n                display:'flex',\r\n                flexDirection: 'column',\r\n                overflow: 'hidden',\r\n                alignItems: 'center'\r\n            }}\r\n            >\r\n                <img\r\n                ref={PICTURE_URL}\r\n                style={{\r\n                    width: '80%',\r\n                    aspectRatio: '1',\r\n                    objectFit: 'cover',\r\n                    display: 'none',\r\n                    borderRadius: '15px',\r\n                    padding: '5px',\r\n                    border: 'white solid 2px',\r\n                    margin: '10px 15px 30px 15px'\r\n                }}\r\n                >\r\n                </img>\r\n\r\n                <div\r\n                style={{  \r\n                    display: Btn_status.display,\r\n                    position: Btn_status.position,\r\n                    bottom: '150px'\r\n                }}\r\n                >\r\n\r\n                    <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    accept=\"image/*\"\r\n                    id=\"Add_picture\"\r\n                    style={{\r\n                        display:\"none\"\r\n                    }}\r\n                    onChange={async (event)=>{\r\n\r\n                        const Add_file = event.target.files\r\n                        const FILEREADER_URL = new FileReader()\r\n                        const FILEREADER_BINARY = new FileReader()\r\n\r\n                        let Added_URL_Array = [...Single_Review.picture_url_array]\r\n                        let Added_BINARY_Array = PATCHDATA.patchdata.user_post_pictures === undefined \r\n                        ? [...Single_Review.user_post_pictures]\r\n                        : [...PATCHDATA.patchdata.user_post_pictures]\r\n\r\n                        let index=0;\r\n\r\n                            async function handleURL() { \r\n                            \r\n                                for (const element of Array.from(Add_file)) {\r\n\r\n                                    const fileDataUrl = await new Promise((resolve, reject) => {\r\n                                        FILEREADER_URL.onload = (e) => resolve(e.target.result);\r\n                                        FILEREADER_URL.readAsDataURL(element);\r\n                                    });\r\n                                    Added_URL_Array.splice(PATCHDATA.target+index+1, 0, fileDataUrl)\r\n                                    index++\r\n                                }\r\n                            \r\n                                updateREVIEW({\r\n                                    ...Single_Review,\r\n                                    picture_url_array: Added_URL_Array\r\n                                });\r\n                                PICTURE_URL.current.src = Added_URL_Array[PATCHDATA.target]\r\n                                index =0;\r\n                            }\r\n\r\n                            async function handelBINARY() {\r\n                                for (const element of Array.from(Add_file)) {\r\n\r\n                                    const fileDataBNINARY = await new Promise((resolve, reject) => {\r\n                                        FILEREADER_BINARY.onload = (e) => resolve(e.target.result);\r\n                                        FILEREADER_BINARY.readAsArrayBuffer(element);\r\n                                    });\r\n                                    Added_BINARY_Array.splice(PATCHDATA.target+index+1, 0, fileDataBNINARY)\r\n                                    index++\r\n                                }\r\n\r\n                                updatePATCH({\r\n                                    target: PATCHDATA.target,\r\n                                    patchdata: {\r\n                                        ...PATCHDATA.patchdata,\r\n                                        user_post_pictures: Added_BINARY_Array\r\n                                    }\r\n                                })\r\n                                index = 0;\r\n                            }\r\n\r\n                            \r\n\r\n                        await handleURL();\r\n                        await handelBINARY();\r\n                    }}\r\n                    >\r\n                    </input>\r\n                \r\n                    <div\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            padding: '4px',\r\n                            borderRadius: '15px',\r\n                            border: 'black solid 3px',\r\n                            marginBottom: '15px'\r\n                        }}\r\n                    >\r\n                        <label\r\n                        htmlFor=\"Add_picture\"\r\n                        >\r\n                            <img  \r\n                            src={Add_Icon}\r\n                            style={{\r\n                                width: '20px',\r\n                                transform: 'rotate(45deg)'\r\n                            }}\r\n                            >\r\n                            </img>\r\n\r\n                            <span\r\n                            style={{\r\n                                fontSize: '15px',\r\n                                fontWeight: 'bold',\r\n                                padding: '10px 10px',\r\n                                \r\n                                position: 'relative',\r\n                                bottom: '4.5px',\r\n                            }}\r\n                            >\r\n                                Add\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div\r\n                        \r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                            padding: '4px',\r\n                            borderRadius: '15px',\r\n                            border: 'black solid 3px'\r\n                        }}\r\n                    \r\n                        onClick={()=>{\r\n                            let PRESERVED = [...Single_Review.picture_url_array]\r\n                            let PRESERVED_BINARY = [...PATCHDATA.patchdata.user_post_pictures]\r\n                            PRESERVED = PRESERVED.filter((_, indes) => indes !== PATCHDATA.target)\r\n                            PRESERVED_BINARY = PRESERVED_BINARY.filter((_, indes) => indes !== PATCHDATA.target)\r\n\r\n                            updatePATCH((pre)=>({\r\n                                target: PATCHDATA.target,\r\n                                patchdata:{\r\n                                    ...PATCHDATA.patchdata,\r\n                                    user_post_pictures: PRESERVED_BINARY\r\n                                }\r\n                            }))\r\n            \r\n                            updateREVIEW({\r\n                                ...Single_Review,\r\n                                picture_url_array: PRESERVED\r\n                            })\r\n\r\n                            if(PATCHDATA.target>=0 && PATCHDATA.target !== PRESERVED.length){\r\n                                PICTURE_URL.current.src = Single_Review.picture_url_array[PATCHDATA.target+1]\r\n                                console.log(PATCHDATA.target, PRESERVED.length)\r\n                            }\r\n                            if( PRESERVED.length>0 && PATCHDATA.target === PRESERVED.length){\r\n                                console.log(PATCHDATA.target)\r\n                                PICTURE_URL.current.src = Single_Review.picture_url_array[PATCHDATA.target-1]\r\n                                updatePATCH({\r\n                                    target: PATCHDATA.target-1,\r\n                                    patchdata:{\r\n                                        ...PATCHDATA.patchdata,\r\n                                        user_post_pictures: PRESERVED_BINARY\r\n                                    }\r\n                                })\r\n                            }\r\n                            if( PRESERVED.length === 0){\r\n                                \r\n                                PICTURE_URL.current.style.display = 'none'\r\n                                updateBtn({\r\n                                    position: 'relative',\r\n                                    display: 'none',\r\n                                    checked: true\r\n                                })\r\n                                Close_Btn.current.style.display = 'none'\r\n                                CheckBox.current.style.display = 'none'\r\n                            }\r\n                        }}\r\n                    >\r\n                        <img  \r\n                        src={OnOffToggler}\r\n                        style={{\r\n                            width: '20px'\r\n                        }}\r\n                        >\r\n                        </img>\r\n\r\n                        <span\r\n                        style={{\r\n                            fontSize: '15px',\r\n                            fontWeight: 'bold',\r\n                            padding: '10px 10px',\r\n                            \r\n                            position: 'relative',\r\n                            bottom: '4.5px',\r\n                        }}\r\n                        >\r\n                            Delete\r\n                        </span>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n            style={{\r\n                display: 'none'\r\n            }}\r\n            ref={CheckBox}\r\n            onChange= {(e)=>{\r\n                if(e.target.checked === true){\r\n                    updateBtn({\r\n                        position: 'relative',\r\n                        display: 'none',\r\n                        checked: true\r\n                    })\r\n                }\r\n                else{\r\n                    updateBtn({\r\n                        position: 'relative',\r\n                        display: 'block',\r\n                        checked: false\r\n                    })\r\n                }\r\n\r\n            }}\r\n            >\r\n                <input\r\n                type='checkbox'\r\n                id='View_Clear_checkbox'\r\n                ref={Checked_Or_Not}\r\n                >\r\n                </input>\r\n\r\n                <label\r\n                for=\"View_Clear_checkbox\"\r\n                >\r\n                View Clear\r\n                </label>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: 'none',\r\n\r\n                    width: '80%',\r\n                    textAlign: 'center',\r\n\r\n                    backgroundColor: 'white',\r\n                    padding: '10px',\r\n                    borderRadius: '15px',\r\n                    border: 'black solid 3px'\r\n                }}\r\n                ref={Close_Btn}\r\n                onClick={\r\n                    (e)=>{\r\n                        updateBtn({\r\n                            position: 'none',\r\n                            display: 'none',\r\n                            checked: false\r\n                        })\r\n                        const PICTURE_SUBNAIL = PICTURE_URL.current\r\n                        const CheckBox_Status = CheckBox.current\r\n\r\n                        PICTURE_SUBNAIL.style.display = 'none'\r\n                        CheckBox_Status.style.display = 'none'\r\n                        Close_Btn.current.style.display = 'none'\r\n\r\n                    }\r\n                }\r\n            >\r\n                <span\r\n                style={{\r\n                    fontSize: '20px',\r\n                    fontWeight: 'bold',\r\n                    letterSpacing: '3.5px'\r\n                }}>\r\n                    close\r\n                </span>\r\n            </div>\r\n\r\n            <div\r\n            style={{\r\n                width: '90%',\r\n                display: Single_Review.picture_url_array.length === 0 ? 'none' : 'grid',\r\n                gridTemplateColumns: '1fr 1fr 1fr',\r\n                rowGap: '1vw',\r\n                border: 'white solid 3px',\r\n                justifyItems: 'center',\r\n                padding: '10px 5px'\r\n            }}\r\n            >\r\n                { Single_Review.picture_url_array.length !== 0 \r\n                ? Single_Review.picture_url_array.map((url, index)=>{\r\n                    return <img\r\n                    src={url}\r\n                    key={index}\r\n                    style={{\r\n                        width: '10vw',\r\n                        aspectRatio: '1/1',\r\n                        objectFit: 'cover',\r\n                        border:'white solid 3px',\r\n                        borderRadius: '10px',\r\n                    }}\r\n                    onClick={\r\n                        ()=>{\r\n                            console.log(index)\r\n\r\n                            let UpdateFormData = new FormData\r\n\r\n\r\n                            updatePATCH({\r\n                                ...PATCHDATA,\r\n                                target: index\r\n                            })\r\n\r\n                            const PICTURE_ELEMENT = PICTURE_URL.current\r\n                            PICTURE_ELEMENT.style.display= 'block'\r\n                            PICTURE_ELEMENT.src= url\r\n\r\n                            const CheckBox_Status = CheckBox.current\r\n                            CheckBox_Status.style.display = 'block'\r\n\r\n                            const Check_Sign = Checked_Or_Not.current\r\n                            const Close_Btn_Status = Close_Btn.current\r\n                            Close_Btn_Status.style.display = 'block'\r\n\r\n                            if(Check_Sign.checked === true){\r\n                                updateBtn({\r\n                                    position: 'none',\r\n                                    display: 'none',\r\n                                    checked: false\r\n                                })\r\n                            }\r\n                            else{\r\n                                updateBtn({\r\n                                    position: 'relative',\r\n                                    display: 'block',\r\n                                    checked: true\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    >\r\n                    </img>\r\n                })\r\n                : ''\r\n                }\r\n\r\n                <div\r\n                style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    width: '10vw',\r\n                    aspectRatio: '1/1',\r\n                    border:'black solid 3px',\r\n                    borderRadius: '10px',\r\n                    backgroundColor: 'white'\r\n                }}\r\n                >\r\n                    <label\r\n                    htmlFor=\"Add_picture\"\r\n                    >\r\n                        <img\r\n                        src={Add_Icon}\r\n                        style={{\r\n                            width: '6.5vw',\r\n                            transform: 'rotate(45deg)'\r\n                        }}\r\n                        >\r\n                        </img>\r\n                    </label>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Star_Reputation/>     \r\n\r\n            \r\n\r\n            <div\r\n            style={{\r\n                fontSize: FontSize.title,\r\n                width: '90%',\r\n                padding: '10px 0px',\r\n                textAlign: 'center',\r\n                border: 'black solid 3px',\r\n                borderRadius: '15px'\r\n            }}\r\n            onClick={ async ()=>{\r\n                console.log(PATCHDATA)\r\n\r\n                let PATCH_FORMDATA = new FormData()\r\n\r\n                PATCHDATA.patchdata.user_post_pictures.forEach((element, index)=>{\r\n                    if(element.data === undefined){\r\n                        console.log('new data')\r\n                        const NEW_DATA = new Uint8Array(element)\r\n                        const NEW_BLOB = new Blob([NEW_DATA], { type: 'image/jpeg' })\r\n                        const NEW_file = new File([NEW_BLOB], `Added_img_${params.reviewid}_${index}.jpg`)\r\n                        PATCH_FORMDATA.append('patch_pictures', NEW_file)\r\n                    }\r\n                    else{\r\n                        console.log('pre data')\r\n                        const PRE_DATA = new Uint8Array(element.data)\r\n                        const PRE_BLOB = new Blob([PRE_DATA], { type: 'image/jpeg' })\r\n                        const PRE_file = new File([PRE_BLOB], `PRE_EXSISTED_img_${params.reviewid}_${index}.jpg`, {type: 'image/jpeg'})\r\n                        PATCH_FORMDATA.append('patch_pictures', PRE_file)\r\n                    }\r\n\r\n                })\r\n                \r\n                PATCH_FORMDATA.append(`review_id`, params.reviewid)\r\n                PATCH_FORMDATA.append(`user_id`, props.id.userinfo.id)\r\n                PATCH_FORMDATA.append(`patch_star_rating`, STARRATE)\r\n                PATCH_FORMDATA.append('patch_text', TEXTDATA.current.value)\r\n                \r\n                await fetch(`/usercreation/review/${params.reviewid}`,{\r\n                    method: 'PATCH',\r\n                    body: PATCH_FORMDATA\r\n                })\r\n                \r\n            }}\r\n            >\r\n                Save\r\n            </div>\r\n            \r\n\r\n        </div>\r\n        \r\n\r\n    </React.Fragment>\r\n\r\n\r\n\r\n}\r\n\r\nexport default Single_ReviewData","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\getDetail_Service_Component\\Timestamp.js",[],[],"C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\src\\0_component\\Google_Api_Integation\\Google_Map_Api\\Google_Map_Api_Components\\nearbySearch_Service_Components\\nearbySearchResult_NoResult.js",[],[],{"ruleId":"308","severity":1,"message":"309","line":55,"column":13,"nodeType":"310","messageId":"311","endLine":55,"endColumn":42},{"ruleId":"308","severity":1,"message":"309","line":79,"column":9,"nodeType":"310","messageId":"311","endLine":79,"endColumn":43},{"ruleId":"312","severity":1,"message":"313","line":42,"column":40,"nodeType":"314","messageId":"315","endLine":42,"endColumn":42},{"ruleId":"316","severity":1,"message":"317","line":71,"column":1,"nodeType":"318","endLine":71,"endColumn":35},{"ruleId":"319","severity":1,"message":"320","line":334,"column":17,"nodeType":"321","messageId":"322","endLine":340,"endColumn":18,"fix":"323"},{"ruleId":"319","severity":1,"message":"320","line":286,"column":13,"nodeType":"321","messageId":"322","endLine":289,"endColumn":14,"fix":"324"},{"ruleId":"308","severity":1,"message":"309","line":56,"column":13,"nodeType":"310","messageId":"311","endLine":57,"endColumn":19},{"ruleId":"325","severity":1,"message":"326","line":151,"column":41,"nodeType":"321","endLine":160,"endColumn":43},{"ruleId":"308","severity":1,"message":"309","line":323,"column":13,"nodeType":"310","messageId":"311","endLine":324,"endColumn":20},{"ruleId":"327","severity":1,"message":"328","line":592,"column":35,"nodeType":"329","messageId":"330","endLine":592,"endColumn":37},{"ruleId":"308","severity":1,"message":"309","line":66,"column":13,"nodeType":"310","messageId":"311","endLine":67,"endColumn":19},{"ruleId":"319","severity":1,"message":"320","line":344,"column":21,"nodeType":"321","messageId":"322","endLine":347,"endColumn":22,"fix":"331"},{"ruleId":"332","severity":1,"message":"333","line":229,"column":29,"nodeType":"334","messageId":"330","endLine":229,"endColumn":35},{"ruleId":"335","severity":1,"message":"336","line":536,"column":50,"nodeType":"337","messageId":"338","endLine":536,"endColumn":62,"fix":"339"},"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"340","text":"341"},{"range":"342","text":"341"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"343","text":"341"},"no-dupe-keys","Duplicate key 'border'.","ObjectExpression","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"344","text":"345"},[12107,12107]," rel=\"noreferrer\"",[11242,11242],[11207,11207],[19387,19387],"()"]