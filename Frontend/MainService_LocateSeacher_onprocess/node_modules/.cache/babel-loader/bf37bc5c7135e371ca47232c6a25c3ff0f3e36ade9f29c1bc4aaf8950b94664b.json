{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from 'redux-logger';\nexport let Url = new URLSearchParams(document.location.search);\nexport const initial_State = {\n  urlObject: Url,\n  urlToString: Url.get('keyword')\n};\nexport function AppReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial_State;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'UpdateUrl':\n      {\n        state.urlObject.set(action.option, action.param);\n        return {\n          ...state,\n          urlObject: state.urlObject\n        };\n      }\n    case 'UpdateKeywords':\n      {\n        return {\n          ...state,\n          urlToString: action.param\n        };\n      }\n    case 'EliminateKeyword':\n      {\n        const Exsisted_keywords = state.urlObject.get(action.option).replaceAll(',', ` `).split(' ');\n        const Index = Exsisted_keywords.indexOf(action.param);\n        Exsisted_keywords.splice(Index, 1);\n        state.urlObject.set(action.option, Exsisted_keywords);\n        return {\n          ...state,\n          urlObject: state.urlObject\n        };\n      }\n    case 'ReturnUrlString':\n      {\n        return {\n          ...state\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n}\n_c = AppReducer;\nexport const logger = createLogger();\n// export const store = createStore(AppReducer, applyMiddleware(logger))\nexport const store = createStore(AppReducer);\nexport const ActionCreater = (Applied_type, Applied_option, Applied_param) => {\n  return {\n    type: Applied_type,\n    option: Applied_option,\n    param: Applied_param\n  };\n};\n_c2 = ActionCreater;\nexport default {\n  AppReducer,\n  store\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"ActionCreater\");","map":{"version":3,"names":["createStore","applyMiddleware","createLogger","Url","URLSearchParams","document","location","search","initial_State","urlObject","urlToString","get","AppReducer","state","arguments","length","undefined","action","type","set","option","param","Exsisted_keywords","replaceAll","split","Index","indexOf","splice","_c","logger","store","ActionCreater","Applied_type","Applied_option","Applied_param","_c2","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/2_reducer/reducer.js"],"sourcesContent":["\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport {createLogger} from 'redux-logger';\r\n\r\nexport let Url = new URLSearchParams(document.location.search)\r\n\r\nexport const initial_State = {\r\n    urlObject : Url,\r\n    urlToString : Url.get('keyword')\r\n}\r\n\r\nexport function AppReducer(state = initial_State, action){\r\n\r\n    switch(action.type){\r\n\r\n        case 'UpdateUrl':{\r\n            state.urlObject.set(action.option, action.param)\r\n            return {...state,\r\n                urlObject : state.urlObject\r\n            };\r\n        }\r\n\r\n        case'UpdateKeywords':{\r\n            return {...state,\r\n                urlToString : action.param\r\n            };\r\n        }\r\n\r\n        case 'EliminateKeyword':{\r\n            const Exsisted_keywords = state.urlObject.get(action.option).replaceAll(',', ` `).split(' ')\r\n            const Index = Exsisted_keywords.indexOf(action.param)\r\n            Exsisted_keywords.splice( Index, 1 )\r\n\r\n            state.urlObject.set(action.option, Exsisted_keywords)\r\n            return {...state,\r\n                urlObject : state.urlObject\r\n            }\r\n        }\r\n\r\n        case 'ReturnUrlString':{\r\n            return {...state};\r\n        }\r\n\r\n        \r\n        default: return {...state};\r\n    }\r\n\r\n}\r\n\r\nexport const logger = createLogger();\r\n// export const store = createStore(AppReducer, applyMiddleware(logger))\r\nexport const store = createStore(AppReducer)\r\n\r\n\r\nexport const ActionCreater = (Applied_type, Applied_option ,Applied_param) => {\r\n    return {\r\n        type: Applied_type,\r\n        option: Applied_option,\r\n        param : Applied_param\r\n    }\r\n}\r\n\r\nexport default {AppReducer, store} "],"mappings":"AACA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAAQC,YAAY,QAAO,cAAc;AAEzC,OAAO,IAAIC,GAAG,GAAG,IAAIC,eAAe,CAACC,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC;AAE9D,OAAO,MAAMC,aAAa,GAAG;EACzBC,SAAS,EAAGN,GAAG;EACfO,WAAW,EAAGP,GAAG,CAACQ,GAAG,CAAC,SAAS;AACnC,CAAC;AAED,OAAO,SAASC,UAAUA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,aAAa;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEpD,QAAOC,MAAM,CAACC,IAAI;IAEd,KAAK,WAAW;MAAC;QACbL,KAAK,CAACJ,SAAS,CAACU,GAAG,CAACF,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACI,KAAK,CAAC;QAChD,OAAO;UAAC,GAAGR,KAAK;UACZJ,SAAS,EAAGI,KAAK,CAACJ;QACtB,CAAC;MACL;IAEA,KAAI,gBAAgB;MAAC;QACjB,OAAO;UAAC,GAAGI,KAAK;UACZH,WAAW,EAAGO,MAAM,CAACI;QACzB,CAAC;MACL;IAEA,KAAK,kBAAkB;MAAC;QACpB,MAAMC,iBAAiB,GAAGT,KAAK,CAACJ,SAAS,CAACE,GAAG,CAACM,MAAM,CAACG,MAAM,CAAC,CAACG,UAAU,CAAC,GAAG,EAAG,GAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;QAC5F,MAAMC,KAAK,GAAGH,iBAAiB,CAACI,OAAO,CAACT,MAAM,CAACI,KAAK,CAAC;QACrDC,iBAAiB,CAACK,MAAM,CAAEF,KAAK,EAAE,CAAC,CAAE;QAEpCZ,KAAK,CAACJ,SAAS,CAACU,GAAG,CAACF,MAAM,CAACG,MAAM,EAAEE,iBAAiB,CAAC;QACrD,OAAO;UAAC,GAAGT,KAAK;UACZJ,SAAS,EAAGI,KAAK,CAACJ;QACtB,CAAC;MACL;IAEA,KAAK,iBAAiB;MAAC;QACnB,OAAO;UAAC,GAAGI;QAAK,CAAC;MACrB;IAGA;MAAS,OAAO;QAAC,GAAGA;MAAK,CAAC;EAAC;AAGnC;AAACe,EAAA,GApCehB,UAAU;AAsC1B,OAAO,MAAMiB,MAAM,GAAG3B,YAAY,EAAE;AACpC;AACA,OAAO,MAAM4B,KAAK,GAAG9B,WAAW,CAACY,UAAU,CAAC;AAG5C,OAAO,MAAMmB,aAAa,GAAGA,CAACC,YAAY,EAAEC,cAAc,EAAEC,aAAa,KAAK;EAC1E,OAAO;IACHhB,IAAI,EAAEc,YAAY;IAClBZ,MAAM,EAAEa,cAAc;IACtBZ,KAAK,EAAGa;EACZ,CAAC;AACL,CAAC;AAAAC,GAAA,GANYJ,aAAa;AAQ1B,eAAe;EAACnB,UAAU;EAAEkB;AAAK,CAAC;AAAA,IAAAF,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}