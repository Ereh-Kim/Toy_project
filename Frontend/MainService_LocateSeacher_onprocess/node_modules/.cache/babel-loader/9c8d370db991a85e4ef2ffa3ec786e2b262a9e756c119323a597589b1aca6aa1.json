{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ereh0\\\\OneDrive\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\food_script_2.0.0\\\\Develop\\\\Frontend\\\\MainService_LocateSeacher_onprocess\\\\src\\\\0_component\\\\Personalized_Data_Page\\\\Personailized_Data_ReflectZone\\\\DateCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateCalculator = props => {\n  _s();\n  const [Datedata, updatedata] = useState('');\n  const [parentWidth, setParentWidth] = useState(0);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        // 부모 요소의 너비를 vw 단위로 변환\n        const parentWidthInPx = entry.target.parentElement.offsetWidth;\n        const vw = parentWidthInPx / window.innerWidth * 100;\n        setParentWidth(vw);\n      }\n    });\n    resizeObserver.observe(container);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n  const Define_Today = () => {\n    const Today_Y = new Date().getFullYear();\n    const Today_M = new Date().getMonth() + 1;\n    const Today_D = new Date().getDate();\n    const Today_T = new Date().toLocaleString('ko-KR', {\n      timeZone: 'Asia/Seoul'\n    });\n    return {\n      Year: Today_Y,\n      Month: Today_M,\n      Date: Today_D\n    };\n  };\n  let Today_Data = Define_Today();\n  const Status_Definer = (origin, target) => {\n    const ORIGIN = Number(origin);\n    const TARGET = Number(target);\n    if (ORIGIN < TARGET) {\n      return {\n        Gap: Number(TARGET - ORIGIN),\n        status: '+'\n      };\n    }\n    if (ORIGIN > TARGET) {\n      return {\n        Gap: Number(ORIGIN - TARGET),\n        status: '-'\n      };\n    }\n    if (ORIGIN === TARGET) {\n      return {\n        Gap: 0,\n        status: '='\n      };\n    } else {\n      return;\n    }\n  };\n  const CompareYMD = async (section, target) => {\n    switch (section) {\n      case 'Year':\n        return Status_Definer(Today_Data.Year, target);\n      case 'Month':\n        return Status_Definer(Today_Data.Month, target);\n      case 'Date':\n        return Status_Definer(Today_Data.Date, target);\n      default:\n        return;\n    }\n  };\n  const CompareProcess = async target => {\n    const Yeardata = await CompareYMD('Year', Number(target.Year));\n    const Monthdata = await CompareYMD('Month', Number(target.Month));\n    const Datedata = await CompareYMD('Date', Number(target.Date));\n    return {\n      Year: Yeardata,\n      Month: Monthdata,\n      Date: Datedata\n    };\n  };\n  if (typeof props.date !== 'undefined') {\n    const Timeline_Data = props.date.split(/T|Z/);\n    const Target_Data = {\n      Year: Number(Timeline_Data[0].split('-')[0]),\n      Month: Number(Timeline_Data[0].split('-')[1]),\n      Date: Number(Timeline_Data[0].split('-')[2]),\n      Time: Timeline_Data[1]\n    };\n    CompareProcess(Target_Data).then(result => {\n      if (result.Year.Gap !== 0) {\n        switch (result.Year.status) {\n          case '+':\n            updatedata(`${result.Year.Gap} years ahead`);\n            return;\n          case '-':\n            updatedata(`${result.Year.Gap} years ago`);\n            return;\n          default:\n            return;\n        }\n      } else {\n        if (result.Month.Gap !== 0) {\n          switch (result.Month.status) {\n            case '+':\n              updatedata(`${result.Month.Gap} months ahead`);\n              return;\n            case '-':\n              updatedata(`${result.Month.Gap} months ago`);\n              return;\n            default:\n              return;\n          }\n        } else {\n          if (result.Date.Gap !== 0) {\n            switch (result.Date.status) {\n              case '+':\n                updatedata(`${result.Date.Gap} days ahead`);\n                return;\n              case '-':\n                updatedata(`${result.Date.Gap} days ago`);\n                return;\n              default:\n                return;\n            }\n          } else {\n            updatedata(`Today`);\n          }\n        }\n      }\n    });\n  } else {\n    console.log(props);\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      fontSize: `calc(${parentWidth}vw * 0.09)`\n    },\n    children: [Datedata, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), \"- \", Today_Data.Year, \". \", Today_Data.Month, \". \", Today_Data.Date, \" -\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s(DateCalculator, \"8Tsm0vk20WbQ1XnHw/3YcUaOlv8=\");\n_c = DateCalculator;\nexport default DateCalculator;\nvar _c;\n$RefreshReg$(_c, \"DateCalculator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","DateCalculator","props","_s","Datedata","updatedata","parentWidth","setParentWidth","containerRef","container","current","resizeObserver","ResizeObserver","entries","entry","parentWidthInPx","target","parentElement","offsetWidth","vw","window","innerWidth","observe","disconnect","Define_Today","Today_Y","Date","getFullYear","Today_M","getMonth","Today_D","getDate","Today_T","toLocaleString","timeZone","Year","Month","Today_Data","Status_Definer","origin","ORIGIN","Number","TARGET","Gap","status","CompareYMD","section","CompareProcess","Yeardata","Monthdata","date","Timeline_Data","split","Target_Data","Time","then","result","console","log","ref","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Personalized_Data_Page/Personailized_Data_ReflectZone/DateCalculator.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\r\n\r\nexport const DateCalculator = (props) => {\r\n    const [Datedata, updatedata] = useState('')\r\n    const [parentWidth, setParentWidth] = useState(0)\r\n    const containerRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const container = containerRef.current\r\n        if (!container) return\r\n\r\n        const resizeObserver = new ResizeObserver(entries => {\r\n            for (let entry of entries) {\r\n                // 부모 요소의 너비를 vw 단위로 변환\r\n                const parentWidthInPx = entry.target.parentElement.offsetWidth\r\n                const vw = (parentWidthInPx / window.innerWidth) * 100\r\n                setParentWidth(vw)\r\n            }\r\n        })\r\n\r\n        resizeObserver.observe(container)\r\n\r\n        return () => {\r\n            resizeObserver.disconnect()\r\n        }\r\n    }, [])\r\n\r\n    const Define_Today = () =>{\r\n\r\n        const Today_Y = new Date().getFullYear()\r\n        const Today_M = new Date().getMonth()+1\r\n        const Today_D = new Date().getDate()\r\n        const Today_T = new Date().toLocaleString('ko-KR',{\r\n            timeZone: 'Asia/Seoul'\r\n        })\r\n        \r\n        return {\r\n            Year : Today_Y,\r\n            Month : Today_M,\r\n            Date : Today_D\r\n        }\r\n    }\r\n\r\n    let Today_Data = Define_Today();\r\n\r\n    const Status_Definer = (origin, target) => {\r\n    \r\n        const ORIGIN = Number(origin)\r\n        const TARGET = Number(target)\r\n\r\n        if(ORIGIN < TARGET){\r\n           return{\r\n                Gap: Number(TARGET-ORIGIN),\r\n                status: '+'\r\n                }\r\n        }\r\n        if(ORIGIN > TARGET){\r\n            return{\r\n                Gap: Number(ORIGIN-TARGET),\r\n                status: '-'\r\n                }\r\n        }\r\n        if(ORIGIN === TARGET){\r\n            return{\r\n                Gap: 0,\r\n                status: '='\r\n                }\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    \r\n    \r\n    }\r\n    \r\n    const CompareYMD = async (section, target) =>{\r\n    \r\n        switch(section){\r\n            case('Year'):\r\n            return Status_Definer(Today_Data.Year, target);\r\n    \r\n            case('Month'):\r\n            return Status_Definer(Today_Data.Month, target);\r\n    \r\n            case('Date'):\r\n            return Status_Definer(Today_Data.Date, target);\r\n    \r\n            default:\r\n            return;\r\n        }\r\n    }\r\n    \r\n    const CompareProcess = async (target) =>{\r\n\r\n        const Yeardata = await CompareYMD('Year', Number(target.Year))\r\n        const Monthdata = await CompareYMD('Month', Number(target.Month))\r\n        const Datedata = await CompareYMD('Date', Number(target.Date))\r\n        \r\n        return {\r\n            Year: Yeardata,\r\n            Month: Monthdata,\r\n            Date: Datedata\r\n        }\r\n    }\r\n\r\n\r\n    if(typeof props.date !== 'undefined'){\r\n        const Timeline_Data = props.date.split(/T|Z/)\r\n\r\n        const Target_Data = {\r\n            Year: Number(Timeline_Data[0].split('-')[0]),\r\n            Month: Number(Timeline_Data[0].split('-')[1]),\r\n            Date: Number(Timeline_Data[0].split('-')[2]),\r\n            Time: Timeline_Data[1]\r\n        }\r\n\r\n        CompareProcess(Target_Data).then((result)=>{\r\n            \r\n            if(result.Year.Gap !== 0){\r\n                switch(result.Year.status){\r\n                    case('+'):\r\n                    updatedata(`${result.Year.Gap} years ahead`)\r\n                    return;\r\n\r\n                    case('-'):\r\n                    updatedata(`${result.Year.Gap} years ago`)\r\n                    return;\r\n\r\n                    default:\r\n                    return;\r\n                }\r\n            }\r\n            else{\r\n                if(result.Month.Gap !== 0){\r\n                    switch(result.Month.status){\r\n                        case('+'):\r\n                        updatedata(`${result.Month.Gap} months ahead`)\r\n                        return;\r\n    \r\n                        case('-'):\r\n                        updatedata(`${result.Month.Gap} months ago`);\r\n                        return;\r\n    \r\n                        default:\r\n                        return;\r\n                    }\r\n                }\r\n                else{\r\n                    if(result.Date.Gap !== 0){\r\n                        switch(result.Date.status){\r\n                            case('+'):\r\n                            updatedata(`${result.Date.Gap} days ahead`);\r\n                            return;\r\n        \r\n                            case('-'):\r\n                            updatedata(`${result.Date.Gap} days ago`);\r\n                            return;\r\n        \r\n                            default:\r\n                            return;\r\n                        }\r\n                    }\r\n                    else{\r\n                        updatedata(`Today`)\r\n                    }\r\n                }\r\n            \r\n            }\r\n\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    else{\r\n        console.log(props)\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <div \r\n            ref={containerRef}\r\n            style={{\r\n                fontSize: `calc(${parentWidth}vw * 0.09)`,\r\n            }}\r\n        >\r\n            {Datedata}\r\n            <br></br>\r\n            \r\n            - {Today_Data.Year}. {Today_Data.Month}. {Today_Data.Date} -\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}