{"ast":null,"code":"import React from \"react\";\nconst Define_Today = () => {\n  const Today_Y = new Date().getFullYear();\n  const Today_M = new Date().getMonth();\n  const Today_D = new Date().getDate();\n  return {\n    Year: Today_Y,\n    Month: Today_M,\n    Date: Today_D\n  };\n};\n_c = Define_Today;\nconst Status_Definer = (origin, target) => {\n  if (origin < target) {\n    return {\n      Gap: target - origin,\n      status: '+',\n      message: 'Target_data is ahead then Origin_data'\n    };\n  }\n  if (origin > target) {\n    return {\n      Gap: origin - target,\n      status: '-',\n      message: 'Target_data is older_data then Origin_data'\n    };\n  }\n  if (origin === target) {\n    return {\n      Gap: 0,\n      status: '=',\n      message: 'Target_data is same as Origin_data'\n    };\n  } else {\n    return;\n  }\n};\n_c2 = Status_Definer;\nconst CompareYMD = (section, target) => {\n  const Today_Data = Define_Today();\n  switch (section) {\n    case 'Year':\n      return Status_Definer(Today_Data.Year, target);\n    case 'Month':\n      return Status_Definer(Today_Data.Month, target);\n    case 'Date':\n      return Status_Definer(Today_Data.Date, target);\n    default:\n      return;\n  }\n};\n_c3 = CompareYMD;\nexport const DateCalculator = props => {\n  if (typeof props.date != 'undefined') {\n    const Timeline_Data = props.date.split(/T|Z/);\n    let Year = Timeline_Data[0].split('-')[0];\n    let Month = Timeline_Data[0].split('-')[1];\n    let Date = Timeline_Data[0].split('-')[2];\n    let Time = Timeline_Data[1];\n    console.log(Year);\n    if (CompareYMD('Year', Year).status === '=') {}\n    let result;\n  } else {\n    console.log(props);\n    return;\n  }\n};\n_c4 = DateCalculator;\nexport default DateCalculator;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Define_Today\");\n$RefreshReg$(_c2, \"Status_Definer\");\n$RefreshReg$(_c3, \"CompareYMD\");\n$RefreshReg$(_c4, \"DateCalculator\");","map":{"version":3,"names":["React","Define_Today","Today_Y","Date","getFullYear","Today_M","getMonth","Today_D","getDate","Year","Month","_c","Status_Definer","origin","target","Gap","status","message","_c2","CompareYMD","section","Today_Data","_c3","DateCalculator","props","date","Timeline_Data","split","Time","console","log","result","_c4","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Personalized_Data_Page/Personailized_Data_ReflectZone/DateCalculator.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Define_Today = () =>{\r\n\r\n    const Today_Y = new Date().getFullYear()\r\n    const Today_M = new Date().getMonth()\r\n    const Today_D = new Date().getDate()\r\n\r\n    return {\r\n        Year : Today_Y,\r\n        Month : Today_M,\r\n        Date : Today_D\r\n    }\r\n}\r\n\r\nconst Status_Definer = (origin, target) => {\r\n\r\n    if(origin < target){\r\n       return {\r\n            Gap: target-origin,\r\n            status: '+',\r\n            message: 'Target_data is ahead then Origin_data'\r\n       }\r\n    }\r\n    if(origin > target){\r\n        return {\r\n            Gap: origin-target,\r\n            status: '-',\r\n            message: 'Target_data is older_data then Origin_data'\r\n        }\r\n    }\r\n    if(origin === target){\r\n        return {\r\n            Gap: 0,\r\n            status: '=',\r\n            message: 'Target_data is same as Origin_data'}\r\n    }\r\n    else{\r\n        return;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst CompareYMD = (section, target) =>{\r\n\r\n    const Today_Data = Define_Today();\r\n\r\n\r\n    switch(section){\r\n        case('Year'):\r\n        return Status_Definer(Today_Data.Year, target)\r\n\r\n        case('Month'):\r\n        return Status_Definer(Today_Data.Month, target)\r\n\r\n        case('Date'):\r\n        return Status_Definer(Today_Data.Date, target)\r\n\r\n        default:\r\n        return;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const DateCalculator = (props) => {\r\n\r\n\r\n    if(typeof props.date != 'undefined'){\r\n        const Timeline_Data = props.date.split(/T|Z/)\r\n        let Year = Timeline_Data[0].split('-')[0]\r\n        let Month = Timeline_Data[0].split('-')[1]\r\n        let Date = Timeline_Data[0].split('-')[2]\r\n        let Time = Timeline_Data[1]\r\n\r\n        console.log(Year)\r\n\r\n        if( CompareYMD('Year',Year).status === '=' ){\r\n\r\n\r\n\r\n        }\r\n        \r\n        let result;\r\n\r\n        \r\n\r\n    }\r\n\r\n    else{\r\n        console.log(props)\r\n        return;\r\n    }\r\n\r\n}\r\n\r\nexport default DateCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}