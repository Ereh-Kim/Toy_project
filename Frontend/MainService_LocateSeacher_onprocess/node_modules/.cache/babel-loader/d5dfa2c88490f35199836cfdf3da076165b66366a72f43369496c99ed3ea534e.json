{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ereh0\\\\OneDrive\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\food_script_2.0.0\\\\Develop\\\\Frontend\\\\MainService_LocateSeacher_onprocess\\\\src\\\\0_component\\\\Personalized_data_TabNevBar\\\\Personalized_data_Part.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport ToggleButton_img from '../../1_image_or_icon/Door_icon.jpg';\nimport Personalized_data_progresser from \"./TabNevBar_Opened/Personalized_data_progresser\";\nimport Personalized_data_ProfileSection from \"./TabNevBar_Opened/Personalized_data_ProfileSection\";\nimport OnOff_Toggler from \"./TabNevBar_Toggler/TabNevBar_OnOff_Toggler.js\";\nimport Personalized_data_progresser_Closed from \"./TabNevBar_Closed/Personalized_data_progresser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Personalized_data_Part = () => {\n  _s();\n  const [toggle, updateToggle] = useState('opened');\n  const Switch = status => {\n    switch (status) {\n      case 'opened':\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Personalized_data_Container\",\n            children: [/*#__PURE__*/_jsxDEV(OnOff_Toggler, {\n              onClick: () => {\n                updateToggle('closed');\n              },\n              src: ToggleButton_img,\n              id: \"ToggleButton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Personalized_data_ProfileSection, {\n              id: UserData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Personalized_data_progresser, {\n              id: UserData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 42\n        }, this);\n      case 'closed':\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Personalized_data_Container\",\n            children: [/*#__PURE__*/_jsxDEV(OnOff_Toggler, {\n              onClick: () => {\n                updateToggle('opened');\n              },\n              src: ToggleButton_img,\n              id: \"ToggleButton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Personalized_data_progresser_Closed, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 42\n        }, this);\n    }\n  };\n  const [UserData, updateUserdata] = useState();\n  //     const Status = new URLSearchParams(document.location.search).get('TabNevBar')\n  const StatusDependency = useLocation().search;\n  useEffect(() => {\n    axios.get('https://dummyjson.com/users').then(result => {\n      const CertifiedUsers = result.data.users[0];\n      updateUserdata(CertifiedUsers);\n\n      // 해당 부분은 개인정보 인증 이후에 서버단에서 정제한 후의 데이터를 전송하는 것으로 기획\n      // 차우선적으로 프론트단에서 정제하여 다룰 수 있게끔만 한 것임\n    });\n  }, [StatusDependency]);\n\n  //     switch(Status){\n\n  //         case (null): return <React.Fragment>\n  //                 <div id=\"Personalized_data_Container\">\n  //                 <OnOff_Toggler src={ToggleButton_img} id=\"ToggleButton\"/>\n  //                 <Personalized_data_progresser_Closed/>\n  //                 </div>\n  //                 </React.Fragment>\n\n  //         case ('opened') : return <React.Fragment>\n  //                 <div id=\"Personalized_data_Container\">\n  //                 <OnOff_Toggler src={ToggleButton_img} id=\"ToggleButton\"/>\n  //                 <Personalized_data_ProfileSection id={UserData}/>\n  //                 <Personalized_data_progresser id={UserData}/>\n  //                 </div>\n  //                 </React.Fragment>\n\n  //         case ('closed') : return <React.Fragment>\n  //                 <div id=\"Personalized_data_Container\">\n  //                 <OnOff_Toggler src={ToggleButton_img} id=\"ToggleButton\"/>\n  //                 <Personalized_data_progresser_Closed/>\n  //                 </div>\n  //                 </React.Fragment>\n\n  //         }\n\n  return Switch(toggle);\n};\n_s(Personalized_data_Part, \"ixdCBIn9JcoqrV/bUbFFfeUclK4=\", false, function () {\n  return [useLocation];\n});\n_c = Personalized_data_Part;\nexport default Personalized_data_Part;\nvar _c;\n$RefreshReg$(_c, \"Personalized_data_Part\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","ToggleButton_img","Personalized_data_progresser","Personalized_data_ProfileSection","OnOff_Toggler","Personalized_data_progresser_Closed","jsxDEV","_jsxDEV","Personalized_data_Part","_s","toggle","updateToggle","Switch","status","Fragment","children","id","onClick","src","fileName","_jsxFileName","lineNumber","columnNumber","UserData","updateUserdata","StatusDependency","search","get","then","result","CertifiedUsers","data","users","_c","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Personalized_data_TabNevBar/Personalized_data_Part.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport ToggleButton_img from '../../1_image_or_icon/Door_icon.jpg'\r\n\r\n\r\nimport Personalized_data_progresser from \"./TabNevBar_Opened/Personalized_data_progresser\"\r\nimport Personalized_data_ProfileSection from \"./TabNevBar_Opened/Personalized_data_ProfileSection\"\r\nimport OnOff_Toggler from \"./TabNevBar_Toggler/TabNevBar_OnOff_Toggler.js\";\r\n\r\nimport Personalized_data_progresser_Closed from \"./TabNevBar_Closed/Personalized_data_progresser\";\r\n\r\nconst Personalized_data_Part = () => {\r\n\r\n        const [toggle, updateToggle] = useState('opened')\r\n\r\n        const Switch = (status) => {\r\n    \r\n            switch(status){\r\n    \r\n                case ('opened') : return <React.Fragment>\r\n                <div id=\"Personalized_data_Container\">\r\n                <OnOff_Toggler onClick={()=>{\r\n                        updateToggle('closed')\r\n                }} src={ToggleButton_img} id=\"ToggleButton\"/>\r\n                <Personalized_data_ProfileSection id={UserData}/>\r\n                <Personalized_data_progresser id={UserData}/>\r\n                </div>\r\n                </React.Fragment>\r\n    \r\n                case ('closed') : return <React.Fragment>\r\n                <div id=\"Personalized_data_Container\">\r\n                <OnOff_Toggler onClick={()=>{\r\n                        updateToggle('opened')\r\n                }} src={ToggleButton_img} id=\"ToggleButton\"/>\r\n                <Personalized_data_progresser_Closed/>\r\n                </div>\r\n                </React.Fragment>\r\n    \r\n            }}\r\n\r\n    const [ UserData, updateUserdata ] = useState();\r\n//     const Status = new URLSearchParams(document.location.search).get('TabNevBar')\r\n    const StatusDependency = useLocation().search\r\n\r\n    useEffect(()=>{\r\n        axios.get('https://dummyjson.com/users').then(\r\n            \r\n            (result)=>{ \r\n                const CertifiedUsers = result.data.users[0]\r\n                updateUserdata(CertifiedUsers)\r\n\r\n                // 해당 부분은 개인정보 인증 이후에 서버단에서 정제한 후의 데이터를 전송하는 것으로 기획\r\n                // 차우선적으로 프론트단에서 정제하여 다룰 수 있게끔만 한 것임\r\n             }\r\n        )\r\n    },[StatusDependency])\r\n\r\n//     switch(Status){\r\n\r\n//         case (null): return <React.Fragment>\r\n//                 <div id=\"Personalized_data_Container\">\r\n//                 <OnOff_Toggler src={ToggleButton_img} id=\"ToggleButton\"/>\r\n//                 <Personalized_data_progresser_Closed/>\r\n//                 </div>\r\n//                 </React.Fragment>\r\n\r\n//         case ('opened') : return <React.Fragment>\r\n//                 <div id=\"Personalized_data_Container\">\r\n//                 <OnOff_Toggler src={ToggleButton_img} id=\"ToggleButton\"/>\r\n//                 <Personalized_data_ProfileSection id={UserData}/>\r\n//                 <Personalized_data_progresser id={UserData}/>\r\n//                 </div>\r\n//                 </React.Fragment>\r\n\r\n//         case ('closed') : return <React.Fragment>\r\n//                 <div id=\"Personalized_data_Container\">\r\n//                 <OnOff_Toggler src={ToggleButton_img} id=\"ToggleButton\"/>\r\n//                 <Personalized_data_progresser_Closed/>\r\n//                 </div>\r\n//                 </React.Fragment>\r\n\r\n//         }\r\n\r\n        return Switch(toggle)\r\n}\r\n\r\nexport default Personalized_data_Part;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}