{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ereh0\\\\OneDrive\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\food_script_2.0.0\\\\Develop\\\\Frontend\\\\MainService_LocateSeacher_onprocess\\\\src\\\\0_component\\\\Google_Api_Integation\\\\Google_Map_Api\\\\Google_Map_Api_Components\\\\Google_Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Map, Marker, useMapsLibrary, useMap } from '@vis.gl/react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Google_Map = () => {\n  _s();\n  const Keyword = useSelector(state => state.urlToString);\n  const INITIAL_CAMERA = {\n    zoom: 15,\n    center: {\n      lat: 0,\n      lng: 0\n    }\n  };\n  const INITIAL_MARKER = {\n    position: {\n      lat: 0,\n      lng: 0\n    }\n  };\n  const [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\n  const [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\n  const [List_Around_spot, updateSpots] = useState([]);\n  let Map_Instance = useMap('Google_Map');\n  let Place_Library = useMapsLibrary('places');\n  const UpdateMap = (latitude, longitude) => {\n    setMarkerProps({\n      position: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n    setCameraProps({\n      zoom: 15,\n      center: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n  };\n  const Location_Loaded_Success_CallBack = position => {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    UpdateMap(latitude, longitude);\n  };\n  const Current_Location_Loading = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(Location_Loaded_Success_CallBack);\n    }\n  };\n  const Load_Existed_Keyword = () => {\n    if (!Place_Library || !Map_Instance) return;\n    const svc = new Place_Library.PlacesService(Map_Instance);\n    svc.findPlaceFromQuery({\n      query: `${Keyword}`,\n      fields: ['geometry.location']\n    }, result => {\n      const Existed_Keyword = result[0].geometry.location;\n      UpdateMap(Existed_Keyword.lat(), Existed_Keyword.lng());\n      svc.nearbySearch({\n        location: {\n          lat: Existed_Keyword.lat(),\n          lng: Existed_Keyword.lng()\n        },\n        radius: 300,\n        type: 'restaurant'\n      }, result => {\n        updateSpots(result);\n        console.log(result);\n      });\n    });\n  };\n  useEffect(() => {\n    switch (Keyword) {\n      case '':\n        Current_Location_Loading();\n        return;\n      default:\n        Load_Existed_Keyword();\n        return;\n    }\n  }, [Place_Library, Map_Instance]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      id: \"Google_Map\",\n      style: {\n        width: 'inherit',\n        height: '20vh',\n        backgroundColor: 'white',\n        margin: '3vh 6vw 0 10vw',\n        border: 'black solid 5px'\n      },\n      ...cameraProps,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        ...markerProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 8\n  }, this);\n};\n_s(Google_Map, \"XlqQUBd38DaRqdDsGAHL9GRJrfI=\", false, function () {\n  return [useSelector, useMap, useMapsLibrary];\n});\n_c = Google_Map;\nexport default Google_Map;\nvar _c;\n$RefreshReg$(_c, \"Google_Map\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Map","Marker","useMapsLibrary","useMap","jsxDEV","_jsxDEV","Google_Map","_s","Keyword","state","urlToString","INITIAL_CAMERA","zoom","center","lat","lng","INITIAL_MARKER","position","cameraProps","setCameraProps","markerProps","setMarkerProps","List_Around_spot","updateSpots","Map_Instance","Place_Library","UpdateMap","latitude","longitude","Location_Loaded_Success_CallBack","coords","Current_Location_Loading","navigator","geolocation","getCurrentPosition","Load_Existed_Keyword","svc","PlacesService","findPlaceFromQuery","query","fields","result","Existed_Keyword","geometry","location","nearbySearch","radius","type","console","log","Fragment","children","id","style","width","height","backgroundColor","margin","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Google_Api_Integation/Google_Map_Api/Google_Map_Api_Components/Google_Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport { Map, Marker, useMapsLibrary, useMap} from '@vis.gl/react-google-maps'\r\n\r\nexport const Google_Map = () => {\r\n\r\nconst Keyword = useSelector(state => state.urlToString)\r\n\r\nconst INITIAL_CAMERA = {\r\n        zoom : 15,\r\n        center : {lat: 0, lng: 0}\r\n    }\r\n\r\nconst INITIAL_MARKER = {\r\n        position : {lat: 0, lng: 0}\r\n    }\r\n\r\nconst [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\r\nconst [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\r\nconst [List_Around_spot, updateSpots] = useState([]);\r\n\r\nlet Map_Instance = useMap('Google_Map');\r\nlet Place_Library = useMapsLibrary('places');\r\n\r\n    const UpdateMap = (latitude, longitude) => {\r\n\r\n        setMarkerProps({\r\n            position: {lat: latitude, lng: longitude}\r\n        })\r\n\r\n        setCameraProps({\r\n            zoom: 15, \r\n            center: {lat: latitude, lng: longitude}\r\n        })\r\n\r\n    }\r\n\r\n    const Location_Loaded_Success_CallBack = (position) => {\r\n        let latitude = position.coords.latitude;\r\n        let longitude = position.coords.longitude;\r\n\r\n        UpdateMap(latitude,longitude)\r\n    }\r\n\r\n    const Current_Location_Loading = async () => {\r\n            if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                \r\n            Location_Loaded_Success_CallBack\r\n    \r\n            )}\r\n    }\r\n\r\n    const Load_Existed_Keyword = () => {\r\n        \r\n        if (!Place_Library || !Map_Instance) return;\r\n        const svc = new Place_Library.PlacesService(Map_Instance);      \r\n\r\n        svc.findPlaceFromQuery({ \r\n            query: `${Keyword}` ,fields :['geometry.location']\r\n        },  (result)=>{ \r\n            \r\n            const Existed_Keyword = result[0].geometry.location\r\n            UpdateMap( Existed_Keyword.lat(), Existed_Keyword.lng() )\r\n\r\n            \r\n            svc.nearbySearch({\r\n                location: {lat: Existed_Keyword.lat(), lng: Existed_Keyword.lng()},\r\n                radius: 300,\r\n                type: 'restaurant'\r\n            },(result)=>{\r\n                updateSpots(result)\r\n                console.log(result)\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        switch(Keyword){\r\n\r\n            case(''):\r\n            Current_Location_Loading()\r\n            return;\r\n\r\n            default:\r\n            Load_Existed_Keyword()\r\n            return;\r\n        }\r\n        \r\n    },[Place_Library, Map_Instance])\r\n\r\nreturn <React.Fragment>\r\n\r\n\r\n                <Map id='Google_Map'\r\n                \r\n                    style={ \r\n                        { width:'inherit',\r\n                        height:'20vh',\r\n                        backgroundColor:'white',\r\n                        margin: '3vh 6vw 0 10vw',\r\n                        border: 'black solid 5px'\r\n                        }}\r\n                    \r\n                    {...cameraProps}>\r\n                \r\n                    <Marker\r\n                    {...markerProps}/>\r\n\r\n                </Map>\r\n\r\n\r\n\r\n</React.Fragment>\r\n\r\n}\r\n\r\nexport default Google_Map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}