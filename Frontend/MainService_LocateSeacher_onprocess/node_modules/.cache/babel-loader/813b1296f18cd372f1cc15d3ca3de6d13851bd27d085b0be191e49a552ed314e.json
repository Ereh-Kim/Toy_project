{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const DateCalculator = props => {\n  _s();\n  const [Datedata, updatedata] = useState('');\n  const Define_Today = () => {\n    const Today_Y = new Date().getFullYear();\n    const Today_M = new Date().getMonth() + 1;\n    const Today_D = new Date().getDate();\n    const Today_T = new Date().toLocaleString('ko-KR', {\n      timeZone: 'Asia/Seoul'\n    });\n    return {\n      Year: Today_Y,\n      Month: Today_M,\n      Date: Today_D,\n      Time: Today_T\n    };\n  };\n  const Status_Definer = (origin, target) => {\n    const ORIGIN = Number(origin);\n    const TARGET = Number(target);\n    console.log(ORIGIN);\n    if (ORIGIN < TARGET) {\n      return {\n        Gap: Number(TARGET - ORIGIN),\n        status: '+',\n        message: 'Target_data is ahead then Origin_data'\n      };\n    }\n    if (ORIGIN > TARGET) {\n      return {\n        Gap: Number(ORIGIN - TARGET),\n        status: '-',\n        message: 'Target_data is older_data then Origin_data'\n      };\n    }\n    if (ORIGIN === TARGET) {\n      return {\n        Gap: 0,\n        status: '=',\n        message: 'Target_data is same as Origin_data'\n      };\n    } else {\n      return;\n    }\n  };\n  const CompareYMD = async (section, target) => {\n    const Today_Data = Define_Today();\n    switch (section) {\n      case 'Year':\n        return Status_Definer(Today_Data.Year, target);\n      case 'Month':\n        return Status_Definer(Today_Data.Month, target);\n      case 'Date':\n        return Status_Definer(Today_Data.Date, target);\n      default:\n        return;\n    }\n  };\n  const CompareProcess = async target => {\n    const Yeardata = await CompareYMD('Year', Number(target.Year));\n    const Monthdata = await CompareYMD('Month', Number(target.Month));\n    const Datedata = await CompareYMD('Date', Number(target.Date));\n    const Timedata = await CompareYMD('Time', Number(target.Time));\n    return {\n      Year: Yeardata,\n      Month: Monthdata,\n      Date: Datedata,\n      Time: Timedata\n    };\n  };\n  if (typeof props.date != 'undefined') {\n    const Timeline_Data = props.date.split(/T|Z/);\n    const Target_Data = {\n      Year: Number(Timeline_Data[0].split('-')[0]),\n      Month: Number(Timeline_Data[0].split('-')[1]),\n      Date: Number(Timeline_Data[0].split('-')[2]),\n      Time: Timeline_Data[1]\n    };\n    CompareProcess(Target_Data).then(result => {\n      if (result.Year.Gap != 0) {\n        switch (result.Year.status) {\n          case '+':\n            updatedata(`${result.Year.Gap} years ahead`);\n            return;\n          case '-':\n            updatedata(`${result.Year.Gap} years ago`);\n            return;\n          default:\n            return;\n        }\n      } else {\n        if (result.Month.Gap != 0) {\n          switch (result.Month.status) {\n            case '+':\n              updatedata(`${result.Month.Gap} months ahead`);\n              return;\n            case '-':\n              updatedata(`${result.Month.Gap} months ago`);\n              return;\n            default:\n              return;\n          }\n        } else {\n          if (result.Date.Gap != 0) {\n            switch (result.Date.status) {\n              case '+':\n                updatedata(`${result.Date.Gap} days ahead`);\n                return;\n              case '-':\n                updatedata(`${result.Date.Gap} days ago`);\n                return;\n              default:\n                return;\n            }\n          } else {\n            updatedata('time_same');\n          }\n        }\n      }\n    });\n  } else {\n    console.log(props);\n    return;\n  }\n  return Datedata;\n};\n_s(DateCalculator, \"EggRyGGtSJg+RjmVCJ271rQkADE=\");\n_c = DateCalculator;\nexport default DateCalculator;\nvar _c;\n$RefreshReg$(_c, \"DateCalculator\");","map":{"version":3,"names":["useState","DateCalculator","props","_s","Datedata","updatedata","Define_Today","Today_Y","Date","getFullYear","Today_M","getMonth","Today_D","getDate","Today_T","toLocaleString","timeZone","Year","Month","Time","Status_Definer","origin","target","ORIGIN","Number","TARGET","console","log","Gap","status","message","CompareYMD","section","Today_Data","CompareProcess","Yeardata","Monthdata","Timedata","date","Timeline_Data","split","Target_Data","then","result","_c","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Personalized_Data_Page/Personailized_Data_ReflectZone/DateCalculator.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nexport const DateCalculator = (props) => {\r\n\r\n    const [Datedata , updatedata] = useState('')\r\n\r\n    const Define_Today = () =>{\r\n\r\n        const Today_Y = new Date().getFullYear()\r\n        const Today_M = new Date().getMonth()+1\r\n        const Today_D = new Date().getDate()\r\n        const Today_T = new Date().toLocaleString('ko-KR',{\r\n            timeZone: 'Asia/Seoul'\r\n        })\r\n\r\n        return {\r\n            Year : Today_Y,\r\n            Month : Today_M,\r\n            Date : Today_D,\r\n            Time : Today_T\r\n        }\r\n    }\r\n    \r\n    const Status_Definer = (origin, target) => {\r\n    \r\n        const ORIGIN = Number(origin)\r\n        const TARGET = Number(target)\r\n\r\n        console.log(ORIGIN)\r\n\r\n        if(ORIGIN < TARGET){\r\n           return{\r\n                Gap: Number(TARGET-ORIGIN),\r\n                status: '+',\r\n                message: 'Target_data is ahead then Origin_data'\r\n           }\r\n        }\r\n        if(ORIGIN > TARGET){\r\n            return{\r\n                Gap: Number(ORIGIN-TARGET),\r\n                status: '-',\r\n                message: 'Target_data is older_data then Origin_data'\r\n            }\r\n        }\r\n        if(ORIGIN === TARGET){\r\n            return{\r\n                Gap: 0,\r\n                status: '=',\r\n                message: 'Target_data is same as Origin_data'}\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    \r\n    \r\n    }\r\n    \r\n    const CompareYMD = async (section, target) =>{\r\n    \r\n        const Today_Data = Define_Today();\r\n    \r\n        switch(section){\r\n            case('Year'):\r\n            return Status_Definer(Today_Data.Year, target);\r\n    \r\n            case('Month'):\r\n            return Status_Definer(Today_Data.Month, target);\r\n    \r\n            case('Date'):\r\n            return Status_Definer(Today_Data.Date, target);\r\n    \r\n            default:\r\n            return;\r\n        }\r\n    }\r\n    \r\n    const CompareProcess = async (target) =>{\r\n\r\n        const Yeardata = await CompareYMD('Year', Number(target.Year))\r\n        const Monthdata = await CompareYMD('Month', Number(target.Month))\r\n        const Datedata = await CompareYMD('Date', Number(target.Date))\r\n        const Timedata = await CompareYMD('Time', Number(target.Time))\r\n\r\n        return {\r\n            Year: Yeardata,\r\n            Month: Monthdata,\r\n            Date: Datedata,\r\n            Time: Timedata\r\n        }\r\n    }\r\n\r\n\r\n    if(typeof props.date != 'undefined'){\r\n        const Timeline_Data = props.date.split(/T|Z/)\r\n\r\n        const Target_Data = {\r\n            Year: Number(Timeline_Data[0].split('-')[0]),\r\n            Month: Number(Timeline_Data[0].split('-')[1]),\r\n            Date: Number(Timeline_Data[0].split('-')[2]),\r\n            Time: Timeline_Data[1]\r\n        }\r\n\r\n        CompareProcess(Target_Data).then((result)=>{\r\n            \r\n            if(result.Year.Gap != 0){\r\n                switch(result.Year.status){\r\n                    case('+'):\r\n                    updatedata(`${result.Year.Gap} years ahead`)\r\n                    return;\r\n\r\n                    case('-'):\r\n                    updatedata(`${result.Year.Gap} years ago`)\r\n                    return;\r\n\r\n                    default:\r\n                    return;\r\n                }\r\n            }\r\n            else{\r\n                if(result.Month.Gap != 0){\r\n                    switch(result.Month.status){\r\n                        case('+'):\r\n                        updatedata(`${result.Month.Gap} months ahead`)\r\n                        return;\r\n    \r\n                        case('-'):\r\n                        updatedata(`${result.Month.Gap} months ago`);\r\n                        return;\r\n    \r\n                        default:\r\n                        return;\r\n                    }\r\n                }\r\n                else{\r\n                    if(result.Date.Gap != 0){\r\n                        switch(result.Date.status){\r\n                            case('+'):\r\n                            updatedata(`${result.Date.Gap} days ahead`);\r\n                            return;\r\n        \r\n                            case('-'):\r\n                            updatedata(`${result.Date.Gap} days ago`);\r\n                            return;\r\n        \r\n                            default:\r\n                            return;\r\n                        }\r\n                    }\r\n                    else{\r\n                        updatedata('time_same')\r\n                    }\r\n                }\r\n            \r\n            }\r\n\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    else{\r\n        console.log(props)\r\n        return;\r\n    }\r\n\r\n    return Datedata;\r\n\r\n}\r\n\r\nexport default DateCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}