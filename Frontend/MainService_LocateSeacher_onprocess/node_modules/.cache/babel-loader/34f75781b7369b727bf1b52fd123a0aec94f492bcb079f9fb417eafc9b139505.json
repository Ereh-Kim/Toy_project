{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ereh0\\\\OneDrive\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\food_script_2.0.0\\\\Develop\\\\Frontend\\\\MainService_LocateSeacher_onprocess\\\\src\\\\0_component\\\\Google_Api_Integation\\\\Google_Map_Api\\\\Google_Map_Api_Components\\\\Google_Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ActionCreater } from \"../../../../2_reducer/reducer\";\nimport { Map, Pin, AdvancedMarker, useMapsLibrary, useMap } from '@vis.gl/react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Google_Map = () => {\n  _s();\n  const Keyword = useSelector(state => state.urlToString);\n  const GoogleMap_Deafult_Option = useSelector(state => state.urlObject);\n  const dispatch = useDispatch();\n  let Map_Instance = useMap('Google_Map');\n  let Place_Library = useMapsLibrary('places');\n  const INITIAL_CAMERA = {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 0,\n      lng: 0\n    }\n  };\n  const INITIAL_MARKER = {\n    position: {\n      lat: 0,\n      lng: 0\n    }\n  };\n  const [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\n  const [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\n  const [Google_Map_Search_Option, updateOption] = useState({\n    type: ['restaurant'],\n    distance: 500\n  });\n  const [List_Around_spot, updateSpots] = useState([]);\n  const UpdateMap = (latitude, longitude) => {\n    setMarkerProps({\n      position: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n    setCameraProps({\n      defaultZoom: 15,\n      center: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n  };\n  const Location_Loaded_Success_CallBack = position => {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    UpdateMap(latitude, longitude);\n  };\n  const Current_Location_Loading = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(Location_Loaded_Success_CallBack);\n    }\n  };\n  const Load_Existed_Keyword = () => {\n    if (!Place_Library || !Map_Instance) return;\n    const svc = new Place_Library.PlacesService(Map_Instance);\n    svc.findPlaceFromQuery({\n      query: `${Keyword}`,\n      fields: ['geometry.location']\n    }, result => {\n      const Existed_Keyword = result[0].geometry.location;\n      UpdateMap(Existed_Keyword.lat(), Existed_Keyword.lng());\n      svc.nearbySearch({\n        location: {\n          lat: Existed_Keyword.lat(),\n          lng: Existed_Keyword.lng()\n        },\n        radius: Google_Map_Search_Option.distance,\n        type: Google_Map_Search_Option.type[0],\n        rankBy: 0\n      }, result => {\n        updateSpots(result);\n        console.log(result);\n      });\n    });\n  };\n  useEffect(() => {\n    // switch(Keyword){\n\n    //     case(''):\n    //     Current_Location_Loading()\n\n    //     default:\n    //     Load_Existed_Keyword()\n\n    // }\n\n    switch (typeof GoogleMap_Deafult_Option.get('type')) {\n      case 'string':\n        dispatch(ActionCreater('UpdateUrl', 'type', GoogleMap_Deafult_Option.get('type')));\n        updateOption({\n          ...Google_Map_Search_Option,\n          type: GoogleMap_Deafult_Option.get('type').replaceAll(',', ' ').split(' ')\n        });\n        break;\n      case 'object':\n        break;\n    }\n    switch (typeof GoogleMap_Deafult_Option.get('distance')) {\n      case 'string':\n        dispatch(ActionCreater('UpdateUrl', 'distance', GoogleMap_Deafult_Option.get('distance')));\n        updateOption({\n          ...Google_Map_Search_Option,\n          distance: GoogleMap_Deafult_Option.get('distance')\n        });\n        break;\n      case 'object':\n        break;\n    }\n  }, [Place_Library, Map_Instance]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      id: \"Google_Map\",\n      mapId: \"a6ea1c40e5d4c5a\",\n      style: {\n        width: 'inherit',\n        height: '20vh',\n        backgroundColor: 'white',\n        margin: '3vh 6vw 0 10vw',\n        border: 'black solid 5px'\n      },\n      ...cameraProps,\n      onDragstart: () => {\n        const New_Default = {};\n        setCameraProps({\n          defaultZoom: 15,\n          defaultCenter: {\n            ...New_Default\n          }\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(AdvancedMarker, {\n        ...markerProps,\n        children: /*#__PURE__*/_jsxDEV(Pin, {\n          background: '#FBBC04',\n          glyphColor: '#000',\n          borderColor: '#000'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Google_Map_Option_Selector\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '1.5vh 7vw 0 11vw',\n        height: 'fit-content',\n        justifyContent: `space-around`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '3.75vw',\n          textAlign: 'center',\n          fontFamily: '큐트신민상',\n          lineHeight: '3vh'\n        },\n        children: [\"* Searching *\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            wordSpacing: '1vw'\n          },\n          children: [\"[\\xA0\", Google_Map_Search_Option.type.map(element => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: 'white',\n                  padding: '0.5vh 1vw'\n                },\n                onClick: tab => {\n                  const Eliminate_Target = tab.target.textContent.toLowerCase();\n                  const Index = Google_Map_Search_Option.type.indexOf(`${Eliminate_Target}`);\n                  Google_Map_Search_Option.type.splice(Index, 1);\n                  updateOption({\n                    ...Google_Map_Search_Option\n                  });\n                  dispatch(ActionCreater('UpdateUrl', 'type', Google_Map_Search_Option.type));\n                },\n                children: `${element.toUpperCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), \"\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 36\n            }, this);\n          }), \"\\xA0]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), \"in \", GoogleMap_Deafult_Option.get('distance') || Google_Map_Search_Option.distance, \"m boundery*\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"placeSearch_Distance_RangeSelector\",\n        type: \"range\",\n        list: \"rangechart\",\n        step: \"100\",\n        min: \"100\",\n        max: \"1000\",\n        name: \"distance\",\n        defaultValue: GoogleMap_Deafult_Option.get('distance') || Google_Map_Search_Option.distance,\n        onChange: () => {\n          const Distance_Value = document.getElementById('placeSearch_Distance_RangeSelector').value;\n          updateOption({\n            ...Google_Map_Search_Option,\n            distance: Distance_Value\n          });\n          dispatch(ActionCreater('UpdateUrl', 'distance', Distance_Value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"rangechart\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          disabled: true,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"500\",\n          selected: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"900\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"placeSearch_Type_RangeSelector\",\n        name: \"types\",\n        onChange: () => {\n          const Type_Value = document.getElementById('placeSearch_Type_RangeSelector').value;\n          const Type_Options = [];\n          Google_Map_Search_Option.type.forEach(element => {\n            Type_Options.push(element);\n          });\n          switch (Type_Options.includes(Type_Value)) {\n            case true:\n              return;\n            case false:\n              Type_Options.push(Type_Value);\n              updateOption({\n                ...Google_Map_Search_Option,\n                type: Type_Options\n              });\n              dispatch(ActionCreater('UpdateUrl', 'type', Type_Options));\n              return;\n          }\n        },\n        defaultValue: Google_Map_Search_Option.distance,\n        style: {\n          margin: '1vh 4vw',\n          textAlign: 'center',\n          padding: '0.5vh 0',\n          borderRadius: '15px',\n          fontFamily: '큐트신민상',\n          letterSpacing: '1.5px',\n          border: `black solid 2px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"restaurant\",\n          children: \"Select an Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"restaurant\",\n          children: \"RESTAURANT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cafe\",\n          children: \"CAFE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bar\",\n          children: \"BAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 8\n  }, this);\n};\n_s(Google_Map, \"3akEWZmed2mTBt9T0F8ZTipbHfk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useMap, useMapsLibrary];\n});\n_c = Google_Map;\nexport default Google_Map;\nvar _c;\n$RefreshReg$(_c, \"Google_Map\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","ActionCreater","Map","Pin","AdvancedMarker","useMapsLibrary","useMap","jsxDEV","_jsxDEV","Google_Map","_s","Keyword","state","urlToString","GoogleMap_Deafult_Option","urlObject","dispatch","Map_Instance","Place_Library","INITIAL_CAMERA","defaultZoom","defaultCenter","lat","lng","INITIAL_MARKER","position","cameraProps","setCameraProps","markerProps","setMarkerProps","Google_Map_Search_Option","updateOption","type","distance","List_Around_spot","updateSpots","UpdateMap","latitude","longitude","center","Location_Loaded_Success_CallBack","coords","Current_Location_Loading","navigator","geolocation","getCurrentPosition","Load_Existed_Keyword","svc","PlacesService","findPlaceFromQuery","query","fields","result","Existed_Keyword","geometry","location","nearbySearch","radius","rankBy","console","log","get","replaceAll","split","Fragment","children","id","mapId","style","width","height","backgroundColor","margin","border","onDragstart","New_Default","background","glyphColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","padding","justifyContent","fontSize","textAlign","fontFamily","lineHeight","wordSpacing","map","element","onClick","tab","Eliminate_Target","target","textContent","toLowerCase","Index","indexOf","splice","toUpperCase","list","step","min","max","name","defaultValue","onChange","Distance_Value","document","getElementById","value","disabled","hidden","selected","Type_Value","Type_Options","forEach","push","includes","borderRadius","letterSpacing","_c","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Google_Api_Integation/Google_Map_Api/Google_Map_Api_Components/Google_Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { ActionCreater } from \"../../../../2_reducer/reducer\";\r\n\r\nimport { Map, Pin, AdvancedMarker, useMapsLibrary, useMap} from '@vis.gl/react-google-maps'\r\n\r\nexport const Google_Map = () => {\r\n\r\nconst Keyword = useSelector(state => state.urlToString)\r\nconst GoogleMap_Deafult_Option = useSelector(state => state.urlObject)\r\nconst dispatch = useDispatch()\r\n\r\nlet Map_Instance = useMap('Google_Map');\r\nlet Place_Library = useMapsLibrary('places');\r\n\r\n\r\nconst INITIAL_CAMERA = {\r\n        defaultZoom : 15,\r\n        defaultCenter : {lat: 0, lng: 0}\r\n    }\r\n\r\nconst INITIAL_MARKER = {\r\n        position : {lat: 0, lng: 0}\r\n    }\r\n\r\nconst [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\r\nconst [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\r\n\r\nconst [Google_Map_Search_Option, updateOption ] = useState({\r\n    type: ['restaurant'],\r\n    distance: 500\r\n})\r\nconst [List_Around_spot, updateSpots] = useState([]);\r\n\r\n    const UpdateMap = (latitude, longitude) => {\r\n\r\n        setMarkerProps({\r\n            position: {lat: latitude, lng: longitude}\r\n        })\r\n\r\n        setCameraProps({ \r\n            defaultZoom : 15,\r\n            center: {lat: latitude, lng: longitude}\r\n        })\r\n    }\r\n\r\n    const Location_Loaded_Success_CallBack = (position) => {\r\n        let latitude = position.coords.latitude;\r\n        let longitude = position.coords.longitude;\r\n\r\n        UpdateMap(latitude,longitude)\r\n    }\r\n\r\n    const Current_Location_Loading = async () => {\r\n            if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                \r\n            Location_Loaded_Success_CallBack\r\n    \r\n            )}\r\n    }\r\n\r\n    const Load_Existed_Keyword = () => {\r\n        \r\n        if (!Place_Library || !Map_Instance) return;\r\n        const svc = new Place_Library.PlacesService(Map_Instance);      \r\n\r\n        svc.findPlaceFromQuery({ \r\n            query: `${Keyword}` ,fields :['geometry.location']\r\n        },  (result)=>{ \r\n            \r\n            const Existed_Keyword = result[0].geometry.location\r\n            UpdateMap( Existed_Keyword.lat(), Existed_Keyword.lng() )\r\n\r\n            \r\n            svc.nearbySearch({\r\n                location: {lat: Existed_Keyword.lat(), lng: Existed_Keyword.lng()},\r\n                radius: Google_Map_Search_Option.distance,\r\n                type: Google_Map_Search_Option.type[0],\r\n                rankBy: 0\r\n\r\n            },(result)=>{\r\n                updateSpots(result)\r\n                console.log(result)\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        // switch(Keyword){\r\n\r\n        //     case(''):\r\n        //     Current_Location_Loading()\r\n            \r\n\r\n        //     default:\r\n        //     Load_Existed_Keyword()\r\n            \r\n        // }\r\n\r\n        switch(typeof GoogleMap_Deafult_Option.get('type')){\r\n            \r\n            case('string'):\r\n            dispatch(ActionCreater('UpdateUrl','type',GoogleMap_Deafult_Option.get('type')))\r\n            updateOption({\r\n                ...Google_Map_Search_Option,\r\n                type: GoogleMap_Deafult_Option.get('type').replaceAll(',',' ').split(' ')\r\n                })\r\n            break;\r\n\r\n            case('object'):\r\n            break;\r\n        }\r\n\r\n        switch(typeof GoogleMap_Deafult_Option.get('distance')){\r\n            \r\n            case('string'):\r\n            dispatch(ActionCreater('UpdateUrl','distance',GoogleMap_Deafult_Option.get('distance')))\r\n            updateOption({\r\n                ...Google_Map_Search_Option,\r\n                distance: GoogleMap_Deafult_Option.get('distance')\r\n                })\r\n            break;\r\n\r\n            case('object'):\r\n            break;\r\n        }\r\n\r\n\r\n    },[Place_Library, Map_Instance])\r\n\r\nreturn <React.Fragment>\r\n\r\n\r\n                <Map id='Google_Map'\r\n                     mapId='a6ea1c40e5d4c5a'\r\n                \r\n                    style={ \r\n                        { width:'inherit',\r\n                        height:'20vh',\r\n                        backgroundColor:'white',\r\n                        margin: '3vh 6vw 0 10vw',\r\n                        border: 'black solid 5px'\r\n                        }}\r\n                    \r\n                    {...cameraProps}\r\n                        onDragstart={()=>{\r\n                        const New_Default = {}\r\n                        setCameraProps({defaultZoom:15,defaultCenter:{...New_Default}})\r\n                    }}\r\n\r\n                    >\r\n                \r\n                        <AdvancedMarker\r\n                        {...markerProps}>\r\n                            <Pin background={'#FBBC04'} glyphColor={'#000'} borderColor={'#000'}/>\r\n                        </AdvancedMarker>\r\n\r\n                        {/* <nearbySearch_Added_AdvancedMarkers/> */}\r\n\r\n                </Map>\r\n\r\n                <div id='Google_Map_Option_Selector'\r\n                style={{\r\n                    display:'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '1.5vh 7vw 0 11vw',\r\n                    height: 'fit-content',\r\n                    justifyContent: `space-around`\r\n                }}\r\n                >\r\n\r\n                    <span style={{\r\n                            fontSize: '3.75vw',\r\n                            textAlign: 'center',\r\n                            fontFamily: '큐트신민상',\r\n                            lineHeight: '3vh'\r\n                        }}>* Searching *\r\n                        <br></br>\r\n                        <span\r\n                            style={{\r\n                                wordSpacing: '1vw'\r\n                            }}>\r\n                        [&nbsp;\r\n                            {Google_Map_Search_Option.type.map((element)=>{\r\n                            return <React.Fragment>\r\n                            \r\n                                <span\r\n                                style={{\r\n                                    backgroundColor: 'white',\r\n                                    padding: '0.5vh 1vw'\r\n                                }}\r\n                                onClick={(tab)=>{\r\n                                    const Eliminate_Target = tab.target.textContent.toLowerCase()\r\n                                    const Index = Google_Map_Search_Option.type.indexOf(`${Eliminate_Target}`)\r\n                                    Google_Map_Search_Option.type.splice(Index, 1)\r\n                                    updateOption({...Google_Map_Search_Option})\r\n                                    dispatch(ActionCreater('UpdateUrl','type',Google_Map_Search_Option.type))\r\n                                }}\r\n                                >\r\n                                {`${element.toUpperCase()}`}</span>\r\n                                &nbsp; \r\n                                </React.Fragment>\r\n                        })}&nbsp;]\r\n                        </span>\r\n                        \r\n                        \r\n                        <br></br>\r\n                        in {GoogleMap_Deafult_Option.get('distance')||Google_Map_Search_Option.distance}m boundery*</span>\r\n\r\n                    <input id='placeSearch_Distance_RangeSelector' type='range' list='rangechart'\r\n                        step='100' min='100' max='1000' \r\n                        name=\"distance\" defaultValue={GoogleMap_Deafult_Option.get('distance')||Google_Map_Search_Option.distance}\r\n                        onChange={()=>{\r\n\r\n                            const Distance_Value = document.getElementById('placeSearch_Distance_RangeSelector').value\r\n\r\n                            updateOption({...Google_Map_Search_Option,\r\n                                distance:Distance_Value\r\n                            })\r\n                            dispatch(ActionCreater('UpdateUrl','distance', Distance_Value))\r\n\r\n\r\n                            }}\r\n                    ></input>\r\n\r\n                            <datalist id='rangechart'>\r\n                                <option value=\"0\" disabled hidden></option>\r\n                                <option value=\"100\"></option>\r\n                                <option value=\"200\"></option>\r\n                                <option value=\"300\"></option>\r\n                                <option value=\"400\"></option>\r\n                                <option value=\"500\" selected ></option>\r\n                                <option value=\"600\"></option>\r\n                                <option value=\"700\"></option>\r\n                                <option value=\"800\"></option>\r\n                                <option value=\"900\"></option>\r\n                                <option value=\"1000\"></option>\r\n                            </datalist>\r\n\r\n                    <select id='placeSearch_Type_RangeSelector' name=\"types\" onChange={()=>{\r\n\r\n                                const Type_Value = document.getElementById('placeSearch_Type_RangeSelector').value\r\n\r\n                                const Type_Options = []\r\n                                Google_Map_Search_Option.type.forEach(element => {\r\n                                    Type_Options.push(element)\r\n                                });\r\n\r\n                                switch(Type_Options.includes(Type_Value)){\r\n\r\n                                    case(true):\r\n                                    return;\r\n\r\n                                    case(false):\r\n                                    Type_Options.push(Type_Value)\r\n                                    updateOption({...Google_Map_Search_Option,\r\n                                        type: Type_Options\r\n                                    })\r\n                                    dispatch(ActionCreater('UpdateUrl','type',Type_Options))\r\n                                    return;\r\n\r\n                                }\r\n                                \r\n                            }} defaultValue={Google_Map_Search_Option.distance}\r\n                            style={{\r\n                                margin: '1vh 4vw',\r\n                                textAlign: 'center',\r\n                                padding: '0.5vh 0',\r\n                                borderRadius: '15px',\r\n                                fontFamily: '큐트신민상',\r\n                                letterSpacing: '1.5px',\r\n                                border: `black solid 2px`,\r\n                            }}>\r\n                        <option selected value=\"restaurant\" >Select an Option</option>\r\n                        <option value=\"restaurant\" >RESTAURANT</option>\r\n                        <option value=\"cafe\">CAFE</option>\r\n                        <option value=\"bar\">BAR</option>\r\n                    </select>\r\n\r\n                </div>\r\n\r\n</React.Fragment>\r\n\r\n}\r\n\r\nexport default Google_Map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}