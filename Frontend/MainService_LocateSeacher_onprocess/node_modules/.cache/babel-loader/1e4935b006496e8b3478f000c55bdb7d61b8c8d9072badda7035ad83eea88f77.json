{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ereh0\\\\OneDrive\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\food_script_2.0.0\\\\Develop\\\\Frontend\\\\MainService_LocateSeacher_onprocess\\\\src\\\\0_component\\\\Google_Api_Integation\\\\Google_Map_Api\\\\Google_Map_Api_Components\\\\Google_Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Map, Marker, useMapsLibrary, useMap } from '@vis.gl/react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Google_Map = () => {\n  _s();\n  const INITIAL_CAMERA = {\n    zoom: 15,\n    center: {\n      lat: 0,\n      lng: 0\n    }\n  };\n  const INITIAL_MARKER = {\n    position: {\n      lat: 0,\n      lng: 0\n    }\n  };\n  const [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\n  const [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\n  const [UrlParser, updateParser] = useState('');\n  const Url = useSelector(state => state);\n  const Latest_Keyword = '';\n  let Map_Instance = useMap('Google_Map');\n  let Place_Library = useMapsLibrary('places');\n  const UpdateMap = (latitude, longitude) => {\n    setMarkerProps({\n      position: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n    setCameraProps({\n      zoom: 17,\n      center: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n  };\n  const Location_Loaded_Success_CallBack = position => {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    UpdateMap(latitude, longitude);\n  };\n  const Current_Location_Loading = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(Location_Loaded_Success_CallBack);\n    }\n  };\n  const Latest_Keyword_Update = () => {\n    const Latest_Keyword = Url.urlObject.toString();\n    updateParser(Latest_Keyword);\n    if (!Place_Library || !Map_Instance) return;\n    const svc = new Place_Library.PlacesService(Map_Instance);\n    svc.findPlaceFromQuery({\n      query: `${Url.urlObject.get('keyword')}`,\n      fields: ['geometry.location']\n    }, result => {\n      console.log(result[0].geometry.location.lat());\n    });\n  };\n  useEffect(() => {\n    // Current_Location_Loading()\n\n    Latest_Keyword_Update();\n  }, [Place_Library, Map_Instance, Latest_Keyword]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      id: \"Google_Map\",\n      style: {\n        width: 'inherit',\n        height: '20vh',\n        backgroundColor: 'white',\n        margin: '3vh 6vw 0 10vw',\n        border: 'black solid 5px'\n      },\n      ...cameraProps,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        ...markerProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 8\n  }, this);\n};\n_s(Google_Map, \"DiilpiuLk2WchsYUaWgTyEXToGg=\", false, function () {\n  return [useSelector, useMap, useMapsLibrary];\n});\n_c = Google_Map;\nexport default Google_Map;\nvar _c;\n$RefreshReg$(_c, \"Google_Map\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Map","Marker","useMapsLibrary","useMap","jsxDEV","_jsxDEV","Google_Map","_s","INITIAL_CAMERA","zoom","center","lat","lng","INITIAL_MARKER","position","cameraProps","setCameraProps","markerProps","setMarkerProps","UrlParser","updateParser","Url","state","Latest_Keyword","Map_Instance","Place_Library","UpdateMap","latitude","longitude","Location_Loaded_Success_CallBack","coords","Current_Location_Loading","navigator","geolocation","getCurrentPosition","Latest_Keyword_Update","urlObject","toString","svc","PlacesService","findPlaceFromQuery","query","get","fields","result","console","log","geometry","location","Fragment","children","id","style","width","height","backgroundColor","margin","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ereh0/OneDrive/문서/개발/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/src/0_component/Google_Api_Integation/Google_Map_Api/Google_Map_Api_Components/Google_Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport { Map, Marker, useMapsLibrary, useMap} from '@vis.gl/react-google-maps'\r\n\r\nexport const Google_Map = () => {\r\n\r\nconst INITIAL_CAMERA = {\r\n        zoom : 15,\r\n        center : {lat: 0, lng: 0}\r\n    }\r\n\r\nconst INITIAL_MARKER = {\r\n        position : {lat: 0, lng: 0}\r\n    }\r\n\r\nconst [cameraProps, setCameraProps] = useState(INITIAL_CAMERA);\r\nconst [markerProps, setMarkerProps] = useState(INITIAL_MARKER);\r\n\r\nconst [UrlParser, updateParser] = useState('')\r\nconst Url = useSelector(state => state)\r\nconst Latest_Keyword ='';\r\n\r\nlet Map_Instance = useMap('Google_Map');\r\nlet Place_Library = useMapsLibrary('places');\r\n\r\n    const UpdateMap = (latitude, longitude) => {\r\n\r\n        setMarkerProps({\r\n            position: {lat: latitude, lng: longitude}\r\n        })\r\n\r\n        setCameraProps({\r\n            zoom: 17, \r\n            center: {lat: latitude, lng: longitude}\r\n        })\r\n\r\n    }\r\n\r\n    const Location_Loaded_Success_CallBack = (position) => {\r\n        let latitude = position.coords.latitude;\r\n        let longitude = position.coords.longitude;\r\n\r\n        UpdateMap(latitude,longitude)\r\n    }\r\n\r\n    const Current_Location_Loading = async () => {\r\n            if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                \r\n            Location_Loaded_Success_CallBack\r\n    \r\n            )}\r\n    }\r\n\r\n    const Latest_Keyword_Update = () => {\r\n       \r\n        const Latest_Keyword = Url.urlObject.toString()\r\n        updateParser(Latest_Keyword)\r\n\r\n        if (!Place_Library || !Map_Instance) return;\r\n        \r\n        const svc = new Place_Library.PlacesService(Map_Instance);      \r\n\r\n        svc.findPlaceFromQuery({\r\n            query: `${Url.urlObject.get('keyword')}`,fields :['geometry.location']\r\n        },(result)=>{\r\n            console.log(result[0].geometry.location.lat())\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        // Current_Location_Loading()\r\n\r\n        Latest_Keyword_Update()\r\n        \r\n    },[Place_Library, Map_Instance, Latest_Keyword])\r\n\r\nreturn <React.Fragment>\r\n\r\n\r\n                <Map id='Google_Map'\r\n                \r\n                    style={ \r\n                        { width:'inherit',\r\n                        height:'20vh',\r\n                        backgroundColor:'white',\r\n                        margin: '3vh 6vw 0 10vw',\r\n                        border: 'black solid 5px'\r\n                        }}\r\n                    \r\n                    {...cameraProps}>\r\n                \r\n                    <Marker\r\n                    {...markerProps}/>\r\n\r\n                </Map>\r\n\r\n\r\n\r\n</React.Fragment>\r\n\r\n}\r\n\r\nexport default Google_Map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}