{"ast":null,"code":"import _defineProperty from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ereh0/OneDrive/\\uBB38\\uC11C/\\uAC1C\\uBC1C/food_script_2.0.0/Develop/Frontend/MainService_LocateSeacher_onprocess/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport React, { useMemo, useState, useReducer, useCallback, useEffect, useRef, useContext, useLayoutEffect, forwardRef, useImperativeHandle, Children } from 'react';\nimport { createPortal } from 'react-dom';\nimport isDeepEqual from 'fast-deep-equal';\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nvar APILoadingStatus = {\n  NOT_LOADED: 'NOT_LOADED',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  FAILED: 'FAILED',\n  AUTH_FAILURE: 'AUTH_FAILURE'\n};\nvar MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nvar GoogleMapsApiLoader = /*#__PURE__*/function () {\n  function GoogleMapsApiLoader() {\n    _classCallCheck(this, GoogleMapsApiLoader);\n  }\n  _createClass(GoogleMapsApiLoader, null, [{\n    key: \"load\",\n    value:\n    /**\n     * Loads the Maps JavaScript API with the specified parameters.\n     * Since the Maps library can only be loaded once per page, this will\n     * produce a warning when called multiple times with different\n     * parameters.\n     *\n     * The returned promise resolves when loading completes\n     * and rejects in case of an error or when the loading was aborted.\n     */\n    function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params, onLoadingStatusChange) {\n        var _window$google, libraries, serializedParams, librariesToLoad;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              libraries = params.libraries ? params.libraries.split(',') : [];\n              serializedParams = this.serializeParams(params);\n              this.listeners.push(onLoadingStatusChange);\n              // Note: if `google.maps.importLibrary` has been defined externally, we\n              //   assume that loading is complete and successful.\n              //   If it was defined by a previous call to this method, a warning\n              //   message is logged if there are differences in api-parameters used\n              //   for both calls.\n              if ((_window$google = window.google) != null && (_window$google = _window$google.maps) != null && _window$google.importLibrary) {\n                // no serialized parameters means it was loaded externally\n                if (!this.serializedApiParams) {\n                  this.loadingStatus = APILoadingStatus.LOADED;\n                }\n                this.notifyLoadingStatusListeners();\n              } else {\n                this.serializedApiParams = serializedParams;\n                this.initImportLibrary(params);\n              }\n              if (this.serializedApiParams && this.serializedApiParams !== serializedParams) {\n                console.warn(\"[google-maps-api-loader] The maps API has already been loaded \" + \"with different parameters and will not be loaded again. Refresh the \" + \"page for new values to have effect.\");\n              }\n              librariesToLoad = ['maps'].concat(_toConsumableArray(libraries));\n              _context.next = 8;\n              return Promise.all(librariesToLoad.map(function (name) {\n                return google.maps.importLibrary(name);\n              }));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function load(_x, _x2) {\n        return _load.apply(this, arguments);\n      }\n      return load;\n    }()\n    /**\n     * Serialize the paramters used to load the library for easier comparison.\n     */\n  }, {\n    key: \"serializeParams\",\n    value: function serializeParams(params) {\n      return [params.v, params.key, params.language, params.region, params.authReferrerPolicy, params.solutionChannel].join('/');\n    }\n    /**\n     * Creates the global `google.maps.importLibrary` function for bootstrapping.\n     * This is essentially a formatted version of the dynamic loading script\n     * from the official documentation with some minor adjustments.\n     *\n     * The created importLibrary function will load the Google Maps JavaScript API,\n     * which will then replace the `google.maps.importLibrary` function with the full\n     * implementation.\n     *\n     * @see https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n     */\n  }, {\n    key: \"initImportLibrary\",\n    value: function initImportLibrary(params) {\n      var _this = this;\n      if (!window.google) window.google = {};\n      if (!window.google.maps) window.google.maps = {};\n      if (window.google.maps['importLibrary']) {\n        console.error('[google-maps-api-loader-internal]: initImportLibrary must only be called once');\n        return;\n      }\n      var apiPromise = null;\n      var loadApi = function loadApi() {\n        if (apiPromise) return apiPromise;\n        apiPromise = new Promise(function (resolve, reject) {\n          var _document$querySelect;\n          var scriptElement = document.createElement('script');\n          var urlParams = new URLSearchParams();\n          for (var _i = 0, _Object$entries = Object.entries(params); _i < _Object$entries.length; _i++) {\n            var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n              key = _Object$entries$_i[0],\n              value = _Object$entries$_i[1];\n            var urlParamName = key.replace(/[A-Z]/g, function (t) {\n              return '_' + t[0].toLowerCase();\n            });\n            urlParams.set(urlParamName, value);\n          }\n          urlParams.set('loading', 'async');\n          urlParams.set('callback', '__googleMapsCallback__');\n          scriptElement.async = true;\n          scriptElement.src = MAPS_API_BASE_URL + \"?\" + urlParams.toString();\n          scriptElement.nonce = ((_document$querySelect = document.querySelector('script[nonce]')) == null ? void 0 : _document$querySelect.nonce) || '';\n          scriptElement.onerror = function () {\n            _this.loadingStatus = APILoadingStatus.FAILED;\n            _this.notifyLoadingStatusListeners();\n            reject(new Error('The Google Maps JavaScript API could not load.'));\n          };\n          window.__googleMapsCallback__ = function () {\n            _this.loadingStatus = APILoadingStatus.LOADED;\n            _this.notifyLoadingStatusListeners();\n            resolve();\n          };\n          window.gm_authFailure = function () {\n            _this.loadingStatus = APILoadingStatus.AUTH_FAILURE;\n            _this.notifyLoadingStatusListeners();\n          };\n          _this.loadingStatus = APILoadingStatus.LOADING;\n          _this.notifyLoadingStatusListeners();\n          document.head.append(scriptElement);\n        });\n        return apiPromise;\n      };\n      // for the first load, we declare an importLibrary function that will\n      // be overwritten once the api is loaded.\n      google.maps.importLibrary = function (libraryName) {\n        return loadApi().then(function () {\n          return google.maps.importLibrary(libraryName);\n        });\n      };\n    }\n    /**\n     * Calls all registered loadingStatusListeners after a status update.\n     */\n  }, {\n    key: \"notifyLoadingStatusListeners\",\n    value: function notifyLoadingStatusListeners() {\n      var _iterator = _createForOfIteratorHelper(this.listeners),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var fn = _step.value;\n          fn(this.loadingStatus);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n  return GoogleMapsApiLoader;\n}();\n/**\n * The current loadingStatus of the API.\n */\nGoogleMapsApiLoader.loadingStatus = APILoadingStatus.NOT_LOADED;\n/**\n * The parameters used for first loading the API.\n */\nGoogleMapsApiLoader.serializedApiParams = void 0;\n/**\n * A list of functions to be notified when the loading status changes.\n */\nGoogleMapsApiLoader.listeners = [];\nvar _excluded$4 = [\"onLoad\", \"onError\", \"apiKey\", \"version\", \"libraries\"],\n  _excluded2$1 = [\"children\"];\nvar DEFAULT_SOLUTION_CHANNEL = 'GMP_visgl_rgmlibrary_v1_default';\nvar APIProviderContext = React.createContext(null);\n/**\n * local hook to set up the map-instance management context.\n */\nfunction useMapInstances() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    mapInstances = _useState2[0],\n    setMapInstances = _useState2[1];\n  var addMapInstance = function addMapInstance(mapInstance) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    setMapInstances(function (instances) {\n      return _extends({}, instances, _defineProperty({}, id, mapInstance));\n    });\n  };\n  var removeMapInstance = function removeMapInstance() {\n    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(function (_ref) {\n      var remaining = _objectWithoutPropertiesLoose(_ref, [id].map(_toPropertyKey));\n      return remaining;\n    });\n  };\n  var clearMapInstances = function clearMapInstances() {\n    setMapInstances({});\n  };\n  return {\n    mapInstances: mapInstances,\n    addMapInstance: addMapInstance,\n    removeMapInstance: removeMapInstance,\n    clearMapInstances: clearMapInstances\n  };\n}\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props) {\n  var onLoad = props.onLoad,\n    onError = props.onError,\n    apiKey = props.apiKey,\n    version = props.version,\n    _props$libraries = props.libraries,\n    libraries = _props$libraries === void 0 ? [] : _props$libraries,\n    otherApiParams = _objectWithoutPropertiesLoose(props, _excluded$4);\n  var _useState3 = useState(GoogleMapsApiLoader.loadingStatus),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setStatus = _useState4[1];\n  var _useReducer = useReducer(function (loadedLibraries, action) {\n      return loadedLibraries[action.name] ? loadedLibraries : _extends({}, loadedLibraries, _defineProperty({}, action.name, action.value));\n    }, {}),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    loadedLibraries = _useReducer2[0],\n    addLoadedLibrary = _useReducer2[1];\n  var librariesString = useMemo(function () {\n    return libraries == null ? void 0 : libraries.join(',');\n  }, [libraries]);\n  var serializedParams = useMemo(function () {\n    return JSON.stringify(_extends({\n      apiKey: apiKey,\n      version: version\n    }, otherApiParams));\n  }, [apiKey, version, otherApiParams]);\n  var importLibrary = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name) {\n      var _google, res;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!loadedLibraries[name]) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\", loadedLibraries[name]);\n          case 2:\n            if ((_google = google) != null && (_google = _google.maps) != null && _google.importLibrary) {\n              _context2.next = 4;\n              break;\n            }\n            throw new Error('[api-provider-internal] importLibrary was called before ' + 'google.maps.importLibrary was defined.');\n          case 4:\n            _context2.next = 6;\n            return window.google.maps.importLibrary(name);\n          case 6:\n            res = _context2.sent;\n            addLoadedLibrary({\n              name: name,\n              value: res\n            });\n            return _context2.abrupt(\"return\", res);\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [loadedLibraries]);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var params, _i2, _arr, name;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            params = _extends({\n              key: apiKey\n            }, otherApiParams);\n            if (version) params.v = version;\n            if ((librariesString == null ? void 0 : librariesString.length) > 0) params.libraries = librariesString;\n            if (params.solutionChannel === undefined) params.solutionChannel = DEFAULT_SOLUTION_CHANNEL;else if (params.solutionChannel === '') delete params.solutionChannel;\n            _context3.next = 7;\n            return GoogleMapsApiLoader.load(params, function (status) {\n              return setStatus(status);\n            });\n          case 7:\n            _i2 = 0, _arr = ['core', 'maps'].concat(_toConsumableArray(libraries));\n          case 8:\n            if (!(_i2 < _arr.length)) {\n              _context3.next = 15;\n              break;\n            }\n            name = _arr[_i2];\n            _context3.next = 12;\n            return importLibrary(name);\n          case 12:\n            _i2++;\n            _context3.next = 8;\n            break;\n          case 15:\n            if (onLoad) {\n              onLoad();\n            }\n            _context3.next = 21;\n            break;\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            if (onError) {\n              onError(_context3.t0);\n            } else {\n              console.error('<ApiProvider> failed to load the Google Maps JavaScript API', _context3.t0);\n            }\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 18]]);\n    }))();\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [apiKey, librariesString, serializedParams]);\n  return {\n    status: status,\n    loadedLibraries: loadedLibraries,\n    importLibrary: importLibrary\n  };\n}\n/**\n * Component to wrap the components from this library and load the Google Maps JavaScript API\n */\nvar APIProvider = function APIProvider(props) {\n  var children = props.children,\n    loaderProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n  var _useMapInstances = useMapInstances(),\n    mapInstances = _useMapInstances.mapInstances,\n    addMapInstance = _useMapInstances.addMapInstance,\n    removeMapInstance = _useMapInstances.removeMapInstance,\n    clearMapInstances = _useMapInstances.clearMapInstances;\n  var _useGoogleMapsApiLoad = useGoogleMapsApiLoader(loaderProps),\n    status = _useGoogleMapsApiLoad.status,\n    loadedLibraries = _useGoogleMapsApiLoad.loadedLibraries,\n    importLibrary = _useGoogleMapsApiLoad.importLibrary;\n  var contextValue = useMemo(function () {\n    return {\n      mapInstances: mapInstances,\n      addMapInstance: addMapInstance,\n      removeMapInstance: removeMapInstance,\n      clearMapInstances: clearMapInstances,\n      status: status,\n      loadedLibraries: loadedLibraries,\n      importLibrary: importLibrary\n    };\n  }, [mapInstances, addMapInstance, removeMapInstance, clearMapInstances, status, loadedLibraries, importLibrary]);\n  return /*#__PURE__*/React.createElement(APIProviderContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nfunction useMapEvents(map, props) {\n  var _loop = function _loop() {\n    var propName = _eventPropNames[_i3];\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    var handler = props[propName];\n    var eventType = propNameToEventType[propName];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n      if (!map) return;\n      if (!handler) return;\n      var listener = google.maps.event.addListener(map, eventType, function (ev) {\n        handler(createMapEvent(eventType, map, ev));\n      });\n      return function () {\n        return listener.remove();\n      };\n    }, [map, eventType, handler]);\n  };\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n  for (var _i3 = 0, _eventPropNames = eventPropNames; _i3 < _eventPropNames.length; _i3++) {\n    _loop();\n  }\n}\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(type, map, srcEvent) {\n  var ev = {\n    type: type,\n    map: map,\n    detail: {},\n    stoppable: false,\n    stop: function stop() {}\n  };\n  if (cameraEventTypes.includes(type)) {\n    var camEvent = ev;\n    var center = map.getCenter();\n    var zoom = map.getZoom();\n    var heading = map.getHeading() || 0;\n    var tilt = map.getTilt() || 0;\n    var bounds = map.getBounds();\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn('[createEvent] at least one of the values from the map ' + 'returned undefined. This is not expected to happen. Please ' + 'report an issue at https://github.com/visgl/react-google-maps/issues/new');\n    }\n    camEvent.detail = {\n      center: (center == null ? void 0 : center.toJSON()) || {\n        lat: 0,\n        lng: 0\n      },\n      zoom: zoom || 0,\n      heading: heading,\n      tilt: tilt,\n      bounds: (bounds == null ? void 0 : bounds.toJSON()) || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    var _srcEvent$latLng;\n    if (!srcEvent) throw new Error('[createEvent] mouse events must provide a srcEvent');\n    var mouseEvent = ev;\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = function () {\n      return srcEvent.stop();\n    };\n    mouseEvent.detail = {\n      latLng: ((_srcEvent$latLng = srcEvent.latLng) == null ? void 0 : _srcEvent$latLng.toJSON()) || null,\n      placeId: srcEvent.placeId\n    };\n    return mouseEvent;\n  }\n  return ev;\n}\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nvar propNameToEventType = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n  // note: onCameraChanged is an alias for the bounds_changed event,\n  // since that is going to be fired in every situation where the camera is\n  // updated.\n  onCameraChanged: 'bounds_changed'\n};\nvar cameraEventTypes = ['bounds_changed', 'center_changed', 'heading_changed', 'tilt_changed', 'zoom_changed'];\nvar mouseEventTypes = ['click', 'contextmenu', 'dblclick', 'mousemove', 'mouseout', 'mouseover'];\nvar eventPropNames = Object.keys(propNameToEventType);\nfunction useDeepCompareEffect(effect, deps) {\n  var ref = useRef(undefined);\n  if (!ref.current || !isDeepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, ref.current);\n}\nvar mapOptionKeys = new Set(['backgroundColor', 'clickableIcons', 'controlSize', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor', 'draggingCursor', 'fullscreenControl', 'fullscreenControlOptions', 'gestureHandling', 'headingInteractionEnabled', 'isFractionalZoomEnabled', 'keyboardShortcuts', 'mapTypeControl', 'mapTypeControlOptions', 'mapTypeId', 'maxZoom', 'minZoom', 'noClear', 'panControl', 'panControlOptions', 'restriction', 'rotateControl', 'rotateControlOptions', 'scaleControl', 'scaleControlOptions', 'scrollwheel', 'streetView', 'streetViewControl', 'streetViewControlOptions', 'styles', 'tiltInteractionEnabled', 'zoomControl', 'zoomControlOptions']);\n/**\n * Internal hook to update the map-options when props are changed.\n *\n * @param map the map instance\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nfunction useMapOptions(map, mapProps) {\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor via mapOptions.\n   */\n  var mapOptions = {};\n  var keys = Object.keys(mapProps);\n  for (var _i4 = 0, _keys = keys; _i4 < _keys.length; _i4++) {\n    var key = _keys[_i4];\n    if (!mapOptionKeys.has(key)) continue;\n    mapOptions[key] = mapProps[key];\n  }\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useDeepCompareEffect(function () {\n    if (!map) return;\n    map.setOptions(mapOptions);\n  }, [mapOptions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\n\nfunction useApiLoadingStatus() {\n  var _useContext;\n  return ((_useContext = useContext(APIProviderContext)) == null ? void 0 : _useContext.status) || APILoadingStatus.NOT_LOADED;\n}\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nfunction useDeckGLCameraUpdate(map, props) {\n  var viewport = props.viewport,\n    viewState = props.viewState;\n  var isDeckGlControlled = !!viewport;\n  useLayoutEffect(function () {\n    if (!map || !viewState) return;\n    var latitude = viewState.latitude,\n      longitude = viewState.longitude,\n      heading = viewState.bearing,\n      tilt = viewState.pitch,\n      zoom = viewState.zoom;\n    map.moveCamera({\n      center: {\n        lat: latitude,\n        lng: longitude\n      },\n      heading: heading,\n      tilt: tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n  return isDeckGlControlled;\n}\nfunction isLatLngLiteral(obj) {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\nfunction latLngEquals(a, b) {\n  if (!a || !b) return false;\n  var A = toLatLngLiteral(a);\n  var B = toLatLngLiteral(b);\n  if (A.lat !== B.lat || A.lng !== B.lng) return false;\n  return true;\n}\nfunction toLatLngLiteral(obj) {\n  if (isLatLngLiteral(obj)) return obj;\n  return obj.toJSON();\n}\nfunction useMapCameraParams(map, cameraStateRef, mapProps) {\n  var center = mapProps.center ? toLatLngLiteral(mapProps.center) : null;\n  var lat = null;\n  var lng = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat;\n    lng = center.lng;\n  }\n  var zoom = Number.isFinite(mapProps.zoom) ? mapProps.zoom : null;\n  var heading = Number.isFinite(mapProps.heading) ? mapProps.heading : null;\n  var tilt = Number.isFinite(mapProps.tilt) ? mapProps.tilt : null;\n  // the following effect runs for every render of the map component and checks\n  // if there are differences between the known state of the map instance\n  // (cameraStateRef, which is updated by all bounds_changed events) and the\n  // desired state in the props.\n  useLayoutEffect(function () {\n    if (!map) return;\n    var nextCamera = {};\n    var needsUpdate = false;\n    if (lat !== null && lng !== null && (cameraStateRef.current.center.lat !== lat || cameraStateRef.current.center.lng !== lng)) {\n      nextCamera.center = {\n        lat: lat,\n        lng: lng\n      };\n      needsUpdate = true;\n    }\n    if (zoom !== null && cameraStateRef.current.zoom !== zoom) {\n      nextCamera.zoom = zoom;\n      needsUpdate = true;\n    }\n    if (heading !== null && cameraStateRef.current.heading !== heading) {\n      nextCamera.heading = heading;\n      needsUpdate = true;\n    }\n    if (tilt !== null && cameraStateRef.current.tilt !== tilt) {\n      nextCamera.tilt = tilt;\n      needsUpdate = true;\n    }\n    if (needsUpdate) {\n      map.moveCamera(nextCamera);\n    }\n  });\n}\nvar AuthFailureMessage = function AuthFailureMessage() {\n  var style = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '.8rem',\n    color: 'rgba(0,0,0,0.6)',\n    background: '#dddddd',\n    padding: '1rem 1.5rem'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"Error: AuthFailure\"), /*#__PURE__*/React.createElement(\"p\", null, \"A problem with your API key prevents the map from rendering correctly. Please make sure the value of the \", /*#__PURE__*/React.createElement(\"code\", null, \"APIProvider.apiKey\"), \" prop is correct. Check the error-message in the console for further details.\"));\n};\nfunction useCallbackRef() {\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    el = _useState6[0],\n    setEl = _useState6[1];\n  var ref = useCallback(function (value) {\n    return setEl(value);\n  }, [setEl]);\n  return [el, ref];\n}\n\n/**\n * Hook to check if the Maps JavaScript API is loaded\n */\nfunction useApiIsLoaded() {\n  var status = useApiLoadingStatus();\n  return status === APILoadingStatus.LOADED;\n}\nfunction useForceUpdate() {\n  var _useReducer3 = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer4 = _slicedToArray(_useReducer3, 2),\n    forceUpdate = _useReducer4[1];\n  return forceUpdate;\n}\nfunction handleBoundsChange(map, ref) {\n  var center = map.getCenter();\n  var zoom = map.getZoom();\n  var heading = map.getHeading() || 0;\n  var tilt = map.getTilt() || 0;\n  var bounds = map.getBounds();\n  if (!center || !bounds || !Number.isFinite(zoom)) {\n    console.warn('[useTrackedCameraState] at least one of the values from the map ' + 'returned undefined. This is not expected to happen. Please ' + 'report an issue at https://github.com/visgl/react-google-maps/issues/new');\n  }\n  // fixme: do we need the `undefined` cases for the camera-params? When are they used in the maps API?\n  Object.assign(ref.current, {\n    center: (center == null ? void 0 : center.toJSON()) || {\n      lat: 0,\n      lng: 0\n    },\n    zoom: zoom || 0,\n    heading: heading,\n    tilt: tilt\n  });\n}\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is used in `useMapCameraParams` to reduce stuttering in normal operation\n * by avoiding updates of the map camera with values that have already been processed.\n */\nfunction useTrackedCameraStateRef(map) {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef({\n    center: {\n      lat: 0,\n      lng: 0\n    },\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n  // Record camera state with every bounds_changed event dispatched by the map.\n  // This data is used to prevent feeding these values back to the\n  // map-instance when a typical \"controlled component\" setup (state variable is\n  // fed into and updated by the map).\n  useEffect(function () {\n    if (!map) return;\n    var listener = google.maps.event.addListener(map, 'bounds_changed', function () {\n      handleBoundsChange(map, ref);\n      // When an event is occured, we have to update during the next cycle.\n      // The application could decide to ignore the event and not update any\n      // camera props of the map, meaning that in that case we will have to\n      // 'undo' the change to the camera.\n      forceUpdate();\n    });\n    return function () {\n      return listener.remove();\n    };\n  }, [map, forceUpdate]);\n  return ref;\n}\nvar _excluded$3 = [\"id\", \"defaultBounds\", \"defaultCenter\", \"defaultZoom\", \"defaultHeading\", \"defaultTilt\", \"reuseMaps\", \"renderingType\", \"colorScheme\"],\n  _excluded2 = [\"padding\"];\n/**\n * Stores a stack of map-instances for each mapId. Whenever an\n * instance is used, it is removed from the stack while in use,\n * and returned to the stack when the component unmounts.\n * This allows us to correctly implement caching for multiple\n * maps om the same page, while reusing as much as possible.\n *\n * FIXME: while it should in theory be possible to reuse maps solely\n *   based on the mapId (as all other parameters can be changed at\n *   runtime), we don't yet have good enough tracking of options to\n *   reliably unset all the options that have been set.\n */\nvar CachedMapStack = /*#__PURE__*/function () {\n  function CachedMapStack() {\n    _classCallCheck(this, CachedMapStack);\n  }\n  _createClass(CachedMapStack, null, [{\n    key: \"has\",\n    value: function has(key) {\n      return this.entries[key] && this.entries[key].length > 0;\n    }\n  }, {\n    key: \"pop\",\n    value: function pop(key) {\n      if (!this.entries[key]) return null;\n      return this.entries[key].pop() || null;\n    }\n  }, {\n    key: \"push\",\n    value: function push(key, value) {\n      if (!this.entries[key]) this.entries[key] = [];\n      this.entries[key].push(value);\n    }\n  }]);\n  return CachedMapStack;\n}();\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nCachedMapStack.entries = {};\nfunction useMapInstance(props, context) {\n  var apiIsLoaded = useApiIsLoaded();\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    map = _useState8[0],\n    setMap = _useState8[1];\n  var _useCallbackRef = useCallbackRef(),\n    _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),\n    container = _useCallbackRef2[0],\n    containerRef = _useCallbackRef2[1];\n  var cameraStateRef = useTrackedCameraStateRef(map);\n  var id = props.id,\n    defaultBounds = props.defaultBounds,\n    defaultCenter = props.defaultCenter,\n    defaultZoom = props.defaultZoom,\n    defaultHeading = props.defaultHeading,\n    defaultTilt = props.defaultTilt,\n    reuseMaps = props.reuseMaps,\n    renderingType = props.renderingType,\n    colorScheme = props.colorScheme,\n    mapOptions = _objectWithoutPropertiesLoose(props, _excluded$3);\n  var hasZoom = props.zoom !== undefined || props.defaultZoom !== undefined;\n  var hasCenter = props.center !== undefined || props.defaultCenter !== undefined;\n  if (!defaultBounds && (!hasZoom || !hasCenter)) {\n    console.warn('<Map> component is missing configuration. ' + 'You have to provide zoom and center (via the `zoom`/`defaultZoom` and ' + '`center`/`defaultCenter` props) or specify the region to show using ' + '`defaultBounds`. See ' + 'https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required');\n  }\n  // apply default camera props if available and not overwritten by controlled props\n  if (!mapOptions.center && defaultCenter) mapOptions.center = defaultCenter;\n  if (!mapOptions.zoom && Number.isFinite(defaultZoom)) mapOptions.zoom = defaultZoom;\n  if (!mapOptions.heading && Number.isFinite(defaultHeading)) mapOptions.heading = defaultHeading;\n  if (!mapOptions.tilt && Number.isFinite(defaultTilt)) mapOptions.tilt = defaultTilt;\n  for (var _i5 = 0, _Object$keys = Object.keys(mapOptions); _i5 < _Object$keys.length; _i5++) {\n    var key = _Object$keys[_i5];\n    if (mapOptions[key] === undefined) delete mapOptions[key];\n  }\n  var savedMapStateRef = useRef();\n  // create the map instance and register it in the context\n  useEffect(function () {\n    if (!container || !apiIsLoaded) return;\n    var addMapInstance = context.addMapInstance,\n      removeMapInstance = context.removeMapInstance;\n    // note: colorScheme (upcoming feature) isn't yet in the typings, remove once that is fixed:\n    var mapId = props.mapId;\n    var cacheKey = \"\".concat(mapId || 'default', \":\").concat(renderingType || 'default', \":\").concat(colorScheme || 'LIGHT');\n    var mapDiv;\n    var map;\n    if (reuseMaps && CachedMapStack.has(cacheKey)) {\n      map = CachedMapStack.pop(cacheKey);\n      mapDiv = map.getDiv();\n      container.appendChild(mapDiv);\n      map.setOptions(mapOptions);\n      // detaching the element from the DOM lets the map fall back to its default\n      // size, setting the center will trigger reloading the map.\n      setTimeout(function () {\n        return map.setCenter(map.getCenter());\n      }, 0);\n    } else {\n      mapDiv = document.createElement('div');\n      mapDiv.style.height = '100%';\n      container.appendChild(mapDiv);\n      map = new google.maps.Map(mapDiv, _extends({}, mapOptions, renderingType ? {\n        renderingType: renderingType\n      } : {}, colorScheme ? {\n        colorScheme: colorScheme\n      } : {}));\n    }\n    setMap(map);\n    addMapInstance(map, id);\n    if (defaultBounds) {\n      var padding = defaultBounds.padding,\n        defBounds = _objectWithoutPropertiesLoose(defaultBounds, _excluded2);\n      map.fitBounds(defBounds, padding);\n    }\n    // prevent map not rendering due to missing configuration\n    else if (!hasZoom || !hasCenter) {\n      map.fitBounds({\n        east: 180,\n        west: -180,\n        south: -90,\n        north: 90\n      });\n    }\n    // the savedMapState is used to restore the camera parameters when the mapId is changed\n    if (savedMapStateRef.current) {\n      var _savedMapStateRef$cur = savedMapStateRef.current,\n        savedMapId = _savedMapStateRef$cur.mapId,\n        savedCameraState = _savedMapStateRef$cur.cameraState;\n      if (savedMapId !== mapId) {\n        map.setOptions(savedCameraState);\n      }\n    }\n    return function () {\n      savedMapStateRef.current = {\n        mapId: mapId,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        cameraState: cameraStateRef.current\n      };\n      // detach the map-div from the dom\n      mapDiv.remove();\n      if (reuseMaps) {\n        // push back on the stack\n        CachedMapStack.push(cacheKey, map);\n      } else {\n        // remove all event-listeners to minimize the possibility of memory-leaks\n        google.maps.event.clearInstanceListeners(map);\n      }\n      setMap(null);\n      removeMapInstance(id);\n    };\n  },\n  // some dependencies are ignored in the list below:\n  //  - defaultBounds and the default* camera props will only be used once, and\n  //    changes should be ignored\n  //  - mapOptions has special hooks that take care of updating the options\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [container, apiIsLoaded, id,\n  // these props can't be changed after initialization and require a new\n  // instance to be created\n  props.mapId, props.renderingType, props.colorScheme]);\n  return [map, containerRef, cameraStateRef];\n}\nvar GoogleMapsContext = React.createContext(null);\n// ColorScheme and RenderingType are redefined here to make them usable before the\n// maps API has been fully loaded.\nvar ColorScheme = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n  FOLLOW_SYSTEM: 'FOLLOW_SYSTEM'\n};\nvar RenderingType = {\n  VECTOR: 'VECTOR',\n  RASTER: 'RASTER',\n  UNINITIALIZED: 'UNINITIALIZED'\n};\nvar Map = function Map(props) {\n  var children = props.children,\n    id = props.id,\n    className = props.className,\n    style = props.style;\n  var context = useContext(APIProviderContext);\n  var loadingStatus = useApiLoadingStatus();\n  if (!context) {\n    throw new Error('<Map> can only be used inside an <ApiProvider> component.');\n  }\n  var _useMapInstance = useMapInstance(props, context),\n    _useMapInstance2 = _slicedToArray(_useMapInstance, 3),\n    map = _useMapInstance2[0],\n    mapRef = _useMapInstance2[1],\n    cameraStateRef = _useMapInstance2[2];\n  useMapCameraParams(map, cameraStateRef, props);\n  useMapEvents(map, props);\n  useMapOptions(map, props);\n  var isDeckGlControlled = useDeckGLCameraUpdate(map, props);\n  var isControlledExternally = !!props.controlled;\n  // disable interactions with the map for externally controlled maps\n  useEffect(function () {\n    if (!map) return;\n    // fixme: this doesn't seem to belong here (and it's mostly there for convenience anyway).\n    //   The reasoning is that a deck.gl canvas will be put on top of the map, rendering\n    //   any default map controls pretty much useless\n    if (isDeckGlControlled) {\n      map.setOptions({\n        disableDefaultUI: true\n      });\n    }\n    // disable all control-inputs when the map is controlled externally\n    if (isDeckGlControlled || isControlledExternally) {\n      map.setOptions({\n        gestureHandling: 'none',\n        keyboardShortcuts: false\n      });\n    }\n    return function () {\n      map.setOptions({\n        gestureHandling: props.gestureHandling,\n        keyboardShortcuts: props.keyboardShortcuts\n      });\n    };\n  }, [map, isDeckGlControlled, isControlledExternally, props.gestureHandling, props.keyboardShortcuts]);\n  // setup a stable cameraOptions object that can be used as dependency\n  var center = props.center ? toLatLngLiteral(props.center) : null;\n  var lat = null;\n  var lng = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat;\n    lng = center.lng;\n  }\n  var cameraOptions = useMemo(function () {\n    var _lat, _lng, _props$zoom, _props$heading, _props$tilt;\n    return {\n      center: {\n        lat: (_lat = lat) != null ? _lat : 0,\n        lng: (_lng = lng) != null ? _lng : 0\n      },\n      zoom: (_props$zoom = props.zoom) != null ? _props$zoom : 0,\n      heading: (_props$heading = props.heading) != null ? _props$heading : 0,\n      tilt: (_props$tilt = props.tilt) != null ? _props$tilt : 0\n    };\n  }, [lat, lng, props.zoom, props.heading, props.tilt]);\n  // externally controlled mode: reject all camera changes that don't correspond to changes in props\n  useLayoutEffect(function () {\n    if (!map || !isControlledExternally) return;\n    map.moveCamera(cameraOptions);\n    var listener = map.addListener('bounds_changed', function () {\n      map.moveCamera(cameraOptions);\n    });\n    return function () {\n      return listener.remove();\n    };\n  }, [map, isControlledExternally, cameraOptions]);\n  var combinedStyle = useMemo(function () {\n    return _extends({\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      // when using deckgl, the map should be sent to the back\n      zIndex: isDeckGlControlled ? -1 : 0\n    }, style);\n  }, [style, isDeckGlControlled]);\n  var contextValue = useMemo(function () {\n    return {\n      map: map\n    };\n  }, [map]);\n  if (loadingStatus === APILoadingStatus.AUTH_FAILURE) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: _extends({\n        position: 'relative'\n      }, className ? {} : combinedStyle),\n      className: className\n    }, /*#__PURE__*/React.createElement(AuthFailureMessage, null));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: mapRef,\n    \"data-testid\": 'map',\n    style: className ? undefined : combinedStyle,\n    className: className\n  }, id ? {\n    id: id\n  } : {}), map ? /*#__PURE__*/React.createElement(GoogleMapsContext.Provider, {\n    value: contextValue\n  }, children) : null);\n};\nMap.deckGLViewProps = true;\nvar shownMessages = new Set();\nfunction logErrorOnce() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var key = JSON.stringify(args);\n  if (!shownMessages.has(key)) {\n    var _console;\n    shownMessages.add(key);\n    (_console = console).error.apply(_console, args);\n  }\n}\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nvar useMap = function useMap() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var ctx = useContext(APIProviderContext);\n  var _ref4 = useContext(GoogleMapsContext) || {},\n    map = _ref4.map;\n  if (ctx === null) {\n    logErrorOnce('useMap(): failed to retrieve APIProviderContext. ' + 'Make sure that the <APIProvider> component exists and that the ' + 'component you are calling `useMap()` from is a sibling of the ' + '<APIProvider>.');\n    return null;\n  }\n  var mapInstances = ctx.mapInstances;\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n  // otherwise, return the closest ancestor\n  if (map) return map;\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\nfunction useMapsLibrary(name) {\n  var apiIsLoaded = useApiIsLoaded();\n  var ctx = useContext(APIProviderContext);\n  useEffect(function () {\n    if (!apiIsLoaded || !ctx) return;\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx, name]);\n  return (ctx == null ? void 0 : ctx.loadedLibraries[name]) || null;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Internally used to bind events to Maps JavaScript API objects.\n * @internal\n */\nfunction useMapsEventListener(target, name, callback) {\n  useEffect(function () {\n    if (!target || !name || !callback) return;\n    var listener = google.maps.event.addListener(target, name, callback);\n    return function () {\n      return listener.remove();\n    };\n  }, [target, name, callback]);\n}\n\n/**\n * Internally used to copy values from props into API-Objects\n * whenever they change.\n *\n * @example\n *   usePropBinding(marker, 'position', position);\n *\n * @internal\n */\nfunction usePropBinding(object, prop, value) {\n  useEffect(function () {\n    if (!object) return;\n    object[prop] = value;\n  }, [object, prop, value]);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Internally used to bind events to DOM nodes.\n * @internal\n */\nfunction useDomEventListener(target, name, callback) {\n  useEffect(function () {\n    if (!target || !name || !callback) return;\n    target.addEventListener(name, callback);\n    return function () {\n      return target.removeEventListener(name, callback);\n    };\n  }, [target, name, callback]);\n}\nvar _excluded$2 = [\"transform\"];\nfunction isAdvancedMarker(marker) {\n  return marker.content !== undefined;\n}\n/**\n * Copy of the `google.maps.CollisionBehavior` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nvar CollisionBehavior = {\n  REQUIRED: 'REQUIRED',\n  REQUIRED_AND_HIDES_OPTIONAL: 'REQUIRED_AND_HIDES_OPTIONAL',\n  OPTIONAL_AND_HIDES_LOWER_PRIORITY: 'OPTIONAL_AND_HIDES_LOWER_PRIORITY'\n};\nvar AdvancedMarkerContext = React.createContext(null);\n// [xPosition, yPosition] when the top left corner is [0, 0]\nvar AdvancedMarkerAnchorPoint = {\n  TOP_LEFT: ['0', '0'],\n  TOP_CENTER: ['50%', '0'],\n  TOP: ['50%', '0'],\n  TOP_RIGHT: ['100%', '0'],\n  LEFT_CENTER: ['0', '50%'],\n  LEFT_TOP: ['0', '0'],\n  LEFT: ['0', '50%'],\n  LEFT_BOTTOM: ['0', '100%'],\n  RIGHT_TOP: ['100%', '0'],\n  RIGHT: ['100%', '50%'],\n  RIGHT_CENTER: ['100%', '50%'],\n  RIGHT_BOTTOM: ['100%', '100%'],\n  BOTTOM_LEFT: ['0', '100%'],\n  BOTTOM_CENTER: ['50%', '100%'],\n  BOTTOM: ['50%', '100%'],\n  BOTTOM_RIGHT: ['100%', '100%'],\n  CENTER: ['50%', '50%']\n};\nvar MarkerContent = function MarkerContent(_ref5) {\n  var children = _ref5.children,\n    styles = _ref5.styles,\n    className = _ref5.className,\n    anchorPoint = _ref5.anchorPoint;\n  var _ref6 = anchorPoint != null ? anchorPoint : AdvancedMarkerAnchorPoint['BOTTOM'],\n    _ref7 = _slicedToArray(_ref6, 2),\n    xTranslation = _ref7[0],\n    yTranslation = _ref7[1];\n  var _ref = styles != null ? styles : {},\n    userTransform = _ref.transform,\n    restStyles = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  var transformStyle = \"translate(-\".concat(xTranslation, \", -\").concat(yTranslation, \")\");\n  // preserve extra transform styles that were set by the user\n  if (userTransform) {\n    transformStyle += \" \".concat(userTransform);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: _extends({\n      width: 'fit-content',\n      transformOrigin: \"\".concat(xTranslation, \" \").concat(yTranslation),\n      transform: transformStyle\n    }, restStyles)\n  }, children);\n};\nfunction useAdvancedMarker(props) {\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    marker = _useState10[0],\n    setMarker = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    contentContainer = _useState12[0],\n    setContentContainer = _useState12[1];\n  var map = useMap();\n  var markerLibrary = useMapsLibrary('marker');\n  var children = props.children,\n    onClick = props.onClick,\n    className = props.className,\n    onMouseEnter = props.onMouseEnter,\n    onMouseLeave = props.onMouseLeave,\n    onDrag = props.onDrag,\n    onDragStart = props.onDragStart,\n    onDragEnd = props.onDragEnd,\n    collisionBehavior = props.collisionBehavior,\n    clickable = props.clickable,\n    draggable = props.draggable,\n    position = props.position,\n    title = props.title,\n    zIndex = props.zIndex;\n  var numChildren = Children.count(children);\n  // create an AdvancedMarkerElement instance and add it to the map once available\n  useEffect(function () {\n    if (!map || !markerLibrary) return;\n    var newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n    setMarker(newMarker);\n    // create the container for marker content if there are children\n    var contentElement = null;\n    if (numChildren > 0) {\n      contentElement = document.createElement('div');\n      contentElement.style.width = '0';\n      contentElement.style.height = '0';\n      newMarker.content = contentElement;\n      setContentContainer(contentElement);\n    }\n    return function () {\n      var _contentElement;\n      newMarker.map = null;\n      (_contentElement = contentElement) == null || _contentElement.remove();\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChildren]);\n  // When no children are present we don't have our own wrapper div\n  // which usually gets the user provided className. In this case\n  // we set the className directly on the marker.content element that comes\n  // with the AdvancedMarker.\n  useEffect(function () {\n    if (!marker || !marker.content || numChildren > 0) return;\n    marker.content.className = className || '';\n  }, [marker, className, numChildren]);\n  // copy other props\n  usePropBinding(marker, 'position', position);\n  usePropBinding(marker, 'title', title != null ? title : '');\n  usePropBinding(marker, 'zIndex', zIndex);\n  usePropBinding(marker, 'collisionBehavior', collisionBehavior);\n  // set gmpDraggable from props (when unspecified, it's true if any drag-event\n  // callbacks are specified)\n  useEffect(function () {\n    if (!marker) return;\n    if (draggable !== undefined) marker.gmpDraggable = draggable;else if (onDrag || onDragStart || onDragEnd) marker.gmpDraggable = true;else marker.gmpDraggable = false;\n  }, [marker, draggable, onDrag, onDragEnd, onDragStart]);\n  // set gmpClickable from props (when unspecified, it's true if the onClick event\n  // callback is specified)\n  useEffect(function () {\n    if (!marker) return;\n    if (clickable !== undefined) marker.gmpClickable = clickable;else if (onClick) marker.gmpClickable = true;else marker.gmpClickable = false;\n  }, [marker, clickable, onClick]);\n  useMapsEventListener(marker, 'click', onClick);\n  useMapsEventListener(marker, 'drag', onDrag);\n  useMapsEventListener(marker, 'dragstart', onDragStart);\n  useMapsEventListener(marker, 'dragend', onDragEnd);\n  useDomEventListener(marker == null ? void 0 : marker.element, 'mouseenter', onMouseEnter);\n  useDomEventListener(marker == null ? void 0 : marker.element, 'mouseleave', onMouseLeave);\n  return [marker, contentContainer];\n}\nvar AdvancedMarker = forwardRef(function (props, ref) {\n  var children = props.children,\n    style = props.style,\n    className = props.className,\n    anchorPoint = props.anchorPoint;\n  var _useAdvancedMarker = useAdvancedMarker(props),\n    _useAdvancedMarker2 = _slicedToArray(_useAdvancedMarker, 2),\n    marker = _useAdvancedMarker2[0],\n    contentContainer = _useAdvancedMarker2[1];\n  var advancedMarkerContextValue = useMemo(function () {\n    return marker ? {\n      marker: marker\n    } : null;\n  }, [marker]);\n  useImperativeHandle(ref, function () {\n    return marker;\n  }, [marker]);\n  if (!contentContainer) return null;\n  return /*#__PURE__*/React.createElement(AdvancedMarkerContext.Provider, {\n    value: advancedMarkerContextValue\n  }, createPortal( /*#__PURE__*/React.createElement(MarkerContent, {\n    anchorPoint: anchorPoint,\n    styles: style,\n    className: className\n  }, children), contentContainer));\n});\nfunction useAdvancedMarkerRef() {\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    marker = _useState14[0],\n    setMarker = _useState14[1];\n  var refCallback = useCallback(function (m) {\n    setMarker(m);\n  }, []);\n  return [refCallback, marker];\n}\nfunction setValueForStyles(element, styles, prevStyles) {\n  if (styles != null && typeof styles !== 'object') {\n    throw new Error('The `style` prop expects a mapping from style properties to values, ' + \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" + 'using JSX.');\n  }\n  var elementStyle = element.style;\n  // without `prevStyles`, just set all values\n  if (prevStyles == null) {\n    if (styles == null) return;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) continue;\n      setValueForStyle(elementStyle, styleName, styles[styleName]);\n    }\n    return;\n  }\n  // unset all styles in `prevStyles` that aren't in `styles`\n  for (var _styleName in prevStyles) {\n    if (prevStyles.hasOwnProperty(_styleName) && (styles == null || !styles.hasOwnProperty(_styleName))) {\n      // Clear style\n      var isCustomProperty = _styleName.indexOf('--') === 0;\n      if (isCustomProperty) {\n        elementStyle.setProperty(_styleName, '');\n      } else if (_styleName === 'float') {\n        elementStyle.cssFloat = '';\n      } else {\n        elementStyle[_styleName] = '';\n      }\n    }\n  }\n  // only assign values from `styles` that are different from `prevStyles`\n  if (styles == null) return;\n  for (var _styleName2 in styles) {\n    var value = styles[_styleName2];\n    if (styles.hasOwnProperty(_styleName2) && prevStyles[_styleName2] !== value) {\n      setValueForStyle(elementStyle, _styleName2, value);\n    }\n  }\n}\nfunction setValueForStyle(elementStyle, styleName, value) {\n  var isCustomProperty = styleName.indexOf('--') === 0;\n  // falsy values will unset the style property\n  if (value == null || typeof value === 'boolean' || value === '') {\n    if (isCustomProperty) {\n      elementStyle.setProperty(styleName, '');\n    } else if (styleName === 'float') {\n      elementStyle.cssFloat = '';\n    } else {\n      elementStyle[styleName] = '';\n    }\n  }\n  // custom properties can't be directly assigned\n  else if (isCustomProperty) {\n    elementStyle.setProperty(styleName, value);\n  }\n  // numeric values are treated as 'px' unless the style property expects unitless numbers\n  else if (typeof value === 'number' && value !== 0 && !isUnitlessNumber(styleName)) {\n    elementStyle[styleName] = value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n  // everything else can just be assigned\n  else {\n    if (styleName === 'float') {\n      elementStyle.cssFloat = value;\n    } else {\n      elementStyle[styleName] = ('' + value).trim();\n    }\n  }\n}\n// CSS properties which accept numbers but are not in units of \"px\".\nvar unitlessNumbers = new Set(['animationIterationCount', 'aspectRatio', 'borderImageOutset', 'borderImageSlice', 'borderImageWidth', 'boxFlex', 'boxFlexGroup', 'boxOrdinalGroup', 'columnCount', 'columns', 'flex', 'flexGrow', 'flexPositive', 'flexShrink', 'flexNegative', 'flexOrder', 'gridArea', 'gridRow', 'gridRowEnd', 'gridRowSpan', 'gridRowStart', 'gridColumn', 'gridColumnEnd', 'gridColumnSpan', 'gridColumnStart', 'fontWeight', 'lineClamp', 'lineHeight', 'opacity', 'order', 'orphans', 'scale', 'tabSize', 'widows', 'zIndex', 'zoom', 'fillOpacity',\n// SVG-related properties\n'floodOpacity', 'stopOpacity', 'strokeDasharray', 'strokeDashoffset', 'strokeMiterlimit', 'strokeOpacity', 'strokeWidth']);\nfunction isUnitlessNumber(name) {\n  return unitlessNumbers.has(name);\n}\nvar _excluded$1 = [\"children\", \"headerContent\", \"style\", \"className\", \"pixelOffset\", \"anchor\", \"shouldFocus\", \"onClose\", \"onCloseClick\"];\n/**\n * Component to render an Info Window with the Maps JavaScript API\n */\nvar InfoWindow = function InfoWindow(props) {\n  var children = props.children,\n    headerContent = props.headerContent,\n    style = props.style,\n    className = props.className,\n    pixelOffset = props.pixelOffset,\n    anchor = props.anchor,\n    shouldFocus = props.shouldFocus,\n    onClose = props.onClose,\n    onCloseClick = props.onCloseClick,\n    infoWindowOptions = _objectWithoutPropertiesLoose(props, _excluded$1);\n  // ## create infowindow instance once the mapsLibrary is available.\n  var mapsLibrary = useMapsLibrary('maps');\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    infoWindow = _useState16[0],\n    setInfoWindow = _useState16[1];\n  var contentContainerRef = useRef(null);\n  var headerContainerRef = useRef(null);\n  useEffect(function () {\n    if (!mapsLibrary) return;\n    contentContainerRef.current = document.createElement('div');\n    headerContainerRef.current = document.createElement('div');\n    var opts = infoWindowOptions;\n    if (pixelOffset) {\n      opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n    }\n    if (headerContent) {\n      // if headerContent is specified as string we can directly forward it,\n      // otherwise we'll pass the element the portal will render into\n      opts.headerContent = typeof headerContent === 'string' ? headerContent : headerContainerRef.current;\n    }\n    // intentionally shadowing the state variables here\n    var infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n    infoWindow.setContent(contentContainerRef.current);\n    setInfoWindow(infoWindow);\n    // unmount: remove infoWindow and content elements (note: close is called in a different effect-cleanup)\n    return function () {\n      var _contentContainerRef$, _headerContainerRef$c;\n      infoWindow.setContent(null);\n      (_contentContainerRef$ = contentContainerRef.current) == null || _contentContainerRef$.remove();\n      (_headerContainerRef$c = headerContainerRef.current) == null || _headerContainerRef$c.remove();\n      contentContainerRef.current = null;\n      headerContainerRef.current = null;\n      setInfoWindow(null);\n    };\n  },\n  // `infoWindowOptions` and other props are missing from dependencies:\n  //\n  // We don't want to re-create the infowindow instance\n  // when the options change.\n  // Updating the options is handled in the useEffect below.\n  //\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [mapsLibrary]);\n  // ## update className and styles for `contentContainer`\n  // stores previously applied style properties, so they can be removed when unset\n  var prevStyleRef = useRef(null);\n  useEffect(function () {\n    if (!infoWindow || !contentContainerRef.current) return;\n    setValueForStyles(contentContainerRef.current, style || null, prevStyleRef.current);\n    prevStyleRef.current = style || null;\n    if (className !== contentContainerRef.current.className) contentContainerRef.current.className = className || '';\n  }, [infoWindow, className, style]);\n  // ## update options\n  useDeepCompareEffect(function () {\n    if (!infoWindow) return;\n    var opts = infoWindowOptions;\n    if (!pixelOffset) {\n      opts.pixelOffset = null;\n    } else {\n      opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n    }\n    if (!headerContent) {\n      opts.headerContent = null;\n    } else {\n      opts.headerContent = typeof headerContent === 'string' ? headerContent : headerContainerRef.current;\n    }\n    infoWindow.setOptions(infoWindowOptions);\n  },\n  // dependency `infoWindow` isn't needed since options are also passed\n  // to the constructor when a new infoWindow is created.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [infoWindowOptions, pixelOffset, headerContent]);\n  // ## bind event handlers\n  useMapsEventListener(infoWindow, 'close', onClose);\n  useMapsEventListener(infoWindow, 'closeclick', onCloseClick);\n  // ## open info window when content and map are available\n  var map = useMap();\n  useEffect(function () {\n    // `anchor === null` means an anchor is defined but not ready yet.\n    if (!map || !infoWindow || anchor === null) return;\n    var isOpenedWithAnchor = !!anchor;\n    var openOptions = {\n      map: map\n    };\n    if (anchor) {\n      openOptions.anchor = anchor;\n      // Only do the infowindow adjusting when dealing with an AdvancedMarker\n      if (isAdvancedMarker(anchor) && anchor.content instanceof Element) {\n        var _anchor$content$getBo;\n        var wrapperBcr = (_anchor$content$getBo = anchor.content.getBoundingClientRect()) != null ? _anchor$content$getBo : {};\n        var anchorWidth = wrapperBcr.width,\n          anchorHeight = wrapperBcr.height;\n        // This checks whether or not the anchor has custom content with our own\n        // div wrapper. If not, that means we have a regular AdvancedMarker without any children.\n        // In that case we do not want to adjust the infowindow since it is all handled correctly\n        // by the Google Maps API.\n        if (anchorWidth === 0 && anchorHeight === 0) {\n          // We can safely typecast here since we control that element and we know that\n          // it is a div\n          var anchorDomContent = anchor.content.firstElementChild;\n          var contentBcr = anchorDomContent == null ? void 0 : anchorDomContent.getBoundingClientRect();\n          // center infowindow above marker\n          var anchorOffsetX = contentBcr.x - wrapperBcr.x + contentBcr.width / 2;\n          var anchorOffsetY = contentBcr.y - wrapperBcr.y;\n          var opts = infoWindowOptions;\n          opts.pixelOffset = new google.maps.Size(pixelOffset ? pixelOffset[0] + anchorOffsetX : anchorOffsetX, pixelOffset ? pixelOffset[1] + anchorOffsetY : anchorOffsetY);\n          infoWindow.setOptions(opts);\n        }\n      }\n    }\n    if (shouldFocus !== undefined) {\n      openOptions.shouldFocus = shouldFocus;\n    }\n    infoWindow.open(openOptions);\n    return function () {\n      // Note: when the infowindow has an anchor, it will automatically show up again when the\n      // anchor was removed from the map before infoWindow.close() is called but the it gets\n      // added back to the map after that.\n      // More information here: https://issuetracker.google.com/issues/343750849\n      if (isOpenedWithAnchor) infoWindow.set('anchor', null);\n      infoWindow.close();\n    };\n  }, [infoWindow, anchor, map, shouldFocus, infoWindowOptions, pixelOffset]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, contentContainerRef.current && createPortal(children, contentContainerRef.current), headerContainerRef.current !== null && createPortal(headerContent, headerContainerRef.current));\n};\n\n/**\n * Copy of the `google.maps.ControlPosition` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nvar ControlPosition = {\n  TOP_LEFT: 1,\n  TOP_CENTER: 2,\n  TOP: 2,\n  TOP_RIGHT: 3,\n  LEFT_CENTER: 4,\n  LEFT_TOP: 5,\n  LEFT: 5,\n  LEFT_BOTTOM: 6,\n  RIGHT_TOP: 7,\n  RIGHT: 7,\n  RIGHT_CENTER: 8,\n  RIGHT_BOTTOM: 9,\n  BOTTOM_LEFT: 10,\n  BOTTOM_CENTER: 11,\n  BOTTOM: 11,\n  BOTTOM_RIGHT: 12,\n  CENTER: 13,\n  BLOCK_START_INLINE_START: 14,\n  BLOCK_START_INLINE_CENTER: 15,\n  BLOCK_START_INLINE_END: 16,\n  INLINE_START_BLOCK_CENTER: 17,\n  INLINE_START_BLOCK_START: 18,\n  INLINE_START_BLOCK_END: 19,\n  INLINE_END_BLOCK_START: 20,\n  INLINE_END_BLOCK_CENTER: 21,\n  INLINE_END_BLOCK_END: 22,\n  BLOCK_END_INLINE_START: 23,\n  BLOCK_END_INLINE_CENTER: 24,\n  BLOCK_END_INLINE_END: 25\n};\nvar MapControl = function MapControl(_ref8) {\n  var children = _ref8.children,\n    position = _ref8.position;\n  var controlContainer = useMemo(function () {\n    return document.createElement('div');\n  }, []);\n  var map = useMap();\n  useEffect(function () {\n    if (!map) return;\n    var controls = map.controls[position];\n    controls.push(controlContainer);\n    return function () {\n      var controlsArray = controls.getArray();\n      // controlsArray could be undefined if the map is in an undefined state (e.g. invalid API-key, see #276\n      if (!controlsArray) return;\n      var index = controlsArray.indexOf(controlContainer);\n      controls.removeAt(index);\n    };\n  }, [controlContainer, map, position]);\n  return createPortal(children, controlContainer);\n};\nvar _excluded = [\"onClick\", \"onDrag\", \"onDragStart\", \"onDragEnd\", \"onMouseOver\", \"onMouseOut\"];\nfunction useMarker(props) {\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    marker = _useState18[0],\n    setMarker = _useState18[1];\n  var map = useMap();\n  var onClick = props.onClick,\n    onDrag = props.onDrag,\n    onDragStart = props.onDragStart,\n    onDragEnd = props.onDragEnd,\n    onMouseOver = props.onMouseOver,\n    onMouseOut = props.onMouseOut,\n    markerOptions = _objectWithoutPropertiesLoose(props, _excluded);\n  var position = markerOptions.position,\n    draggable = markerOptions.draggable;\n  // create marker instance and add to the map once the map is available\n  useEffect(function () {\n    if (!map) {\n      if (map === undefined) console.error('<Marker> has to be inside a Map component.');\n      return;\n    }\n    var newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n    return function () {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n    // We do not want to re-render the whole marker when the options change.\n    // Marker options update is handled in a useEffect below.\n    // Excluding markerOptions from dependency array on purpose here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(function () {\n    if (!marker) return;\n    var m = marker;\n    // Add event listeners\n    var gme = google.maps.event;\n    if (onClick) gme.addListener(m, 'click', onClick);\n    if (onDrag) gme.addListener(m, 'drag', onDrag);\n    if (onDragStart) gme.addListener(m, 'dragstart', onDragStart);\n    if (onDragEnd) gme.addListener(m, 'dragend', onDragEnd);\n    if (onMouseOver) gme.addListener(m, 'mouseover', onMouseOver);\n    if (onMouseOut) gme.addListener(m, 'mouseout', onMouseOut);\n    marker.setDraggable(Boolean(draggable));\n    return function () {\n      gme.clearInstanceListeners(m);\n    };\n  }, [marker, draggable, onClick, onDrag, onDragStart, onDragEnd, onMouseOver, onMouseOut]);\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(function () {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n  // update position when changed\n  useEffect(function () {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n  return marker;\n}\n/**\n * Component to render a marker on a map\n */\nvar Marker = forwardRef(function (props, ref) {\n  var marker = useMarker(props);\n  useImperativeHandle(ref, function () {\n    return marker;\n  }, [marker]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n});\nfunction useMarkerRef() {\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    marker = _useState20[0],\n    setMarker = _useState20[1];\n  var refCallback = useCallback(function (m) {\n    setMarker(m);\n  }, []);\n  return [refCallback, marker];\n}\n\n/**\n * Component to configure the appearance of an AdvancedMarker\n */\nvar Pin = function Pin(props) {\n  var _useContext;\n  var advancedMarker = (_useContext = useContext(AdvancedMarkerContext)) == null ? void 0 : _useContext.marker;\n  var glyphContainer = useMemo(function () {\n    return document.createElement('div');\n  }, []);\n  // Create Pin View instance\n  useEffect(function () {\n    var _advancedMarker$conte;\n    if (!advancedMarker) {\n      if (advancedMarker === undefined) {\n        console.error('The <Pin> component can only be used inside <AdvancedMarker>.');\n      }\n      return;\n    }\n    if (props.glyph && props.children) {\n      logErrorOnce('The <Pin> component only uses children to render the glyph if both the glyph property and children are present.');\n    }\n    if (Children.count(props.children) > 1) {\n      logErrorOnce('Passing multiple children to the <Pin> component might lead to unexpected results.');\n    }\n    var pinViewOptions = _extends({}, props);\n    var pinElement = new google.maps.marker.PinElement(pinViewOptions);\n    // Set glyph to glyph container if children are present (rendered via portal).\n    // If both props.glyph and props.children are present, props.children takes priority.\n    if (props.children) {\n      pinElement.glyph = glyphContainer;\n    }\n    // Set content of Advanced Marker View to the Pin View element\n    var markerContent = (_advancedMarker$conte = advancedMarker.content) == null ? void 0 : _advancedMarker$conte.firstChild;\n    while (markerContent != null && markerContent.firstChild) {\n      markerContent.removeChild(markerContent.firstChild);\n    }\n    if (markerContent) {\n      markerContent.appendChild(pinElement.element);\n    }\n  }, [advancedMarker, glyphContainer, props]);\n  return createPortal(props.children, glyphContainer);\n};\nvar mapLinear = function mapLinear(x, a1, a2, b1, b2) {\n  return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n};\nvar getMapMaxTilt = function getMapMaxTilt(zoom) {\n  if (zoom <= 10) {\n    return 30;\n  }\n  if (zoom >= 15.5) {\n    return 67.5;\n  }\n  // range [10...14]\n  if (zoom <= 14) {\n    return mapLinear(zoom, 10, 14, 30, 45);\n  }\n  // range [14...15.5]\n  return mapLinear(zoom, 14, 15.5, 45, 67.5);\n};\n/**\n * Function to limit the tilt range of the Google map when updating the view state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar limitTiltRange = function limitTiltRange(_ref9) {\n  var viewState = _ref9.viewState;\n  var pitch = viewState.pitch;\n  var gmZoom = viewState.zoom + 1;\n  var maxTilt = getMapMaxTilt(gmZoom);\n  return _extends({}, viewState, {\n    fovy: 25,\n    pitch: Math.min(maxTilt, pitch)\n  });\n};\nexport { APILoadingStatus, APIProvider, APIProviderContext, AdvancedMarker, AdvancedMarkerAnchorPoint, AdvancedMarkerContext, CollisionBehavior, ColorScheme, ControlPosition, GoogleMapsContext, InfoWindow, Map, MapControl, Marker, Pin, RenderingType, isAdvancedMarker, isLatLngLiteral, latLngEquals, limitTiltRange, toLatLngLiteral, useAdvancedMarkerRef, useApiIsLoaded, useApiLoadingStatus, useMap, useMapsLibrary, useMarkerRef };","map":{"version":3,"names":["APILoadingStatus","NOT_LOADED","LOADING","LOADED","FAILED","AUTH_FAILURE","MAPS_API_BASE_URL","GoogleMapsApiLoader","_classCallCheck","_createClass","key","value","_load","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","onLoadingStatusChange","_window$google","libraries","serializedParams","librariesToLoad","wrap","_callee$","_context","prev","next","split","serializeParams","listeners","push","window","google","maps","importLibrary","serializedApiParams","loadingStatus","notifyLoadingStatusListeners","initImportLibrary","console","warn","concat","_toConsumableArray","Promise","all","map","name","stop","load","_x","_x2","apply","arguments","v","language","region","authReferrerPolicy","solutionChannel","join","_this","error","apiPromise","loadApi","resolve","reject","_document$querySelect","scriptElement","document","createElement","urlParams","URLSearchParams","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","urlParamName","replace","t","toLowerCase","set","async","src","toString","nonce","querySelector","onerror","Error","__googleMapsCallback__","gm_authFailure","head","append","libraryName","then","_iterator","_createForOfIteratorHelper","_step","s","n","done","fn","err","e","f","DEFAULT_SOLUTION_CHANNEL","APIProviderContext","React","createContext","useMapInstances","_useState","useState","_useState2","mapInstances","setMapInstances","addMapInstance","mapInstance","id","undefined","instances","_extends","_defineProperty","removeMapInstance","_ref","remaining","_objectWithoutPropertiesLoose","_toPropertyKey","clearMapInstances","useGoogleMapsApiLoader","props","onLoad","onError","apiKey","version","_props$libraries","otherApiParams","_excluded$4","_useState3","_useState4","status","setStatus","_useReducer","useReducer","loadedLibraries","action","_useReducer2","addLoadedLibrary","librariesString","useMemo","JSON","stringify","useCallback","_ref2","_callee2","_google","res","_callee2$","_context2","abrupt","sent","_x3","useEffect","_callee3","_i2","_arr","_callee3$","_context3","t0","APIProvider","children","loaderProps","_excluded2$1","_useMapInstances","_useGoogleMapsApiLoad","contextValue","Provider","useMapEvents","_loop","propName","_eventPropNames","_i3","handler","eventType","propNameToEventType","listener","event","addListener","ev","createMapEvent","remove","eventPropNames","type","srcEvent","detail","stoppable","cameraEventTypes","includes","camEvent","center","getCenter","zoom","getZoom","heading","getHeading","tilt","getTilt","bounds","getBounds","Number","isFinite","toJSON","lat","lng","north","east","south","west","mouseEventTypes","_srcEvent$latLng","mouseEvent","domEvent","latLng","placeId","onBoundsChanged","onCenterChanged","onClick","onContextmenu","onDblclick","onDrag","onDragend","onDragstart","onHeadingChanged","onIdle","onIsFractionalZoomEnabledChanged","onMapCapabilitiesChanged","onMapTypeIdChanged","onMousemove","onMouseout","onMouseover","onProjectionChanged","onRenderingTypeChanged","onTilesLoaded","onTiltChanged","onZoomChanged","onCameraChanged","keys","useDeepCompareEffect","effect","deps","ref","useRef","current","isDeepEqual","mapOptionKeys","Set","useMapOptions","mapProps","mapOptions","_i4","_keys","has","setOptions","useApiLoadingStatus","_useContext","useContext","useDeckGLCameraUpdate","viewport","viewState","isDeckGlControlled","useLayoutEffect","latitude","longitude","bearing","pitch","moveCamera","isLatLngLiteral","obj","latLngEquals","a","b","A","toLatLngLiteral","B","useMapCameraParams","cameraStateRef","nextCamera","needsUpdate","AuthFailureMessage","style","position","top","left","bottom","right","zIndex","display","flexFlow","textAlign","justifyContent","fontSize","color","background","padding","useCallbackRef","_useState5","_useState6","el","setEl","useApiIsLoaded","useForceUpdate","_useReducer3","x","_useReducer4","forceUpdate","handleBoundsChange","assign","useTrackedCameraStateRef","CachedMapStack","pop","useMapInstance","context","apiIsLoaded","_useState7","_useState8","setMap","_useCallbackRef","_useCallbackRef2","container","containerRef","defaultBounds","defaultCenter","defaultZoom","defaultHeading","defaultTilt","reuseMaps","renderingType","colorScheme","_excluded$3","hasZoom","hasCenter","_i5","_Object$keys","savedMapStateRef","mapId","cacheKey","mapDiv","getDiv","appendChild","setTimeout","setCenter","height","Map","defBounds","_excluded2","fitBounds","_savedMapStateRef$cur","savedMapId","savedCameraState","cameraState","clearInstanceListeners","GoogleMapsContext","ColorScheme","DARK","LIGHT","FOLLOW_SYSTEM","RenderingType","VECTOR","RASTER","UNINITIALIZED","className","_useMapInstance","_useMapInstance2","mapRef","isControlledExternally","controlled","disableDefaultUI","gestureHandling","keyboardShortcuts","cameraOptions","_lat","_lng","_props$zoom","_props$heading","_props$tilt","combinedStyle","width","deckGLViewProps","shownMessages","logErrorOnce","_len","args","Array","_key","_console","add","useMap","ctx","_ref4","useMapsLibrary","useMapsEventListener","target","callback","usePropBinding","object","prop","useDomEventListener","addEventListener","removeEventListener","isAdvancedMarker","marker","content","CollisionBehavior","REQUIRED","REQUIRED_AND_HIDES_OPTIONAL","OPTIONAL_AND_HIDES_LOWER_PRIORITY","AdvancedMarkerContext","AdvancedMarkerAnchorPoint","TOP_LEFT","TOP_CENTER","TOP","TOP_RIGHT","LEFT_CENTER","LEFT_TOP","LEFT","LEFT_BOTTOM","RIGHT_TOP","RIGHT","RIGHT_CENTER","RIGHT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM","BOTTOM_RIGHT","CENTER","MarkerContent","_ref5","styles","anchorPoint","_ref6","_ref7","xTranslation","yTranslation","userTransform","transform","restStyles","_excluded$2","transformStyle","transformOrigin","useAdvancedMarker","_useState9","_useState10","setMarker","_useState11","_useState12","contentContainer","setContentContainer","markerLibrary","onMouseEnter","onMouseLeave","onDragStart","onDragEnd","collisionBehavior","clickable","draggable","title","numChildren","Children","count","newMarker","AdvancedMarkerElement","contentElement","_contentElement","gmpDraggable","gmpClickable","element","AdvancedMarker","forwardRef","_useAdvancedMarker","_useAdvancedMarker2","advancedMarkerContextValue","useImperativeHandle","createPortal","useAdvancedMarkerRef","_useState13","_useState14","refCallback","m","setValueForStyles","prevStyles","elementStyle","styleName","hasOwnProperty","setValueForStyle","isCustomProperty","indexOf","setProperty","cssFloat","isUnitlessNumber","trim","unitlessNumbers","InfoWindow","headerContent","pixelOffset","anchor","shouldFocus","onClose","onCloseClick","infoWindowOptions","_excluded$1","mapsLibrary","_useState15","_useState16","infoWindow","setInfoWindow","contentContainerRef","headerContainerRef","opts","Size","setContent","_contentContainerRef$","_headerContainerRef$c","prevStyleRef","isOpenedWithAnchor","openOptions","Element","_anchor$content$getBo","wrapperBcr","getBoundingClientRect","anchorWidth","anchorHeight","anchorDomContent","firstElementChild","contentBcr","anchorOffsetX","anchorOffsetY","y","open","close","Fragment","ControlPosition","BLOCK_START_INLINE_START","BLOCK_START_INLINE_CENTER","BLOCK_START_INLINE_END","INLINE_START_BLOCK_CENTER","INLINE_START_BLOCK_START","INLINE_START_BLOCK_END","INLINE_END_BLOCK_START","INLINE_END_BLOCK_CENTER","INLINE_END_BLOCK_END","BLOCK_END_INLINE_START","BLOCK_END_INLINE_CENTER","BLOCK_END_INLINE_END","MapControl","_ref8","controlContainer","controls","controlsArray","getArray","index","removeAt","useMarker","_useState17","_useState18","onMouseOver","onMouseOut","markerOptions","_excluded","Marker","gme","setDraggable","Boolean","setPosition","useMarkerRef","_useState19","_useState20","Pin","advancedMarker","glyphContainer","_advancedMarker$conte","glyph","pinViewOptions","pinElement","PinElement","markerContent","firstChild","removeChild","mapLinear","a1","a2","b1","b2","getMapMaxTilt","limitTiltRange","_ref9","gmZoom","maxTilt","fovy","Math","min"],"sources":["C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\api-loading-status.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\google-maps-api-loader.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\api-provider.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\use-map-events.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\use-deep-compare-effect.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\use-map-options.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-api-loading-status.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\use-deckgl-camera-update.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\lat-lng-utils.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\use-map-camera-params.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\auth-failure-message.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\use-callback-ref.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-api-is-loaded.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\use-force-update.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\use-tracked-camera-state-ref.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\use-map-instance.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map\\index.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\errors.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-map.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-maps-library.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-maps-event-listener.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-prop-binding.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\hooks\\use-dom-event-listener.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\advanced-marker.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\set-value-for-styles.ts","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\info-window.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\map-control.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\marker.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\components\\pin.tsx","C:\\Users\\ereh0\\OneDrive\\문서\\개발\\food_script_2.0.0\\Develop\\Frontend\\MainService_LocateSeacher_onprocess\\node_modules\\@vis.gl\\react-google-maps\\src\\libraries\\limit-tilt-range.ts"],"sourcesContent":["export const APILoadingStatus = {\n  NOT_LOADED: 'NOT_LOADED',\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  FAILED: 'FAILED',\n  AUTH_FAILURE: 'AUTH_FAILURE'\n};\nexport type APILoadingStatus =\n  (typeof APILoadingStatus)[keyof typeof APILoadingStatus];\n","import {APILoadingStatus} from './api-loading-status';\n\nexport type ApiParams = {\n  key: string;\n  v?: string;\n  language?: string;\n  region?: string;\n  libraries?: string;\n  solutionChannel?: string;\n  authReferrerPolicy?: string;\n};\n\ntype LoadingStatusCallback = (status: APILoadingStatus) => void;\n\nconst MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nexport class GoogleMapsApiLoader {\n  /**\n   * The current loadingStatus of the API.\n   */\n  public static loadingStatus: APILoadingStatus = APILoadingStatus.NOT_LOADED;\n\n  /**\n   * The parameters used for first loading the API.\n   */\n  public static serializedApiParams?: string;\n\n  /**\n   * A list of functions to be notified when the loading status changes.\n   */\n  private static listeners: LoadingStatusCallback[] = [];\n\n  /**\n   * Loads the Maps JavaScript API with the specified parameters.\n   * Since the Maps library can only be loaded once per page, this will\n   * produce a warning when called multiple times with different\n   * parameters.\n   *\n   * The returned promise resolves when loading completes\n   * and rejects in case of an error or when the loading was aborted.\n   */\n  static async load(\n    params: ApiParams,\n    onLoadingStatusChange: (status: APILoadingStatus) => void\n  ): Promise<void> {\n    const libraries = params.libraries ? params.libraries.split(',') : [];\n    const serializedParams = this.serializeParams(params);\n\n    this.listeners.push(onLoadingStatusChange);\n\n    // Note: if `google.maps.importLibrary` has been defined externally, we\n    //   assume that loading is complete and successful.\n    //   If it was defined by a previous call to this method, a warning\n    //   message is logged if there are differences in api-parameters used\n    //   for both calls.\n\n    if (window.google?.maps?.importLibrary as unknown) {\n      // no serialized parameters means it was loaded externally\n      if (!this.serializedApiParams) {\n        this.loadingStatus = APILoadingStatus.LOADED;\n      }\n      this.notifyLoadingStatusListeners();\n    } else {\n      this.serializedApiParams = serializedParams;\n      this.initImportLibrary(params);\n    }\n\n    if (\n      this.serializedApiParams &&\n      this.serializedApiParams !== serializedParams\n    ) {\n      console.warn(\n        `[google-maps-api-loader] The maps API has already been loaded ` +\n          `with different parameters and will not be loaded again. Refresh the ` +\n          `page for new values to have effect.`\n      );\n    }\n\n    const librariesToLoad = ['maps', ...libraries];\n    await Promise.all(\n      librariesToLoad.map(name => google.maps.importLibrary(name))\n    );\n  }\n\n  /**\n   * Serialize the paramters used to load the library for easier comparison.\n   */\n  private static serializeParams(params: ApiParams): string {\n    return [\n      params.v,\n      params.key,\n      params.language,\n      params.region,\n      params.authReferrerPolicy,\n      params.solutionChannel\n    ].join('/');\n  }\n\n  /**\n   * Creates the global `google.maps.importLibrary` function for bootstrapping.\n   * This is essentially a formatted version of the dynamic loading script\n   * from the official documentation with some minor adjustments.\n   *\n   * The created importLibrary function will load the Google Maps JavaScript API,\n   * which will then replace the `google.maps.importLibrary` function with the full\n   * implementation.\n   *\n   * @see https://developers.google.com/maps/documentation/javascript/load-maps-js-api#dynamic-library-import\n   */\n  private static initImportLibrary(params: ApiParams) {\n    if (!window.google) window.google = {} as never;\n    if (!window.google.maps) window.google.maps = {} as never;\n\n    if (window.google.maps['importLibrary']) {\n      console.error(\n        '[google-maps-api-loader-internal]: initImportLibrary must only be called once'\n      );\n\n      return;\n    }\n\n    let apiPromise: Promise<void> | null = null;\n\n    const loadApi = () => {\n      if (apiPromise) return apiPromise;\n\n      apiPromise = new Promise((resolve, reject) => {\n        const scriptElement = document.createElement('script');\n        const urlParams = new URLSearchParams();\n\n        for (const [key, value] of Object.entries(params)) {\n          const urlParamName = key.replace(\n            /[A-Z]/g,\n            t => '_' + t[0].toLowerCase()\n          );\n          urlParams.set(urlParamName, value);\n        }\n        urlParams.set('loading', 'async');\n        urlParams.set('callback', '__googleMapsCallback__');\n\n        scriptElement.async = true;\n        scriptElement.src = MAPS_API_BASE_URL + `?` + urlParams.toString();\n        scriptElement.nonce =\n          (document.querySelector('script[nonce]') as HTMLScriptElement)\n            ?.nonce || '';\n\n        scriptElement.onerror = () => {\n          this.loadingStatus = APILoadingStatus.FAILED;\n          this.notifyLoadingStatusListeners();\n          reject(new Error('The Google Maps JavaScript API could not load.'));\n        };\n\n        window.__googleMapsCallback__ = () => {\n          this.loadingStatus = APILoadingStatus.LOADED;\n          this.notifyLoadingStatusListeners();\n          resolve();\n        };\n\n        window.gm_authFailure = () => {\n          this.loadingStatus = APILoadingStatus.AUTH_FAILURE;\n          this.notifyLoadingStatusListeners();\n        };\n\n        this.loadingStatus = APILoadingStatus.LOADING;\n        this.notifyLoadingStatusListeners();\n\n        document.head.append(scriptElement);\n      });\n\n      return apiPromise;\n    };\n\n    // for the first load, we declare an importLibrary function that will\n    // be overwritten once the api is loaded.\n    google.maps.importLibrary = libraryName =>\n      loadApi().then(() => google.maps.importLibrary(libraryName));\n  }\n\n  /**\n   * Calls all registered loadingStatusListeners after a status update.\n   */\n  private static notifyLoadingStatusListeners() {\n    for (const fn of this.listeners) {\n      fn(this.loadingStatus);\n    }\n  }\n}\n\n// Declare global maps callback functions\ndeclare global {\n  interface Window {\n    __googleMapsCallback__?: () => void;\n    gm_authFailure?: () => void;\n  }\n}\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from 'react';\n\nimport {\n  ApiParams,\n  GoogleMapsApiLoader\n} from '../libraries/google-maps-api-loader';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n\ntype ImportLibraryFunction = typeof google.maps.importLibrary;\ntype GoogleMapsLibrary = Awaited<ReturnType<ImportLibraryFunction>>;\ntype LoadedLibraries = {[name: string]: GoogleMapsLibrary};\n\nexport interface APIProviderContextValue {\n  status: APILoadingStatus;\n  loadedLibraries: LoadedLibraries;\n  importLibrary: typeof google.maps.importLibrary;\n  mapInstances: Record<string, google.maps.Map>;\n  addMapInstance: (map: google.maps.Map, id?: string) => void;\n  removeMapInstance: (id?: string) => void;\n  clearMapInstances: () => void;\n}\n\nconst DEFAULT_SOLUTION_CHANNEL = 'GMP_visgl_rgmlibrary_v1_default';\n\nexport const APIProviderContext =\n  React.createContext<APIProviderContextValue | null>(null);\n\nexport type APIProviderProps = {\n  /**\n   * apiKey must be provided to load the Google Maps JavaScript API. To create an API key, see: https://developers.google.com/maps/documentation/javascript/get-api-key\n   * Part of:\n   */\n  apiKey: string;\n  /**\n   * A custom id to reference the script tag can be provided. The default is set to 'google-maps-api'\n   * @default 'google-maps-api'\n   */\n  libraries?: Array<string>;\n  /**\n   * A specific version of the Google Maps JavaScript API can be used.\n   * Read more about versioning: https://developers.google.com/maps/documentation/javascript/versions\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  version?: string;\n  /**\n   * Sets the map to a specific region.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  region?: string;\n  /**\n   * Use a specific language for the map.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  language?: string;\n  /**\n   * auth_referrer_policy can be set to 'origin'.\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  authReferrerPolicy?: string;\n  /**\n   * To understand usage and ways to improve our solutions, Google includes the\n   * `solution_channel` query parameter in API calls to gather information about\n   * code usage. You may opt out at any time by setting this attribute to an\n   * empty string. Read more in the\n   * [documentation](https://developers.google.com/maps/reporting-and-monitoring/reporting#solutions-usage).\n   */\n  solutionChannel?: string;\n  /**\n   * A function that can be used to execute code after the Google Maps JavaScript API has been loaded.\n   */\n  onLoad?: () => void;\n  /**\n   * A function that will be called if there was an error when loading the Google Maps JavaScript API.\n   */\n  onError?: (error: unknown) => void;\n};\n\n/**\n * local hook to set up the map-instance management context.\n */\nfunction useMapInstances() {\n  const [mapInstances, setMapInstances] = useState<\n    Record<string, google.maps.Map>\n  >({});\n\n  const addMapInstance = (mapInstance: google.maps.Map, id = 'default') => {\n    setMapInstances(instances => ({...instances, [id]: mapInstance}));\n  };\n\n  const removeMapInstance = (id = 'default') => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(({[id]: _, ...remaining}) => remaining);\n  };\n\n  const clearMapInstances = () => {\n    setMapInstances({});\n  };\n\n  return {mapInstances, addMapInstance, removeMapInstance, clearMapInstances};\n}\n\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props: APIProviderProps) {\n  const {\n    onLoad,\n    onError,\n    apiKey,\n    version,\n    libraries = [],\n    ...otherApiParams\n  } = props;\n\n  const [status, setStatus] = useState<APILoadingStatus>(\n    GoogleMapsApiLoader.loadingStatus\n  );\n  const [loadedLibraries, addLoadedLibrary] = useReducer(\n    (\n      loadedLibraries: LoadedLibraries,\n      action: {name: keyof LoadedLibraries; value: LoadedLibraries[string]}\n    ) => {\n      return loadedLibraries[action.name]\n        ? loadedLibraries\n        : {...loadedLibraries, [action.name]: action.value};\n    },\n    {}\n  );\n\n  const librariesString = useMemo(() => libraries?.join(','), [libraries]);\n  const serializedParams = useMemo(\n    () => JSON.stringify({apiKey, version, ...otherApiParams}),\n    [apiKey, version, otherApiParams]\n  );\n\n  const importLibrary: typeof google.maps.importLibrary = useCallback(\n    async (name: string) => {\n      if (loadedLibraries[name]) {\n        return loadedLibraries[name];\n      }\n\n      if (!google?.maps?.importLibrary) {\n        throw new Error(\n          '[api-provider-internal] importLibrary was called before ' +\n            'google.maps.importLibrary was defined.'\n        );\n      }\n\n      const res = await window.google.maps.importLibrary(name);\n      addLoadedLibrary({name, value: res});\n\n      return res;\n    },\n    [loadedLibraries]\n  );\n\n  useEffect(\n    () => {\n      (async () => {\n        try {\n          const params: ApiParams = {key: apiKey, ...otherApiParams};\n          if (version) params.v = version;\n          if (librariesString?.length > 0) params.libraries = librariesString;\n\n          if (params.solutionChannel === undefined)\n            params.solutionChannel = DEFAULT_SOLUTION_CHANNEL;\n          else if (params.solutionChannel === '') delete params.solutionChannel;\n\n          await GoogleMapsApiLoader.load(params, status => setStatus(status));\n\n          for (const name of ['core', 'maps', ...libraries]) {\n            await importLibrary(name);\n          }\n\n          if (onLoad) {\n            onLoad();\n          }\n        } catch (error) {\n          if (onError) {\n            onError(error);\n          } else {\n            console.error(\n              '<ApiProvider> failed to load the Google Maps JavaScript API',\n              error\n            );\n          }\n        }\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [apiKey, librariesString, serializedParams]\n  );\n\n  return {\n    status,\n    loadedLibraries,\n    importLibrary\n  };\n}\n\n/**\n * Component to wrap the components from this library and load the Google Maps JavaScript API\n */\nexport const APIProvider = (\n  props: PropsWithChildren<APIProviderProps>\n): ReactElement | null => {\n  const {children, ...loaderProps} = props;\n  const {mapInstances, addMapInstance, removeMapInstance, clearMapInstances} =\n    useMapInstances();\n\n  const {status, loadedLibraries, importLibrary} =\n    useGoogleMapsApiLoader(loaderProps);\n\n  const contextValue: APIProviderContextValue = useMemo(\n    () => ({\n      mapInstances,\n      addMapInstance,\n      removeMapInstance,\n      clearMapInstances,\n      status,\n      loadedLibraries,\n      importLibrary\n    }),\n    [\n      mapInstances,\n      addMapInstance,\n      removeMapInstance,\n      clearMapInstances,\n      status,\n      loadedLibraries,\n      importLibrary\n    ]\n  );\n\n  return (\n    <APIProviderContext.Provider value={contextValue}>\n      {children}\n    </APIProviderContext.Provider>\n  );\n};\n","import {useEffect} from 'react';\n\n/**\n * Handlers for all events that could be emitted by map-instances.\n */\nexport type MapEventProps = Partial<{\n  // map view state events\n  onBoundsChanged: (event: MapCameraChangedEvent) => void;\n  onCenterChanged: (event: MapCameraChangedEvent) => void;\n  onHeadingChanged: (event: MapCameraChangedEvent) => void;\n  onTiltChanged: (event: MapCameraChangedEvent) => void;\n  onZoomChanged: (event: MapCameraChangedEvent) => void;\n  onCameraChanged: (event: MapCameraChangedEvent) => void;\n\n  // mouse / touch / pointer events\n  onClick: (event: MapMouseEvent) => void;\n  onDblclick: (event: MapMouseEvent) => void;\n  onContextmenu: (event: MapMouseEvent) => void;\n  onMousemove: (event: MapMouseEvent) => void;\n  onMouseover: (event: MapMouseEvent) => void;\n  onMouseout: (event: MapMouseEvent) => void;\n  onDrag: (event: MapEvent) => void;\n  onDragend: (event: MapEvent) => void;\n  onDragstart: (event: MapEvent) => void;\n\n  // loading events\n  onTilesLoaded: (event: MapEvent) => void;\n  onIdle: (event: MapEvent) => void;\n\n  // configuration events\n  onProjectionChanged: (event: MapEvent) => void;\n  onIsFractionalZoomEnabledChanged: (event: MapEvent) => void;\n  onMapCapabilitiesChanged: (event: MapEvent) => void;\n  onMapTypeIdChanged: (event: MapEvent) => void;\n  onRenderingTypeChanged: (event: MapEvent) => void;\n}>;\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nexport function useMapEvents(\n  map: google.maps.Map | null,\n  props: MapEventProps\n) {\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n\n  for (const propName of eventPropNames) {\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    const handler = props[propName] as (ev: MapEvent) => void;\n    const eventType = propNameToEventType[propName];\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!map) return;\n      if (!handler) return;\n\n      const listener = google.maps.event.addListener(\n        map,\n        eventType,\n        (ev?: google.maps.MapMouseEvent | google.maps.IconMouseEvent) => {\n          handler(createMapEvent(eventType, map, ev));\n        }\n      );\n\n      return () => listener.remove();\n    }, [map, eventType, handler]);\n  }\n}\n\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(\n  type: string,\n  map: google.maps.Map,\n  srcEvent?: google.maps.MapMouseEvent | google.maps.IconMouseEvent\n): MapEvent {\n  const ev: MapEvent = {\n    type,\n    map,\n    detail: {},\n    stoppable: false,\n    stop: () => {}\n  };\n\n  if (cameraEventTypes.includes(type)) {\n    const camEvent = ev as MapCameraChangedEvent;\n\n    const center = map.getCenter();\n    const zoom = map.getZoom();\n    const heading = map.getHeading() || 0;\n    const tilt = map.getTilt() || 0;\n    const bounds = map.getBounds();\n\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn(\n        '[createEvent] at least one of the values from the map ' +\n          'returned undefined. This is not expected to happen. Please ' +\n          'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n      );\n    }\n\n    camEvent.detail = {\n      center: center?.toJSON() || {lat: 0, lng: 0},\n      zoom: (zoom as number) || 0,\n      heading: heading as number,\n      tilt: tilt as number,\n      bounds: bounds?.toJSON() || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    if (!srcEvent)\n      throw new Error('[createEvent] mouse events must provide a srcEvent');\n    const mouseEvent = ev as MapMouseEvent;\n\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = () => srcEvent.stop();\n\n    mouseEvent.detail = {\n      latLng: srcEvent.latLng?.toJSON() || null,\n      placeId: (srcEvent as google.maps.IconMouseEvent).placeId\n    };\n\n    return mouseEvent;\n  }\n\n  return ev;\n}\n\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nconst propNameToEventType: {[prop in keyof Required<MapEventProps>]: string} = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed',\n\n  // note: onCameraChanged is an alias for the bounds_changed event,\n  // since that is going to be fired in every situation where the camera is\n  // updated.\n  onCameraChanged: 'bounds_changed'\n} as const;\n\nconst cameraEventTypes = [\n  'bounds_changed',\n  'center_changed',\n  'heading_changed',\n  'tilt_changed',\n  'zoom_changed'\n];\n\nconst mouseEventTypes = [\n  'click',\n  'contextmenu',\n  'dblclick',\n  'mousemove',\n  'mouseout',\n  'mouseover'\n];\n\ntype MapEventPropName = keyof MapEventProps;\nconst eventPropNames = Object.keys(propNameToEventType) as MapEventPropName[];\n\nexport type MapEvent<T = unknown> = {\n  type: string;\n  map: google.maps.Map;\n  detail: T;\n\n  stoppable: boolean;\n  stop: () => void;\n  domEvent?: MouseEvent | TouchEvent | PointerEvent | KeyboardEvent | Event;\n};\n\nexport type MapMouseEvent = MapEvent<{\n  latLng: google.maps.LatLngLiteral | null;\n  placeId: string | null;\n}>;\n\nexport type MapCameraChangedEvent = MapEvent<{\n  center: google.maps.LatLngLiteral;\n  bounds: google.maps.LatLngBoundsLiteral;\n  zoom: number;\n  heading: number;\n  tilt: number;\n}>;\n","import {DependencyList, EffectCallback, useEffect, useRef} from 'react';\nimport isDeepEqual from 'fast-deep-equal';\n\nexport function useDeepCompareEffect(\n  effect: EffectCallback,\n  deps: DependencyList\n) {\n  const ref = useRef<DependencyList | undefined>(undefined);\n\n  if (!ref.current || !isDeepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, ref.current);\n}\n","import {MapProps} from '../map';\nimport {useDeepCompareEffect} from '../../libraries/use-deep-compare-effect';\n\nconst mapOptionKeys: Set<keyof google.maps.MapOptions> = new Set([\n  'backgroundColor',\n  'clickableIcons',\n  'controlSize',\n  'disableDefaultUI',\n  'disableDoubleClickZoom',\n  'draggable',\n  'draggableCursor',\n  'draggingCursor',\n  'fullscreenControl',\n  'fullscreenControlOptions',\n  'gestureHandling',\n  'headingInteractionEnabled',\n  'isFractionalZoomEnabled',\n  'keyboardShortcuts',\n  'mapTypeControl',\n  'mapTypeControlOptions',\n  'mapTypeId',\n  'maxZoom',\n  'minZoom',\n  'noClear',\n  'panControl',\n  'panControlOptions',\n  'restriction',\n  'rotateControl',\n  'rotateControlOptions',\n  'scaleControl',\n  'scaleControlOptions',\n  'scrollwheel',\n  'streetView',\n  'streetViewControl',\n  'streetViewControlOptions',\n  'styles',\n  'tiltInteractionEnabled',\n  'zoomControl',\n  'zoomControlOptions'\n]);\n\n/**\n * Internal hook to update the map-options when props are changed.\n *\n * @param map the map instance\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nexport function useMapOptions(map: google.maps.Map | null, mapProps: MapProps) {\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor via mapOptions.\n   */\n\n  const mapOptions: google.maps.MapOptions = {};\n  const keys = Object.keys(mapProps) as (keyof google.maps.MapOptions)[];\n  for (const key of keys) {\n    if (!mapOptionKeys.has(key)) continue;\n\n    mapOptions[key] = mapProps[key] as never;\n  }\n\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useDeepCompareEffect(() => {\n    if (!map) return;\n\n    map.setOptions(mapOptions);\n  }, [mapOptions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\n","import {useContext} from 'react';\nimport {APIProviderContext} from '../components/api-provider';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n\nexport function useApiLoadingStatus(): APILoadingStatus {\n  return useContext(APIProviderContext)?.status || APILoadingStatus.NOT_LOADED;\n}\n","import {useLayoutEffect} from 'react';\n\nexport type DeckGlCompatProps = {\n  /**\n   * Viewport from deck.gl\n   */\n  viewport?: unknown;\n  /**\n   * View state from deck.gl\n   */\n  viewState?: Record<string, unknown>;\n  /**\n   * Initial View State from deck.gl\n   */\n  initialViewState?: Record<string, unknown>;\n};\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nexport function useDeckGLCameraUpdate(\n  map: google.maps.Map | null,\n  props: DeckGlCompatProps\n) {\n  const {viewport, viewState} = props;\n  const isDeckGlControlled = !!viewport;\n\n  useLayoutEffect(() => {\n    if (!map || !viewState) return;\n\n    const {\n      latitude,\n      longitude,\n      bearing: heading,\n      pitch: tilt,\n      zoom\n    } = viewState as Record<string, number>;\n\n    map.moveCamera({\n      center: {lat: latitude, lng: longitude},\n      heading,\n      tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n\n  return isDeckGlControlled;\n}\n","export function isLatLngLiteral(\n  obj: unknown\n): obj is google.maps.LatLngLiteral {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\n\nexport function latLngEquals(\n  a: google.maps.LatLngLiteral | google.maps.LatLng | undefined | null,\n  b: google.maps.LatLngLiteral | google.maps.LatLng | undefined | null\n): boolean {\n  if (!a || !b) return false;\n  const A = toLatLngLiteral(a);\n  const B = toLatLngLiteral(b);\n  if (A.lat !== B.lat || A.lng !== B.lng) return false;\n  return true;\n}\n\nexport function toLatLngLiteral(\n  obj: google.maps.LatLngLiteral | google.maps.LatLng\n): google.maps.LatLngLiteral {\n  if (isLatLngLiteral(obj)) return obj;\n\n  return obj.toJSON();\n}\n","import {useLayoutEffect} from 'react';\nimport {CameraStateRef} from './use-tracked-camera-state-ref';\nimport {toLatLngLiteral} from '../../libraries/lat-lng-utils';\nimport {MapProps} from '../map';\n\nexport function useMapCameraParams(\n  map: google.maps.Map | null,\n  cameraStateRef: CameraStateRef,\n  mapProps: MapProps\n) {\n  const center = mapProps.center ? toLatLngLiteral(mapProps.center) : null;\n\n  let lat: number | null = null;\n  let lng: number | null = null;\n\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat as number;\n    lng = center.lng as number;\n  }\n\n  const zoom: number | null = Number.isFinite(mapProps.zoom)\n    ? (mapProps.zoom as number)\n    : null;\n  const heading: number | null = Number.isFinite(mapProps.heading)\n    ? (mapProps.heading as number)\n    : null;\n  const tilt: number | null = Number.isFinite(mapProps.tilt)\n    ? (mapProps.tilt as number)\n    : null;\n\n  // the following effect runs for every render of the map component and checks\n  // if there are differences between the known state of the map instance\n  // (cameraStateRef, which is updated by all bounds_changed events) and the\n  // desired state in the props.\n\n  useLayoutEffect(() => {\n    if (!map) return;\n\n    const nextCamera: google.maps.CameraOptions = {};\n    let needsUpdate = false;\n\n    if (\n      lat !== null &&\n      lng !== null &&\n      (cameraStateRef.current.center.lat !== lat ||\n        cameraStateRef.current.center.lng !== lng)\n    ) {\n      nextCamera.center = {lat, lng};\n      needsUpdate = true;\n    }\n\n    if (zoom !== null && cameraStateRef.current.zoom !== zoom) {\n      nextCamera.zoom = zoom as number;\n      needsUpdate = true;\n    }\n\n    if (heading !== null && cameraStateRef.current.heading !== heading) {\n      nextCamera.heading = heading as number;\n      needsUpdate = true;\n    }\n\n    if (tilt !== null && cameraStateRef.current.tilt !== tilt) {\n      nextCamera.tilt = tilt as number;\n      needsUpdate = true;\n    }\n\n    if (needsUpdate) {\n      map.moveCamera(nextCamera);\n    }\n  });\n}\n","import React, {CSSProperties} from 'react';\n\nexport const AuthFailureMessage = () => {\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '.8rem',\n    color: 'rgba(0,0,0,0.6)',\n    background: '#dddddd',\n    padding: '1rem 1.5rem'\n  };\n\n  return (\n    <div style={style}>\n      <h2>Error: AuthFailure</h2>\n      <p>\n        A problem with your API key prevents the map from rendering correctly.\n        Please make sure the value of the <code>APIProvider.apiKey</code> prop\n        is correct. Check the error-message in the console for further details.\n      </p>\n    </div>\n  );\n};\n","import {Ref, useCallback, useState} from 'react';\n\nexport function useCallbackRef<T>() {\n  const [el, setEl] = useState<T | null>(null);\n  const ref = useCallback((value: T) => setEl(value), [setEl]);\n\n  return [el, ref as Ref<T>] as const;\n}\n","import {useApiLoadingStatus} from './use-api-loading-status';\nimport {APILoadingStatus} from '../libraries/api-loading-status';\n/**\n * Hook to check if the Maps JavaScript API is loaded\n */\nexport function useApiIsLoaded(): boolean {\n  const status = useApiLoadingStatus();\n\n  return status === APILoadingStatus.LOADED;\n}\n","import {useReducer} from 'react';\n\nexport function useForceUpdate(): () => void {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  return forceUpdate;\n}\n","import {MutableRefObject, useEffect, useRef} from 'react';\nimport {useForceUpdate} from '../../libraries/use-force-update';\n\nexport type CameraState = {\n  center: google.maps.LatLngLiteral;\n  heading: number;\n  tilt: number;\n  zoom: number;\n};\n\nexport type CameraStateRef = MutableRefObject<CameraState>;\n\nfunction handleBoundsChange(map: google.maps.Map, ref: CameraStateRef) {\n  const center = map.getCenter();\n  const zoom = map.getZoom();\n  const heading = map.getHeading() || 0;\n  const tilt = map.getTilt() || 0;\n  const bounds = map.getBounds();\n\n  if (!center || !bounds || !Number.isFinite(zoom)) {\n    console.warn(\n      '[useTrackedCameraState] at least one of the values from the map ' +\n        'returned undefined. This is not expected to happen. Please ' +\n        'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n    );\n  }\n\n  // fixme: do we need the `undefined` cases for the camera-params? When are they used in the maps API?\n  Object.assign(ref.current, {\n    center: center?.toJSON() || {lat: 0, lng: 0},\n    zoom: (zoom as number) || 0,\n    heading: heading as number,\n    tilt: tilt as number\n  });\n}\n\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is used in `useMapCameraParams` to reduce stuttering in normal operation\n * by avoiding updates of the map camera with values that have already been processed.\n */\nexport function useTrackedCameraStateRef(\n  map: google.maps.Map | null\n): CameraStateRef {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef<CameraState>({\n    center: {lat: 0, lng: 0},\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n\n  // Record camera state with every bounds_changed event dispatched by the map.\n  // This data is used to prevent feeding these values back to the\n  // map-instance when a typical \"controlled component\" setup (state variable is\n  // fed into and updated by the map).\n  useEffect(() => {\n    if (!map) return;\n\n    const listener = google.maps.event.addListener(\n      map,\n      'bounds_changed',\n      () => {\n        handleBoundsChange(map, ref);\n\n        // When an event is occured, we have to update during the next cycle.\n        // The application could decide to ignore the event and not update any\n        // camera props of the map, meaning that in that case we will have to\n        // 'undo' the change to the camera.\n        forceUpdate();\n      }\n    );\n\n    return () => listener.remove();\n  }, [map, forceUpdate]);\n\n  return ref;\n}\n","import {Ref, useEffect, useRef, useState} from 'react';\n\nimport {MapProps} from '../map';\nimport {APIProviderContextValue} from '../api-provider';\n\nimport {useCallbackRef} from '../../libraries/use-callback-ref';\nimport {useApiIsLoaded} from '../../hooks/use-api-is-loaded';\nimport {\n  CameraState,\n  CameraStateRef,\n  useTrackedCameraStateRef\n} from './use-tracked-camera-state-ref';\n\n/**\n * Stores a stack of map-instances for each mapId. Whenever an\n * instance is used, it is removed from the stack while in use,\n * and returned to the stack when the component unmounts.\n * This allows us to correctly implement caching for multiple\n * maps om the same page, while reusing as much as possible.\n *\n * FIXME: while it should in theory be possible to reuse maps solely\n *   based on the mapId (as all other parameters can be changed at\n *   runtime), we don't yet have good enough tracking of options to\n *   reliably unset all the options that have been set.\n */\nclass CachedMapStack {\n  static entries: {[key: string]: google.maps.Map[]} = {};\n\n  static has(key: string) {\n    return this.entries[key] && this.entries[key].length > 0;\n  }\n\n  static pop(key: string) {\n    if (!this.entries[key]) return null;\n\n    return this.entries[key].pop() || null;\n  }\n\n  static push(key: string, value: google.maps.Map) {\n    if (!this.entries[key]) this.entries[key] = [];\n\n    this.entries[key].push(value);\n  }\n}\n\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nexport function useMapInstance(\n  props: MapProps,\n  context: APIProviderContextValue\n): readonly [\n  map: google.maps.Map | null,\n  containerRef: Ref<HTMLDivElement>,\n  cameraStateRef: CameraStateRef\n] {\n  const apiIsLoaded = useApiIsLoaded();\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [container, containerRef] = useCallbackRef<HTMLDivElement>();\n\n  const cameraStateRef = useTrackedCameraStateRef(map);\n\n  const {\n    id,\n    defaultBounds,\n    defaultCenter,\n    defaultZoom,\n    defaultHeading,\n    defaultTilt,\n    reuseMaps,\n    renderingType,\n    colorScheme,\n\n    ...mapOptions\n  } = props;\n\n  const hasZoom = props.zoom !== undefined || props.defaultZoom !== undefined;\n  const hasCenter =\n    props.center !== undefined || props.defaultCenter !== undefined;\n\n  if (!defaultBounds && (!hasZoom || !hasCenter)) {\n    console.warn(\n      '<Map> component is missing configuration. ' +\n        'You have to provide zoom and center (via the `zoom`/`defaultZoom` and ' +\n        '`center`/`defaultCenter` props) or specify the region to show using ' +\n        '`defaultBounds`. See ' +\n        'https://visgl.github.io/react-google-maps/docs/api-reference/components/map#required'\n    );\n  }\n\n  // apply default camera props if available and not overwritten by controlled props\n  if (!mapOptions.center && defaultCenter) mapOptions.center = defaultCenter;\n  if (!mapOptions.zoom && Number.isFinite(defaultZoom))\n    mapOptions.zoom = defaultZoom;\n  if (!mapOptions.heading && Number.isFinite(defaultHeading))\n    mapOptions.heading = defaultHeading;\n  if (!mapOptions.tilt && Number.isFinite(defaultTilt))\n    mapOptions.tilt = defaultTilt;\n\n  for (const key of Object.keys(mapOptions) as (keyof typeof mapOptions)[])\n    if (mapOptions[key] === undefined) delete mapOptions[key];\n\n  const savedMapStateRef = useRef<{\n    mapId?: string | null;\n    cameraState: CameraState;\n  }>();\n\n  // create the map instance and register it in the context\n  useEffect(\n    () => {\n      if (!container || !apiIsLoaded) return;\n\n      const {addMapInstance, removeMapInstance} = context;\n\n      // note: colorScheme (upcoming feature) isn't yet in the typings, remove once that is fixed:\n      const {mapId} = props;\n      const cacheKey = `${mapId || 'default'}:${renderingType || 'default'}:${colorScheme || 'LIGHT'}`;\n\n      let mapDiv: HTMLElement;\n      let map: google.maps.Map;\n\n      if (reuseMaps && CachedMapStack.has(cacheKey)) {\n        map = CachedMapStack.pop(cacheKey) as google.maps.Map;\n        mapDiv = map.getDiv();\n\n        container.appendChild(mapDiv);\n        map.setOptions(mapOptions);\n\n        // detaching the element from the DOM lets the map fall back to its default\n        // size, setting the center will trigger reloading the map.\n        setTimeout(() => map.setCenter(map.getCenter()!), 0);\n      } else {\n        mapDiv = document.createElement('div');\n        mapDiv.style.height = '100%';\n        container.appendChild(mapDiv);\n\n        map = new google.maps.Map(mapDiv, {\n          ...mapOptions,\n          ...(renderingType\n            ? {renderingType: renderingType as google.maps.RenderingType}\n            : {}),\n          ...(colorScheme\n            ? {colorScheme: colorScheme as google.maps.ColorScheme}\n            : {})\n        });\n      }\n\n      setMap(map);\n      addMapInstance(map, id);\n\n      if (defaultBounds) {\n        const {padding, ...defBounds} = defaultBounds;\n        map.fitBounds(defBounds, padding);\n      }\n\n      // prevent map not rendering due to missing configuration\n      else if (!hasZoom || !hasCenter) {\n        map.fitBounds({east: 180, west: -180, south: -90, north: 90});\n      }\n\n      // the savedMapState is used to restore the camera parameters when the mapId is changed\n      if (savedMapStateRef.current) {\n        const {mapId: savedMapId, cameraState: savedCameraState} =\n          savedMapStateRef.current;\n        if (savedMapId !== mapId) {\n          map.setOptions(savedCameraState);\n        }\n      }\n\n      return () => {\n        savedMapStateRef.current = {\n          mapId,\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          cameraState: cameraStateRef.current\n        };\n\n        // detach the map-div from the dom\n        mapDiv.remove();\n\n        if (reuseMaps) {\n          // push back on the stack\n          CachedMapStack.push(cacheKey, map);\n        } else {\n          // remove all event-listeners to minimize the possibility of memory-leaks\n          google.maps.event.clearInstanceListeners(map);\n        }\n\n        setMap(null);\n        removeMapInstance(id);\n      };\n    },\n\n    // some dependencies are ignored in the list below:\n    //  - defaultBounds and the default* camera props will only be used once, and\n    //    changes should be ignored\n    //  - mapOptions has special hooks that take care of updating the options\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      container,\n      apiIsLoaded,\n      id,\n\n      // these props can't be changed after initialization and require a new\n      // instance to be created\n      props.mapId,\n      props.renderingType,\n      props.colorScheme\n    ]\n  );\n\n  return [map, containerRef, cameraStateRef] as const;\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useMemo\n} from 'react';\n\nimport {APIProviderContext} from '../api-provider';\n\nimport {MapEventProps, useMapEvents} from './use-map-events';\nimport {useMapOptions} from './use-map-options';\nimport {useApiLoadingStatus} from '../../hooks/use-api-loading-status';\nimport {APILoadingStatus} from '../../libraries/api-loading-status';\nimport {\n  DeckGlCompatProps,\n  useDeckGLCameraUpdate\n} from './use-deckgl-camera-update';\nimport {toLatLngLiteral} from '../../libraries/lat-lng-utils';\nimport {useMapCameraParams} from './use-map-camera-params';\nimport {AuthFailureMessage} from './auth-failure-message';\nimport {useMapInstance} from './use-map-instance';\n\nexport interface GoogleMapsContextValue {\n  map: google.maps.Map | null;\n}\nexport const GoogleMapsContext =\n  React.createContext<GoogleMapsContextValue | null>(null);\n\nexport type {\n  MapCameraChangedEvent,\n  MapEvent,\n  MapEventProps,\n  MapMouseEvent\n} from './use-map-events';\n\nexport type MapCameraProps = {\n  center: google.maps.LatLngLiteral;\n  zoom: number;\n  heading?: number;\n  tilt?: number;\n};\n\n// ColorScheme and RenderingType are redefined here to make them usable before the\n// maps API has been fully loaded.\n\nexport const ColorScheme = {\n  DARK: 'DARK',\n  LIGHT: 'LIGHT',\n  FOLLOW_SYSTEM: 'FOLLOW_SYSTEM'\n};\nexport type ColorScheme = (typeof ColorScheme)[keyof typeof ColorScheme];\n\nexport const RenderingType = {\n  VECTOR: 'VECTOR',\n  RASTER: 'RASTER',\n  UNINITIALIZED: 'UNINITIALIZED'\n};\nexport type RenderingType = (typeof RenderingType)[keyof typeof RenderingType];\n\n/**\n * Props for the Map Component\n */\nexport type MapProps = Omit<\n  google.maps.MapOptions,\n  'renderingType' | 'colorScheme'\n> &\n  MapEventProps &\n  DeckGlCompatProps & {\n    /**\n     * An id for the map, this is required when multiple maps are present\n     * in the same APIProvider context.\n     */\n    id?: string;\n\n    /**\n     * Additional style rules to apply to the map dom-element.\n     */\n    style?: CSSProperties;\n\n    /**\n     * Additional css class-name to apply to the element containing the map.\n     */\n    className?: string;\n\n    /**\n     * The color-scheme to use for the map.\n     */\n    colorScheme?: ColorScheme;\n\n    /**\n     * The rendering-type to be used.\n     */\n    renderingType?: RenderingType;\n\n    /**\n     * Indicates that the map will be controlled externally. Disables all controls provided by the map itself.\n     */\n    controlled?: boolean;\n\n    /**\n     * Enable caching of map-instances created by this component.\n     */\n    reuseMaps?: boolean;\n\n    defaultCenter?: google.maps.LatLngLiteral;\n    defaultZoom?: number;\n    defaultHeading?: number;\n    defaultTilt?: number;\n    /**\n     * Alternative way to specify the default camera props as a geographic region that should be fully visible\n     */\n    defaultBounds?: google.maps.LatLngBoundsLiteral & {\n      padding?: number | google.maps.Padding;\n    };\n  };\n\nexport const Map = (props: PropsWithChildren<MapProps>) => {\n  const {children, id, className, style} = props;\n  const context = useContext(APIProviderContext);\n  const loadingStatus = useApiLoadingStatus();\n\n  if (!context) {\n    throw new Error(\n      '<Map> can only be used inside an <ApiProvider> component.'\n    );\n  }\n\n  const [map, mapRef, cameraStateRef] = useMapInstance(props, context);\n\n  useMapCameraParams(map, cameraStateRef, props);\n  useMapEvents(map, props);\n  useMapOptions(map, props);\n\n  const isDeckGlControlled = useDeckGLCameraUpdate(map, props);\n  const isControlledExternally = !!props.controlled;\n\n  // disable interactions with the map for externally controlled maps\n  useEffect(() => {\n    if (!map) return;\n\n    // fixme: this doesn't seem to belong here (and it's mostly there for convenience anyway).\n    //   The reasoning is that a deck.gl canvas will be put on top of the map, rendering\n    //   any default map controls pretty much useless\n    if (isDeckGlControlled) {\n      map.setOptions({disableDefaultUI: true});\n    }\n\n    // disable all control-inputs when the map is controlled externally\n    if (isDeckGlControlled || isControlledExternally) {\n      map.setOptions({\n        gestureHandling: 'none',\n        keyboardShortcuts: false\n      });\n    }\n\n    return () => {\n      map.setOptions({\n        gestureHandling: props.gestureHandling,\n        keyboardShortcuts: props.keyboardShortcuts\n      });\n    };\n  }, [\n    map,\n    isDeckGlControlled,\n    isControlledExternally,\n    props.gestureHandling,\n    props.keyboardShortcuts\n  ]);\n\n  // setup a stable cameraOptions object that can be used as dependency\n  const center = props.center ? toLatLngLiteral(props.center) : null;\n  let lat: number | null = null;\n  let lng: number | null = null;\n  if (center && Number.isFinite(center.lat) && Number.isFinite(center.lng)) {\n    lat = center.lat as number;\n    lng = center.lng as number;\n  }\n\n  const cameraOptions: google.maps.CameraOptions = useMemo(() => {\n    return {\n      center: {lat: lat ?? 0, lng: lng ?? 0},\n      zoom: props.zoom ?? 0,\n      heading: props.heading ?? 0,\n      tilt: props.tilt ?? 0\n    };\n  }, [lat, lng, props.zoom, props.heading, props.tilt]);\n\n  // externally controlled mode: reject all camera changes that don't correspond to changes in props\n  useLayoutEffect(() => {\n    if (!map || !isControlledExternally) return;\n\n    map.moveCamera(cameraOptions);\n    const listener = map.addListener('bounds_changed', () => {\n      map.moveCamera(cameraOptions);\n    });\n\n    return () => listener.remove();\n  }, [map, isControlledExternally, cameraOptions]);\n\n  const combinedStyle: CSSProperties = useMemo(\n    () => ({\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      // when using deckgl, the map should be sent to the back\n      zIndex: isDeckGlControlled ? -1 : 0,\n\n      ...style\n    }),\n    [style, isDeckGlControlled]\n  );\n\n  const contextValue: GoogleMapsContextValue = useMemo(() => ({map}), [map]);\n\n  if (loadingStatus === APILoadingStatus.AUTH_FAILURE) {\n    return (\n      <div\n        style={{position: 'relative', ...(className ? {} : combinedStyle)}}\n        className={className}>\n        <AuthFailureMessage />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={mapRef}\n      data-testid={'map'}\n      style={className ? undefined : combinedStyle}\n      className={className}\n      {...(id ? {id} : {})}>\n      {map ? (\n        <GoogleMapsContext.Provider value={contextValue}>\n          {children}\n        </GoogleMapsContext.Provider>\n      ) : null}\n    </div>\n  );\n};\nMap.deckGLViewProps = true;\n","const shownMessages = new Set();\n\nexport function logErrorOnce(...args: Parameters<typeof console.error>) {\n  const key = JSON.stringify(args);\n\n  if (!shownMessages.has(key)) {\n    shownMessages.add(key);\n\n    console.error(...args);\n  }\n}\n","import {useContext} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {GoogleMapsContext} from '../components/map';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nexport const useMap = (id: string | null = null): google.maps.Map | null => {\n  const ctx = useContext(APIProviderContext);\n  const {map} = useContext(GoogleMapsContext) || {};\n\n  if (ctx === null) {\n    logErrorOnce(\n      'useMap(): failed to retrieve APIProviderContext. ' +\n        'Make sure that the <APIProvider> component exists and that the ' +\n        'component you are calling `useMap()` from is a sibling of the ' +\n        '<APIProvider>.'\n    );\n\n    return null;\n  }\n\n  const {mapInstances} = ctx;\n\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n\n  // otherwise, return the closest ancestor\n  if (map) return map;\n\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\n","import {useContext, useEffect} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {useApiIsLoaded} from './use-api-is-loaded';\n\ninterface ApiLibraries {\n  core: google.maps.CoreLibrary;\n  maps: google.maps.MapsLibrary;\n  places: google.maps.PlacesLibrary;\n  geocoding: google.maps.GeocodingLibrary;\n  routes: google.maps.RoutesLibrary;\n  marker: google.maps.MarkerLibrary;\n  geometry: google.maps.GeometryLibrary;\n  elevation: google.maps.ElevationLibrary;\n  streetView: google.maps.StreetViewLibrary;\n  journeySharing: google.maps.JourneySharingLibrary;\n  drawing: google.maps.DrawingLibrary;\n  visualization: google.maps.VisualizationLibrary;\n}\n\nexport function useMapsLibrary<\n  K extends keyof ApiLibraries,\n  V extends ApiLibraries[K]\n>(name: K): V | null;\n\nexport function useMapsLibrary(name: string) {\n  const apiIsLoaded = useApiIsLoaded();\n  const ctx = useContext(APIProviderContext);\n\n  useEffect(() => {\n    if (!apiIsLoaded || !ctx) return;\n\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx, name]);\n\n  return ctx?.loadedLibraries[name] || null;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\n\n/**\n * Internally used to bind events to Maps JavaScript API objects.\n * @internal\n */\nexport function useMapsEventListener<T extends (...args: any[]) => void>(\n  target?: object | null,\n  name?: string,\n  callback?: T | null\n) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n\n    const listener = google.maps.event.addListener(target, name, callback);\n\n    return () => listener.remove();\n  }, [target, name, callback]);\n}\n","import {useEffect} from 'react';\n\n/**\n * Internally used to copy values from props into API-Objects\n * whenever they change.\n *\n * @example\n *   usePropBinding(marker, 'position', position);\n *\n * @internal\n */\nexport function usePropBinding<T extends object, K extends keyof T>(\n  object: T | null,\n  prop: K,\n  value: T[K]\n) {\n  useEffect(() => {\n    if (!object) return;\n\n    object[prop] = value;\n  }, [object, prop, value]);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {useEffect} from 'react';\n\n/**\n * Internally used to bind events to DOM nodes.\n * @internal\n */\nexport function useDomEventListener<T extends (...args: any[]) => void>(\n  target?: Node | null,\n  name?: string,\n  callback?: T | null\n) {\n  useEffect(() => {\n    if (!target || !name || !callback) return;\n\n    target.addEventListener(name, callback);\n\n    return () => target.removeEventListener(name, callback);\n  }, [target, name, callback]);\n}\n","/* eslint-disable complexity */\nimport React, {\n  Children,\n  CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState\n} from 'react';\n\nimport {createPortal} from 'react-dom';\nimport {useMap} from '../hooks/use-map';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\n\nimport type {Ref, PropsWithChildren} from 'react';\nimport {useMapsEventListener} from '../hooks/use-maps-event-listener';\nimport {usePropBinding} from '../hooks/use-prop-binding';\nimport {useDomEventListener} from '../hooks/use-dom-event-listener';\n\nexport interface AdvancedMarkerContextValue {\n  marker: google.maps.marker.AdvancedMarkerElement;\n}\n\nexport function isAdvancedMarker(\n  marker: google.maps.Marker | google.maps.marker.AdvancedMarkerElement\n): marker is google.maps.marker.AdvancedMarkerElement {\n  return (\n    (marker as google.maps.marker.AdvancedMarkerElement).content !== undefined\n  );\n}\n\n/**\n * Copy of the `google.maps.CollisionBehavior` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nexport const CollisionBehavior = {\n  REQUIRED: 'REQUIRED',\n  REQUIRED_AND_HIDES_OPTIONAL: 'REQUIRED_AND_HIDES_OPTIONAL',\n  OPTIONAL_AND_HIDES_LOWER_PRIORITY: 'OPTIONAL_AND_HIDES_LOWER_PRIORITY'\n} as const;\nexport type CollisionBehavior =\n  (typeof CollisionBehavior)[keyof typeof CollisionBehavior];\n\nexport const AdvancedMarkerContext =\n  React.createContext<AdvancedMarkerContextValue | null>(null);\n\n// [xPosition, yPosition] when the top left corner is [0, 0]\nexport const AdvancedMarkerAnchorPoint = {\n  TOP_LEFT: ['0', '0'],\n  TOP_CENTER: ['50%', '0'],\n  TOP: ['50%', '0'],\n  TOP_RIGHT: ['100%', '0'],\n  LEFT_CENTER: ['0', '50%'],\n  LEFT_TOP: ['0', '0'],\n  LEFT: ['0', '50%'],\n  LEFT_BOTTOM: ['0', '100%'],\n  RIGHT_TOP: ['100%', '0'],\n  RIGHT: ['100%', '50%'],\n  RIGHT_CENTER: ['100%', '50%'],\n  RIGHT_BOTTOM: ['100%', '100%'],\n  BOTTOM_LEFT: ['0', '100%'],\n  BOTTOM_CENTER: ['50%', '100%'],\n  BOTTOM: ['50%', '100%'],\n  BOTTOM_RIGHT: ['100%', '100%'],\n  CENTER: ['50%', '50%']\n} as const;\n\nexport type AdvancedMarkerAnchorPoint =\n  (typeof AdvancedMarkerAnchorPoint)[keyof typeof AdvancedMarkerAnchorPoint];\n\ntype AdvancedMarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onMouseEnter?: (e: google.maps.MapMouseEvent['domEvent']) => void;\n  onMouseLeave?: (e: google.maps.MapMouseEvent['domEvent']) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type AdvancedMarkerProps = PropsWithChildren<\n  Omit<\n    google.maps.marker.AdvancedMarkerElementOptions,\n    'gmpDraggable' | 'gmpClickable' | 'content' | 'map' | 'collisionBehavior'\n  > &\n    AdvancedMarkerEventProps & {\n      draggable?: boolean;\n      clickable?: boolean;\n      collisionBehavior?: CollisionBehavior;\n      /**\n       * The anchor point for the Advanced Marker.\n       * Either use one of the predefined anchor point from the \"AdvancedMarkerAnchorPoint\" export\n       * or provide a string tuple in the form of [\"xPosition\", \"yPosition\"].\n       * The position is measured from the top-left corner and\n       * can be anything that can be consumed by a CSS translate() function.\n       * For example in percent (\"50%\") or in pixels (\"20px\").\n       */\n      anchorPoint?: AdvancedMarkerAnchorPoint | [string, string];\n      /**\n       * A className for the content element.\n       * (can only be used with HTML Marker content)\n       */\n      className?: string;\n      /**\n       * Additional styles to apply to the content element.\n       */\n      style?: CSSProperties;\n    }\n>;\n\ntype MarkerContentProps = PropsWithChildren & {\n  styles?: CSSProperties;\n  className?: string;\n  anchorPoint?: AdvancedMarkerAnchorPoint | [string, string];\n};\n\nconst MarkerContent = ({\n  children,\n  styles,\n  className,\n  anchorPoint\n}: MarkerContentProps) => {\n  const [xTranslation, yTranslation] =\n    anchorPoint ?? AdvancedMarkerAnchorPoint['BOTTOM'];\n\n  const {transform: userTransform, ...restStyles} = styles ?? {};\n\n  let transformStyle = `translate(-${xTranslation}, -${yTranslation})`;\n\n  // preserve extra transform styles that were set by the user\n  if (userTransform) {\n    transformStyle += ` ${userTransform}`;\n  }\n  return (\n    <div\n      className={className}\n      style={{\n        width: 'fit-content',\n        transformOrigin: `${xTranslation} ${yTranslation}`,\n        transform: transformStyle,\n        ...restStyles\n      }}>\n      {children}\n    </div>\n  );\n};\n\nexport type AdvancedMarkerRef = google.maps.marker.AdvancedMarkerElement | null;\nfunction useAdvancedMarker(props: AdvancedMarkerProps) {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n  const [contentContainer, setContentContainer] =\n    useState<HTMLDivElement | null>(null);\n\n  const map = useMap();\n  const markerLibrary = useMapsLibrary('marker');\n\n  const {\n    children,\n    onClick,\n    className,\n    onMouseEnter,\n    onMouseLeave,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    collisionBehavior,\n    clickable,\n    draggable,\n    position,\n    title,\n    zIndex\n  } = props;\n\n  const numChildren = Children.count(children);\n\n  // create an AdvancedMarkerElement instance and add it to the map once available\n  useEffect(() => {\n    if (!map || !markerLibrary) return;\n\n    const newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n\n    setMarker(newMarker);\n\n    // create the container for marker content if there are children\n    let contentElement: HTMLDivElement | null = null;\n    if (numChildren > 0) {\n      contentElement = document.createElement('div');\n      contentElement.style.width = '0';\n      contentElement.style.height = '0';\n\n      newMarker.content = contentElement;\n      setContentContainer(contentElement);\n    }\n\n    return () => {\n      newMarker.map = null;\n      contentElement?.remove();\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChildren]);\n\n  // When no children are present we don't have our own wrapper div\n  // which usually gets the user provided className. In this case\n  // we set the className directly on the marker.content element that comes\n  // with the AdvancedMarker.\n  useEffect(() => {\n    if (!marker || !marker.content || numChildren > 0) return;\n\n    (marker.content as HTMLElement).className = className || '';\n  }, [marker, className, numChildren]);\n\n  // copy other props\n  usePropBinding(marker, 'position', position);\n  usePropBinding(marker, 'title', title ?? '');\n  usePropBinding(marker, 'zIndex', zIndex);\n  usePropBinding(\n    marker,\n    'collisionBehavior',\n    collisionBehavior as google.maps.CollisionBehavior\n  );\n\n  // set gmpDraggable from props (when unspecified, it's true if any drag-event\n  // callbacks are specified)\n  useEffect(() => {\n    if (!marker) return;\n\n    if (draggable !== undefined) marker.gmpDraggable = draggable;\n    else if (onDrag || onDragStart || onDragEnd) marker.gmpDraggable = true;\n    else marker.gmpDraggable = false;\n  }, [marker, draggable, onDrag, onDragEnd, onDragStart]);\n\n  // set gmpClickable from props (when unspecified, it's true if the onClick event\n  // callback is specified)\n  useEffect(() => {\n    if (!marker) return;\n\n    if (clickable !== undefined) marker.gmpClickable = clickable;\n    else if (onClick) marker.gmpClickable = true;\n    else marker.gmpClickable = false;\n  }, [marker, clickable, onClick]);\n\n  useMapsEventListener(marker, 'click', onClick);\n  useMapsEventListener(marker, 'drag', onDrag);\n  useMapsEventListener(marker, 'dragstart', onDragStart);\n  useMapsEventListener(marker, 'dragend', onDragEnd);\n\n  useDomEventListener(marker?.element, 'mouseenter', onMouseEnter);\n  useDomEventListener(marker?.element, 'mouseleave', onMouseLeave);\n\n  return [marker, contentContainer] as const;\n}\n\nexport const AdvancedMarker = forwardRef(\n  (props: AdvancedMarkerProps, ref: Ref<AdvancedMarkerRef>) => {\n    const {children, style, className, anchorPoint} = props;\n    const [marker, contentContainer] = useAdvancedMarker(props);\n\n    const advancedMarkerContextValue: AdvancedMarkerContextValue | null =\n      useMemo(() => (marker ? {marker} : null), [marker]);\n\n    useImperativeHandle(ref, () => marker, [marker]);\n\n    if (!contentContainer) return null;\n\n    return (\n      <AdvancedMarkerContext.Provider value={advancedMarkerContextValue}>\n        {createPortal(\n          <MarkerContent\n            anchorPoint={anchorPoint}\n            styles={style}\n            className={className}>\n            {children}\n          </MarkerContent>,\n          contentContainer\n        )}\n      </AdvancedMarkerContext.Provider>\n    );\n  }\n);\n\nexport function useAdvancedMarkerRef() {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n\n  const refCallback = useCallback((m: AdvancedMarkerRef | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/*\n * The code in this file was adapted from the internal react-dom-bindings package.\n * https://github.com/facebook/react/tree/4508873393058e86bed308b56e49ec883ece59d1/packages/react-dom-bindings\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {CSSProperties} from 'react';\n\nexport function setValueForStyles(\n  element: HTMLElement,\n  styles: CSSProperties | null,\n  prevStyles: CSSProperties | null\n) {\n  if (styles != null && typeof styles !== 'object') {\n    throw new Error(\n      'The `style` prop expects a mapping from style properties to values, ' +\n        \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n        'using JSX.'\n    );\n  }\n\n  const elementStyle = element.style;\n\n  // without `prevStyles`, just set all values\n  if (prevStyles == null) {\n    if (styles == null) return;\n\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) continue;\n\n      setValueForStyle(\n        elementStyle,\n        styleName,\n        styles[styleName as keyof CSSProperties]\n      );\n    }\n\n    return;\n  }\n\n  // unset all styles in `prevStyles` that aren't in `styles`\n  for (const styleName in prevStyles) {\n    if (\n      prevStyles.hasOwnProperty(styleName) &&\n      (styles == null || !styles.hasOwnProperty(styleName))\n    ) {\n      // Clear style\n      const isCustomProperty = styleName.indexOf('--') === 0;\n      if (isCustomProperty) {\n        elementStyle.setProperty(styleName, '');\n      } else if (styleName === 'float') {\n        elementStyle.cssFloat = '';\n      } else {\n        elementStyle[styleName as any] = '';\n      }\n    }\n  }\n\n  // only assign values from `styles` that are different from `prevStyles`\n  if (styles == null) return;\n\n  for (const styleName in styles) {\n    const value = styles[styleName as keyof CSSProperties];\n    if (\n      styles.hasOwnProperty(styleName) &&\n      prevStyles[styleName as keyof CSSProperties] !== value\n    ) {\n      setValueForStyle(elementStyle, styleName, value);\n    }\n  }\n}\n\nfunction setValueForStyle(\n  elementStyle: CSSStyleDeclaration,\n  styleName: string,\n  value: unknown\n) {\n  const isCustomProperty = styleName.indexOf('--') === 0;\n\n  // falsy values will unset the style property\n  if (value == null || typeof value === 'boolean' || value === '') {\n    if (isCustomProperty) {\n      elementStyle.setProperty(styleName, '');\n    } else if (styleName === 'float') {\n      elementStyle.cssFloat = '';\n    } else {\n      elementStyle[styleName as any] = '';\n    }\n  }\n\n  // custom properties can't be directly assigned\n  else if (isCustomProperty) {\n    elementStyle.setProperty(styleName, value as string);\n  }\n\n  // numeric values are treated as 'px' unless the style property expects unitless numbers\n  else if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isUnitlessNumber(styleName)\n  ) {\n    elementStyle[styleName as any] = value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  // everything else can just be assigned\n  else {\n    if (styleName === 'float') {\n      elementStyle.cssFloat = value as string;\n    } else {\n      elementStyle[styleName as any] = ('' + value).trim();\n    }\n  }\n}\n\n// CSS properties which accept numbers but are not in units of \"px\".\nconst unitlessNumbers = new Set([\n  'animationIterationCount',\n  'aspectRatio',\n  'borderImageOutset',\n  'borderImageSlice',\n  'borderImageWidth',\n  'boxFlex',\n  'boxFlexGroup',\n  'boxOrdinalGroup',\n  'columnCount',\n  'columns',\n  'flex',\n  'flexGrow',\n  'flexPositive',\n  'flexShrink',\n  'flexNegative',\n  'flexOrder',\n  'gridArea',\n  'gridRow',\n  'gridRowEnd',\n  'gridRowSpan',\n  'gridRowStart',\n  'gridColumn',\n  'gridColumnEnd',\n  'gridColumnSpan',\n  'gridColumnStart',\n  'fontWeight',\n  'lineClamp',\n  'lineHeight',\n  'opacity',\n  'order',\n  'orphans',\n  'scale',\n  'tabSize',\n  'widows',\n  'zIndex',\n  'zoom',\n  'fillOpacity', // SVG-related properties\n  'floodOpacity',\n  'stopOpacity',\n  'strokeDasharray',\n  'strokeDashoffset',\n  'strokeMiterlimit',\n  'strokeOpacity',\n  'strokeWidth'\n]);\nfunction isUnitlessNumber(name: string): boolean {\n  return unitlessNumbers.has(name);\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {createPortal} from 'react-dom';\n\nimport {useMap} from '../hooks/use-map';\nimport {useMapsEventListener} from '../hooks/use-maps-event-listener';\nimport {setValueForStyles} from '../libraries/set-value-for-styles';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\nimport {useDeepCompareEffect} from '../libraries/use-deep-compare-effect';\nimport {isAdvancedMarker} from './advanced-marker';\n\nexport type InfoWindowProps = Omit<\n  google.maps.InfoWindowOptions,\n  'headerContent' | 'content' | 'pixelOffset'\n> & {\n  style?: CSSProperties;\n  className?: string;\n  anchor?: google.maps.Marker | google.maps.marker.AdvancedMarkerElement | null;\n  pixelOffset?: [number, number];\n  shouldFocus?: boolean;\n  onClose?: () => void;\n  onCloseClick?: () => void;\n\n  headerContent?: ReactNode;\n};\n\n/**\n * Component to render an Info Window with the Maps JavaScript API\n */\nexport const InfoWindow = (props: PropsWithChildren<InfoWindowProps>) => {\n  const {\n    // content options\n    children,\n    headerContent,\n\n    style,\n    className,\n    pixelOffset,\n\n    // open options\n    anchor,\n    shouldFocus,\n\n    // events\n    onClose,\n    onCloseClick,\n\n    // other options\n    ...infoWindowOptions\n  } = props;\n\n  // ## create infowindow instance once the mapsLibrary is available.\n  const mapsLibrary = useMapsLibrary('maps');\n  const [infoWindow, setInfoWindow] = useState<google.maps.InfoWindow | null>(\n    null\n  );\n\n  const contentContainerRef = useRef<HTMLElement | null>(null);\n  const headerContainerRef = useRef<HTMLElement | null>(null);\n\n  useEffect(\n    () => {\n      if (!mapsLibrary) return;\n\n      contentContainerRef.current = document.createElement('div');\n      headerContainerRef.current = document.createElement('div');\n\n      const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n      if (pixelOffset) {\n        opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n      }\n\n      if (headerContent) {\n        // if headerContent is specified as string we can directly forward it,\n        // otherwise we'll pass the element the portal will render into\n        opts.headerContent =\n          typeof headerContent === 'string'\n            ? headerContent\n            : headerContainerRef.current;\n      }\n\n      // intentionally shadowing the state variables here\n      const infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n      infoWindow.setContent(contentContainerRef.current);\n\n      setInfoWindow(infoWindow);\n\n      // unmount: remove infoWindow and content elements (note: close is called in a different effect-cleanup)\n      return () => {\n        infoWindow.setContent(null);\n\n        contentContainerRef.current?.remove();\n        headerContainerRef.current?.remove();\n\n        contentContainerRef.current = null;\n        headerContainerRef.current = null;\n\n        setInfoWindow(null);\n      };\n    },\n    // `infoWindowOptions` and other props are missing from dependencies:\n    //\n    // We don't want to re-create the infowindow instance\n    // when the options change.\n    // Updating the options is handled in the useEffect below.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [mapsLibrary]\n  );\n\n  // ## update className and styles for `contentContainer`\n  // stores previously applied style properties, so they can be removed when unset\n  const prevStyleRef = useRef<CSSProperties | null>(null);\n  useEffect(() => {\n    if (!infoWindow || !contentContainerRef.current) return;\n\n    setValueForStyles(\n      contentContainerRef.current,\n      style || null,\n      prevStyleRef.current\n    );\n\n    prevStyleRef.current = style || null;\n\n    if (className !== contentContainerRef.current.className)\n      contentContainerRef.current.className = className || '';\n  }, [infoWindow, className, style]);\n\n  // ## update options\n  useDeepCompareEffect(\n    () => {\n      if (!infoWindow) return;\n\n      const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n      if (!pixelOffset) {\n        opts.pixelOffset = null;\n      } else {\n        opts.pixelOffset = new google.maps.Size(pixelOffset[0], pixelOffset[1]);\n      }\n\n      if (!headerContent) {\n        opts.headerContent = null;\n      } else {\n        opts.headerContent =\n          typeof headerContent === 'string'\n            ? headerContent\n            : headerContainerRef.current;\n      }\n\n      infoWindow.setOptions(infoWindowOptions);\n    },\n\n    // dependency `infoWindow` isn't needed since options are also passed\n    // to the constructor when a new infoWindow is created.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [infoWindowOptions, pixelOffset, headerContent]\n  );\n\n  // ## bind event handlers\n  useMapsEventListener(infoWindow, 'close', onClose);\n  useMapsEventListener(infoWindow, 'closeclick', onCloseClick);\n\n  // ## open info window when content and map are available\n  const map = useMap();\n  useEffect(() => {\n    // `anchor === null` means an anchor is defined but not ready yet.\n    if (!map || !infoWindow || anchor === null) return;\n\n    const isOpenedWithAnchor = !!anchor;\n    const openOptions: google.maps.InfoWindowOpenOptions = {map};\n    if (anchor) {\n      openOptions.anchor = anchor;\n\n      // Only do the infowindow adjusting when dealing with an AdvancedMarker\n      if (isAdvancedMarker(anchor) && anchor.content instanceof Element) {\n        const wrapperBcr = anchor.content.getBoundingClientRect() ?? {};\n        const {width: anchorWidth, height: anchorHeight} = wrapperBcr;\n\n        // This checks whether or not the anchor has custom content with our own\n        // div wrapper. If not, that means we have a regular AdvancedMarker without any children.\n        // In that case we do not want to adjust the infowindow since it is all handled correctly\n        // by the Google Maps API.\n        if (anchorWidth === 0 && anchorHeight === 0) {\n          // We can safely typecast here since we control that element and we know that\n          // it is a div\n          const anchorDomContent = anchor.content.firstElementChild as Element;\n\n          const contentBcr = anchorDomContent?.getBoundingClientRect();\n\n          // center infowindow above marker\n          const anchorOffsetX =\n            contentBcr.x - wrapperBcr.x + contentBcr.width / 2;\n          const anchorOffsetY = contentBcr.y - wrapperBcr.y;\n\n          const opts: google.maps.InfoWindowOptions = infoWindowOptions;\n\n          opts.pixelOffset = new google.maps.Size(\n            pixelOffset ? pixelOffset[0] + anchorOffsetX : anchorOffsetX,\n            pixelOffset ? pixelOffset[1] + anchorOffsetY : anchorOffsetY\n          );\n\n          infoWindow.setOptions(opts);\n        }\n      }\n    }\n\n    if (shouldFocus !== undefined) {\n      openOptions.shouldFocus = shouldFocus;\n    }\n\n    infoWindow.open(openOptions);\n\n    return () => {\n      // Note: when the infowindow has an anchor, it will automatically show up again when the\n      // anchor was removed from the map before infoWindow.close() is called but the it gets\n      // added back to the map after that.\n      // More information here: https://issuetracker.google.com/issues/343750849\n      if (isOpenedWithAnchor) infoWindow.set('anchor', null);\n\n      infoWindow.close();\n    };\n  }, [infoWindow, anchor, map, shouldFocus, infoWindowOptions, pixelOffset]);\n\n  return (\n    <>\n      {contentContainerRef.current &&\n        createPortal(children, contentContainerRef.current)}\n\n      {headerContainerRef.current !== null &&\n        createPortal(headerContent, headerContainerRef.current)}\n    </>\n  );\n};\n","import {useEffect, useMemo} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useMap} from '../hooks/use-map';\n\nimport type {PropsWithChildren} from 'react';\n\ntype MapControlProps = PropsWithChildren<{\n  position: ControlPosition;\n}>;\n\n/**\n * Copy of the `google.maps.ControlPosition` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nexport const ControlPosition = {\n  TOP_LEFT: 1,\n  TOP_CENTER: 2,\n  TOP: 2,\n  TOP_RIGHT: 3,\n  LEFT_CENTER: 4,\n  LEFT_TOP: 5,\n  LEFT: 5,\n  LEFT_BOTTOM: 6,\n  RIGHT_TOP: 7,\n  RIGHT: 7,\n  RIGHT_CENTER: 8,\n  RIGHT_BOTTOM: 9,\n  BOTTOM_LEFT: 10,\n  BOTTOM_CENTER: 11,\n  BOTTOM: 11,\n  BOTTOM_RIGHT: 12,\n  CENTER: 13,\n  BLOCK_START_INLINE_START: 14,\n  BLOCK_START_INLINE_CENTER: 15,\n  BLOCK_START_INLINE_END: 16,\n  INLINE_START_BLOCK_CENTER: 17,\n  INLINE_START_BLOCK_START: 18,\n  INLINE_START_BLOCK_END: 19,\n  INLINE_END_BLOCK_START: 20,\n  INLINE_END_BLOCK_CENTER: 21,\n  INLINE_END_BLOCK_END: 22,\n  BLOCK_END_INLINE_START: 23,\n  BLOCK_END_INLINE_CENTER: 24,\n  BLOCK_END_INLINE_END: 25\n} as const;\nexport type ControlPosition =\n  (typeof ControlPosition)[keyof typeof ControlPosition];\n\nexport const MapControl = ({children, position}: MapControlProps) => {\n  const controlContainer = useMemo(() => document.createElement('div'), []);\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) return;\n\n    const controls = map.controls[position];\n\n    controls.push(controlContainer);\n\n    return () => {\n      const controlsArray = controls.getArray();\n      // controlsArray could be undefined if the map is in an undefined state (e.g. invalid API-key, see #276\n      if (!controlsArray) return;\n\n      const index = controlsArray.indexOf(controlContainer);\n      controls.removeAt(index);\n    };\n  }, [controlContainer, map, position]);\n\n  return createPortal(children, controlContainer);\n};\n","/* eslint-disable complexity */\nimport React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react';\n\nimport {useMap} from '../hooks/use-map';\n\nimport type {Ref} from 'react';\n\ntype MarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type MarkerProps = Omit<google.maps.MarkerOptions, 'map'> &\n  MarkerEventProps;\n\nexport type MarkerRef = Ref<google.maps.Marker | null>;\n\nfunction useMarker(props: MarkerProps) {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n  const map = useMap();\n\n  const {\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut,\n    ...markerOptions\n  } = props;\n\n  const {position, draggable} = markerOptions;\n\n  // create marker instance and add to the map once the map is available\n  useEffect(() => {\n    if (!map) {\n      if (map === undefined)\n        console.error('<Marker> has to be inside a Map component.');\n\n      return;\n    }\n\n    const newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n\n    return () => {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n    // We do not want to re-render the whole marker when the options change.\n    // Marker options update is handled in a useEffect below.\n    // Excluding markerOptions from dependency array on purpose here.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map]);\n\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(() => {\n    if (!marker) return;\n\n    const m = marker;\n\n    // Add event listeners\n    const gme = google.maps.event;\n\n    if (onClick) gme.addListener(m, 'click', onClick);\n    if (onDrag) gme.addListener(m, 'drag', onDrag);\n    if (onDragStart) gme.addListener(m, 'dragstart', onDragStart);\n    if (onDragEnd) gme.addListener(m, 'dragend', onDragEnd);\n    if (onMouseOver) gme.addListener(m, 'mouseover', onMouseOver);\n    if (onMouseOut) gme.addListener(m, 'mouseout', onMouseOut);\n\n    marker.setDraggable(Boolean(draggable));\n\n    return () => {\n      gme.clearInstanceListeners(m);\n    };\n  }, [\n    marker,\n    draggable,\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut\n  ]);\n\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(() => {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n\n  // update position when changed\n  useEffect(() => {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n\n  return marker;\n}\n\n/**\n * Component to render a marker on a map\n */\nexport const Marker = forwardRef((props: MarkerProps, ref: MarkerRef) => {\n  const marker = useMarker(props);\n\n  useImperativeHandle(ref, () => marker, [marker]);\n\n  return <></>;\n});\n\nexport function useMarkerRef() {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n\n  const refCallback = useCallback((m: google.maps.Marker | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","import {\n  Children,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useMemo\n} from 'react';\nimport {AdvancedMarkerContext} from './advanced-marker';\nimport {createPortal} from 'react-dom';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Props for the Pin component\n */\nexport type PinProps = google.maps.marker.PinElementOptions;\n\n/**\n * Component to configure the appearance of an AdvancedMarker\n */\nexport const Pin = (props: PropsWithChildren<PinProps>) => {\n  const advancedMarker = useContext(AdvancedMarkerContext)?.marker;\n  const glyphContainer = useMemo(() => document.createElement('div'), []);\n\n  // Create Pin View instance\n  useEffect(() => {\n    if (!advancedMarker) {\n      if (advancedMarker === undefined) {\n        console.error(\n          'The <Pin> component can only be used inside <AdvancedMarker>.'\n        );\n      }\n\n      return;\n    }\n\n    if (props.glyph && props.children) {\n      logErrorOnce(\n        'The <Pin> component only uses children to render the glyph if both the glyph property and children are present.'\n      );\n    }\n\n    if (Children.count(props.children) > 1) {\n      logErrorOnce(\n        'Passing multiple children to the <Pin> component might lead to unexpected results.'\n      );\n    }\n\n    const pinViewOptions: google.maps.marker.PinElementOptions = {\n      ...props\n    };\n\n    const pinElement = new google.maps.marker.PinElement(pinViewOptions);\n\n    // Set glyph to glyph container if children are present (rendered via portal).\n    // If both props.glyph and props.children are present, props.children takes priority.\n    if (props.children) {\n      pinElement.glyph = glyphContainer;\n    }\n\n    // Set content of Advanced Marker View to the Pin View element\n    const markerContent = advancedMarker.content?.firstChild;\n\n    while (markerContent?.firstChild) {\n      markerContent.removeChild(markerContent.firstChild);\n    }\n\n    if (markerContent) {\n      markerContent.appendChild(pinElement.element);\n    }\n  }, [advancedMarker, glyphContainer, props]);\n\n  return createPortal(props.children, glyphContainer);\n};\n","const mapLinear = (x: number, a1: number, a2: number, b1: number, b2: number) =>\n  b1 + ((x - a1) * (b2 - b1)) / (a2 - a1);\n\nconst getMapMaxTilt = (zoom: number) => {\n  if (zoom <= 10) {\n    return 30;\n  }\n  if (zoom >= 15.5) {\n    return 67.5;\n  }\n\n  // range [10...14]\n  if (zoom <= 14) {\n    return mapLinear(zoom, 10, 14, 30, 45);\n  }\n\n  // range [14...15.5]\n  return mapLinear(zoom, 14, 15.5, 45, 67.5);\n};\n\n/**\n * Function to limit the tilt range of the Google map when updating the view state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const limitTiltRange = ({viewState}: any) => {\n  const pitch = viewState.pitch;\n  const gmZoom = viewState.zoom + 1;\n  const maxTilt = getMapMaxTilt(gmZoom);\n\n  return {...viewState, fovy: 25, pitch: Math.min(maxTilt, pitch)};\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}